

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Apr 05 19:38:44 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	idataCOMRAM
    56  001676                     __pidataCOMRAM:
    57                           	opt stack 0
    58                           
    59                           ;initializer for _wrap
    60  001676  01                 	db	1
    61                           
    62                           ;initializer for _EWLT_Count
    63  001677  30                 	db	48
    64  001678  30                 	db	48
    65  001679  00                 	db	0
    66                           
    67                           ;initializer for _EW_Count
    68  00167A  30                 	db	48
    69  00167B  30                 	db	48
    70  00167C  00                 	db	0
    71                           
    72                           ;initializer for _NSLT_Count
    73  00167D  30                 	db	48
    74  00167E  30                 	db	48
    75  00167F  00                 	db	0
    76                           
    77                           ;initializer for _NS_Count
    78  001680  30                 	db	48
    79  001681  30                 	db	48
    80  001682  00                 	db	0
    81                           
    82                           ;initializer for _PED_EW_Count
    83  001683  30                 	db	48
    84  001684  30                 	db	48
    85  001685  00                 	db	0
    86                           
    87                           ;initializer for _PED_NS_Count
    88  001686  30                 	db	48
    89  001687  30                 	db	48
    90  001688  00                 	db	0
    91                           
    92                           ;initializer for _Act_Mode_Txt
    93  001689  44                 	db	68
    94  00168A  00                 	db	0
    95                           
    96                           ;initializer for _FlashingR_Txt
    97  00168B  30                 	db	48
    98  00168C  00                 	db	0
    99                           
   100                           ;initializer for _FlashingS_Txt
   101  00168D  30                 	db	48
   102  00168E  00                 	db	0
   103                           
   104                           ;initializer for _SW_EWLT_Txt
   105  00168F  30                 	db	48
   106  001690  00                 	db	0
   107                           
   108                           ;initializer for _SW_EWPED_Txt
   109  001691  30                 	db	48
   110  001692  00                 	db	0
   111                           
   112                           ;initializer for _SW_MODE_Txt
   113  001693  44                 	db	68
   114  001694  00                 	db	0
   115                           
   116                           ;initializer for _SW_NSLT_Txt
   117  001695  30                 	db	48
   118  001696  00                 	db	0
   119                           
   120                           ;initializer for _SW_NSPED_Txt
   121  001697  30                 	db	48
   122  001698  00                 	db	0
   123                           
   124                           	psect	mediumconst
   125  00FD5C                     __pmediumconst:
   126                           	opt stack 0
   127  00FD5C  00                 	db	0
   128  00FD5D                     _font:
   129                           	opt stack 0
   130  00FD5D  00                 	db	0
   131  00FD5E  00                 	db	0
   132  00FD5F  00                 	db	0
   133  00FD60  00                 	db	0
   134  00FD61  00                 	db	0
   135  00FD62  00                 	db	0
   136  00FD63  00                 	db	0
   137  00FD64  5F                 	db	95
   138  00FD65  00                 	db	0
   139  00FD66  00                 	db	0
   140  00FD67  00                 	db	0
   141  00FD68  07                 	db	7
   142  00FD69  00                 	db	0
   143  00FD6A  07                 	db	7
   144  00FD6B  00                 	db	0
   145  00FD6C  14                 	db	20
   146  00FD6D  7F                 	db	127
   147  00FD6E  14                 	db	20
   148  00FD6F  7F                 	db	127
   149  00FD70  14                 	db	20
   150  00FD71  24                 	db	36
   151  00FD72  2A                 	db	42
   152  00FD73  7F                 	db	127
   153  00FD74  2A                 	db	42
   154  00FD75  12                 	db	18
   155  00FD76  23                 	db	35
   156  00FD77  13                 	db	19
   157  00FD78  08                 	db	8
   158  00FD79  64                 	db	100
   159  00FD7A  62                 	db	98
   160  00FD7B  36                 	db	54
   161  00FD7C  49                 	db	73
   162  00FD7D  56                 	db	86
   163  00FD7E  20                 	db	32
   164  00FD7F  50                 	db	80
   165  00FD80  00                 	db	0
   166  00FD81  08                 	db	8
   167  00FD82  07                 	db	7
   168  00FD83  03                 	db	3
   169  00FD84  00                 	db	0
   170  00FD85  00                 	db	0
   171  00FD86  1C                 	db	28
   172  00FD87  22                 	db	34
   173  00FD88  41                 	db	65
   174  00FD89  00                 	db	0
   175  00FD8A  00                 	db	0
   176  00FD8B  41                 	db	65
   177  00FD8C  22                 	db	34
   178  00FD8D  1C                 	db	28
   179  00FD8E  00                 	db	0
   180  00FD8F  2A                 	db	42
   181  00FD90  1C                 	db	28
   182  00FD91  7F                 	db	127
   183  00FD92  1C                 	db	28
   184  00FD93  2A                 	db	42
   185  00FD94  08                 	db	8
   186  00FD95  08                 	db	8
   187  00FD96  3E                 	db	62
   188  00FD97  08                 	db	8
   189  00FD98  08                 	db	8
   190  00FD99  00                 	db	0
   191  00FD9A  80                 	db	128
   192  00FD9B  70                 	db	112
   193  00FD9C  30                 	db	48
   194  00FD9D  00                 	db	0
   195  00FD9E  08                 	db	8
   196  00FD9F  08                 	db	8
   197  00FDA0  08                 	db	8
   198  00FDA1  08                 	db	8
   199  00FDA2  08                 	db	8
   200  00FDA3  00                 	db	0
   201  00FDA4  00                 	db	0
   202  00FDA5  60                 	db	96
   203  00FDA6  60                 	db	96
   204  00FDA7  00                 	db	0
   205  00FDA8  20                 	db	32
   206  00FDA9  10                 	db	16
   207  00FDAA  08                 	db	8
   208  00FDAB  04                 	db	4
   209  00FDAC  02                 	db	2
   210  00FDAD  3E                 	db	62
   211  00FDAE  51                 	db	81
   212  00FDAF  49                 	db	73
   213  00FDB0  45                 	db	69
   214  00FDB1  3E                 	db	62
   215  00FDB2  00                 	db	0
   216  00FDB3  42                 	db	66
   217  00FDB4  7F                 	db	127
   218  00FDB5  40                 	db	64
   219  00FDB6  00                 	db	0
   220  00FDB7  72                 	db	114
   221  00FDB8  49                 	db	73
   222  00FDB9  49                 	db	73
   223  00FDBA  49                 	db	73
   224  00FDBB  46                 	db	70
   225  00FDBC  21                 	db	33
   226  00FDBD  41                 	db	65
   227  00FDBE  49                 	db	73
   228  00FDBF  4D                 	db	77
   229  00FDC0  33                 	db	51
   230  00FDC1  18                 	db	24
   231  00FDC2  14                 	db	20
   232  00FDC3  12                 	db	18
   233  00FDC4  7F                 	db	127
   234  00FDC5  10                 	db	16
   235  00FDC6  27                 	db	39
   236  00FDC7  45                 	db	69
   237  00FDC8  45                 	db	69
   238  00FDC9  45                 	db	69
   239  00FDCA  39                 	db	57
   240  00FDCB  3C                 	db	60
   241  00FDCC  4A                 	db	74
   242  00FDCD  49                 	db	73
   243  00FDCE  49                 	db	73
   244  00FDCF  31                 	db	49
   245  00FDD0  41                 	db	65
   246  00FDD1  21                 	db	33
   247  00FDD2  11                 	db	17
   248  00FDD3  09                 	db	9
   249  00FDD4  07                 	db	7
   250  00FDD5  36                 	db	54
   251  00FDD6  49                 	db	73
   252  00FDD7  49                 	db	73
   253  00FDD8  49                 	db	73
   254  00FDD9  36                 	db	54
   255  00FDDA  46                 	db	70
   256  00FDDB  49                 	db	73
   257  00FDDC  49                 	db	73
   258  00FDDD  29                 	db	41
   259  00FDDE  1E                 	db	30
   260  00FDDF  00                 	db	0
   261  00FDE0  00                 	db	0
   262  00FDE1  14                 	db	20
   263  00FDE2  00                 	db	0
   264  00FDE3  00                 	db	0
   265  00FDE4  00                 	db	0
   266  00FDE5  40                 	db	64
   267  00FDE6  34                 	db	52
   268  00FDE7  00                 	db	0
   269  00FDE8  00                 	db	0
   270  00FDE9  00                 	db	0
   271  00FDEA  08                 	db	8
   272  00FDEB  14                 	db	20
   273  00FDEC  22                 	db	34
   274  00FDED  41                 	db	65
   275  00FDEE  14                 	db	20
   276  00FDEF  14                 	db	20
   277  00FDF0  14                 	db	20
   278  00FDF1  14                 	db	20
   279  00FDF2  14                 	db	20
   280  00FDF3  00                 	db	0
   281  00FDF4  41                 	db	65
   282  00FDF5  22                 	db	34
   283  00FDF6  14                 	db	20
   284  00FDF7  08                 	db	8
   285  00FDF8  02                 	db	2
   286  00FDF9  01                 	db	1
   287  00FDFA  59                 	db	89
   288  00FDFB  09                 	db	9
   289  00FDFC  06                 	db	6
   290  00FDFD  3E                 	db	62
   291  00FDFE  41                 	db	65
   292  00FDFF  5D                 	db	93
   293  00FE00  59                 	db	89
   294  00FE01  4E                 	db	78
   295  00FE02  7C                 	db	124
   296  00FE03  12                 	db	18
   297  00FE04  11                 	db	17
   298  00FE05  12                 	db	18
   299  00FE06  7C                 	db	124
   300  00FE07  7F                 	db	127
   301  00FE08  49                 	db	73
   302  00FE09  49                 	db	73
   303  00FE0A  49                 	db	73
   304  00FE0B  36                 	db	54
   305  00FE0C  3E                 	db	62
   306  00FE0D  41                 	db	65
   307  00FE0E  41                 	db	65
   308  00FE0F  41                 	db	65
   309  00FE10  22                 	db	34
   310  00FE11  7F                 	db	127
   311  00FE12  41                 	db	65
   312  00FE13  41                 	db	65
   313  00FE14  41                 	db	65
   314  00FE15  3E                 	db	62
   315  00FE16  7F                 	db	127
   316  00FE17  49                 	db	73
   317  00FE18  49                 	db	73
   318  00FE19  49                 	db	73
   319  00FE1A  41                 	db	65
   320  00FE1B  7F                 	db	127
   321  00FE1C  09                 	db	9
   322  00FE1D  09                 	db	9
   323  00FE1E  09                 	db	9
   324  00FE1F  01                 	db	1
   325  00FE20  3E                 	db	62
   326  00FE21  41                 	db	65
   327  00FE22  41                 	db	65
   328  00FE23  51                 	db	81
   329  00FE24  73                 	db	115
   330  00FE25  7F                 	db	127
   331  00FE26  08                 	db	8
   332  00FE27  08                 	db	8
   333  00FE28  08                 	db	8
   334  00FE29  7F                 	db	127
   335  00FE2A  00                 	db	0
   336  00FE2B  41                 	db	65
   337  00FE2C  7F                 	db	127
   338  00FE2D  41                 	db	65
   339  00FE2E  00                 	db	0
   340  00FE2F  20                 	db	32
   341  00FE30  40                 	db	64
   342  00FE31  41                 	db	65
   343  00FE32  3F                 	db	63
   344  00FE33  01                 	db	1
   345  00FE34  7F                 	db	127
   346  00FE35  08                 	db	8
   347  00FE36  14                 	db	20
   348  00FE37  22                 	db	34
   349  00FE38  41                 	db	65
   350  00FE39  7F                 	db	127
   351  00FE3A  40                 	db	64
   352  00FE3B  40                 	db	64
   353  00FE3C  40                 	db	64
   354  00FE3D  40                 	db	64
   355  00FE3E  7F                 	db	127
   356  00FE3F  02                 	db	2
   357  00FE40  1C                 	db	28
   358  00FE41  02                 	db	2
   359  00FE42  7F                 	db	127
   360  00FE43  7F                 	db	127
   361  00FE44  04                 	db	4
   362  00FE45  08                 	db	8
   363  00FE46  10                 	db	16
   364  00FE47  7F                 	db	127
   365  00FE48  3E                 	db	62
   366  00FE49  41                 	db	65
   367  00FE4A  41                 	db	65
   368  00FE4B  41                 	db	65
   369  00FE4C  3E                 	db	62
   370  00FE4D  7F                 	db	127
   371  00FE4E  09                 	db	9
   372  00FE4F  09                 	db	9
   373  00FE50  09                 	db	9
   374  00FE51  06                 	db	6
   375  00FE52  3E                 	db	62
   376  00FE53  41                 	db	65
   377  00FE54  51                 	db	81
   378  00FE55  21                 	db	33
   379  00FE56  5E                 	db	94
   380  00FE57  7F                 	db	127
   381  00FE58  09                 	db	9
   382  00FE59  19                 	db	25
   383  00FE5A  29                 	db	41
   384  00FE5B  46                 	db	70
   385  00FE5C                     __end_of_font:
   386                           	opt stack 0
   387  00FE5C                     _font2:
   388                           	opt stack 0
   389  00FE5C  26                 	db	38
   390  00FE5D  49                 	db	73
   391  00FE5E  49                 	db	73
   392  00FE5F  49                 	db	73
   393  00FE60  32                 	db	50
   394  00FE61  03                 	db	3
   395  00FE62  01                 	db	1
   396  00FE63  7F                 	db	127
   397  00FE64  01                 	db	1
   398  00FE65  03                 	db	3
   399  00FE66  3F                 	db	63
   400  00FE67  40                 	db	64
   401  00FE68  40                 	db	64
   402  00FE69  40                 	db	64
   403  00FE6A  3F                 	db	63
   404  00FE6B  1F                 	db	31
   405  00FE6C  20                 	db	32
   406  00FE6D  40                 	db	64
   407  00FE6E  20                 	db	32
   408  00FE6F  1F                 	db	31
   409  00FE70  3F                 	db	63
   410  00FE71  40                 	db	64
   411  00FE72  38                 	db	56
   412  00FE73  40                 	db	64
   413  00FE74  3F                 	db	63
   414  00FE75  63                 	db	99
   415  00FE76  14                 	db	20
   416  00FE77  08                 	db	8
   417  00FE78  14                 	db	20
   418  00FE79  63                 	db	99
   419  00FE7A  03                 	db	3
   420  00FE7B  04                 	db	4
   421  00FE7C  78                 	db	120
   422  00FE7D  04                 	db	4
   423  00FE7E  03                 	db	3
   424  00FE7F  61                 	db	97
   425  00FE80  59                 	db	89
   426  00FE81  49                 	db	73
   427  00FE82  4D                 	db	77
   428  00FE83  43                 	db	67
   429  00FE84  00                 	db	0
   430  00FE85  7F                 	db	127
   431  00FE86  41                 	db	65
   432  00FE87  41                 	db	65
   433  00FE88  41                 	db	65
   434  00FE89  02                 	db	2
   435  00FE8A  04                 	db	4
   436  00FE8B  08                 	db	8
   437  00FE8C  10                 	db	16
   438  00FE8D  20                 	db	32
   439  00FE8E  00                 	db	0
   440  00FE8F  41                 	db	65
   441  00FE90  41                 	db	65
   442  00FE91  41                 	db	65
   443  00FE92  7F                 	db	127
   444  00FE93  04                 	db	4
   445  00FE94  02                 	db	2
   446  00FE95  01                 	db	1
   447  00FE96  02                 	db	2
   448  00FE97  04                 	db	4
   449  00FE98  40                 	db	64
   450  00FE99  40                 	db	64
   451  00FE9A  40                 	db	64
   452  00FE9B  40                 	db	64
   453  00FE9C  40                 	db	64
   454  00FE9D  00                 	db	0
   455  00FE9E  03                 	db	3
   456  00FE9F  07                 	db	7
   457  00FEA0  08                 	db	8
   458  00FEA1  00                 	db	0
   459  00FEA2  20                 	db	32
   460  00FEA3  54                 	db	84
   461  00FEA4  54                 	db	84
   462  00FEA5  78                 	db	120
   463  00FEA6  40                 	db	64
   464  00FEA7  7F                 	db	127
   465  00FEA8  28                 	db	40
   466  00FEA9  44                 	db	68
   467  00FEAA  44                 	db	68
   468  00FEAB  38                 	db	56
   469  00FEAC  38                 	db	56
   470  00FEAD  44                 	db	68
   471  00FEAE  44                 	db	68
   472  00FEAF  44                 	db	68
   473  00FEB0  28                 	db	40
   474  00FEB1  38                 	db	56
   475  00FEB2  44                 	db	68
   476  00FEB3  44                 	db	68
   477  00FEB4  28                 	db	40
   478  00FEB5  7F                 	db	127
   479  00FEB6  38                 	db	56
   480  00FEB7  54                 	db	84
   481  00FEB8  54                 	db	84
   482  00FEB9  54                 	db	84
   483  00FEBA  18                 	db	24
   484  00FEBB  00                 	db	0
   485  00FEBC  08                 	db	8
   486  00FEBD  7E                 	db	126
   487  00FEBE  09                 	db	9
   488  00FEBF  02                 	db	2
   489  00FEC0  18                 	db	24
   490  00FEC1  A4                 	db	164
   491  00FEC2  A4                 	db	164
   492  00FEC3  9C                 	db	156
   493  00FEC4  78                 	db	120
   494  00FEC5  7F                 	db	127
   495  00FEC6  08                 	db	8
   496  00FEC7  04                 	db	4
   497  00FEC8  04                 	db	4
   498  00FEC9  78                 	db	120
   499  00FECA  00                 	db	0
   500  00FECB  44                 	db	68
   501  00FECC  7D                 	db	125
   502  00FECD  40                 	db	64
   503  00FECE  00                 	db	0
   504  00FECF  20                 	db	32
   505  00FED0  40                 	db	64
   506  00FED1  40                 	db	64
   507  00FED2  3D                 	db	61
   508  00FED3  00                 	db	0
   509  00FED4  7F                 	db	127
   510  00FED5  10                 	db	16
   511  00FED6  28                 	db	40
   512  00FED7  44                 	db	68
   513  00FED8  00                 	db	0
   514  00FED9  00                 	db	0
   515  00FEDA  41                 	db	65
   516  00FEDB  7F                 	db	127
   517  00FEDC  40                 	db	64
   518  00FEDD  00                 	db	0
   519  00FEDE  7C                 	db	124
   520  00FEDF  04                 	db	4
   521  00FEE0  78                 	db	120
   522  00FEE1  04                 	db	4
   523  00FEE2  78                 	db	120
   524  00FEE3  7C                 	db	124
   525  00FEE4  08                 	db	8
   526  00FEE5  04                 	db	4
   527  00FEE6  04                 	db	4
   528  00FEE7  78                 	db	120
   529  00FEE8  38                 	db	56
   530  00FEE9  44                 	db	68
   531  00FEEA  44                 	db	68
   532  00FEEB  44                 	db	68
   533  00FEEC  38                 	db	56
   534  00FEED  FC                 	db	252
   535  00FEEE  18                 	db	24
   536  00FEEF  24                 	db	36
   537  00FEF0  24                 	db	36
   538  00FEF1  18                 	db	24
   539  00FEF2  18                 	db	24
   540  00FEF3  24                 	db	36
   541  00FEF4  24                 	db	36
   542  00FEF5  18                 	db	24
   543  00FEF6  FC                 	db	252
   544  00FEF7  7C                 	db	124
   545  00FEF8  08                 	db	8
   546  00FEF9  04                 	db	4
   547  00FEFA  04                 	db	4
   548  00FEFB  08                 	db	8
   549  00FEFC  48                 	db	72
   550  00FEFD  54                 	db	84
   551  00FEFE  54                 	db	84
   552  00FEFF  54                 	db	84
   553  00FF00  24                 	db	36
   554  00FF01  04                 	db	4
   555  00FF02  04                 	db	4
   556  00FF03  3F                 	db	63
   557  00FF04  44                 	db	68
   558  00FF05  24                 	db	36
   559  00FF06  3C                 	db	60
   560  00FF07  40                 	db	64
   561  00FF08  40                 	db	64
   562  00FF09  20                 	db	32
   563  00FF0A  7C                 	db	124
   564  00FF0B  1C                 	db	28
   565  00FF0C  20                 	db	32
   566  00FF0D  40                 	db	64
   567  00FF0E  20                 	db	32
   568  00FF0F  1C                 	db	28
   569  00FF10  3C                 	db	60
   570  00FF11  40                 	db	64
   571  00FF12  30                 	db	48
   572  00FF13  40                 	db	64
   573  00FF14  3C                 	db	60
   574  00FF15  44                 	db	68
   575  00FF16  28                 	db	40
   576  00FF17  10                 	db	16
   577  00FF18  28                 	db	40
   578  00FF19  44                 	db	68
   579  00FF1A  4C                 	db	76
   580  00FF1B  90                 	db	144
   581  00FF1C  90                 	db	144
   582  00FF1D  90                 	db	144
   583  00FF1E  7C                 	db	124
   584  00FF1F  44                 	db	68
   585  00FF20  64                 	db	100
   586  00FF21  54                 	db	84
   587  00FF22  4C                 	db	76
   588  00FF23  44                 	db	68
   589  00FF24  00                 	db	0
   590  00FF25  08                 	db	8
   591  00FF26  36                 	db	54
   592  00FF27  41                 	db	65
   593  00FF28  00                 	db	0
   594  00FF29  00                 	db	0
   595  00FF2A  00                 	db	0
   596  00FF2B  77                 	db	119
   597  00FF2C  00                 	db	0
   598  00FF2D  00                 	db	0
   599  00FF2E  00                 	db	0
   600  00FF2F  41                 	db	65
   601  00FF30  36                 	db	54
   602  00FF31  08                 	db	8
   603  00FF32  00                 	db	0
   604  00FF33  02                 	db	2
   605  00FF34  01                 	db	1
   606  00FF35  02                 	db	2
   607  00FF36  04                 	db	4
   608  00FF37  02                 	db	2
   609  00FF38                     __end_of_font2:
   610                           	opt stack 0
   611  0000                     _ADCON0	set	4034
   612  0000                     _ADCON0bits	set	4034
   613  0000                     _ADCON1	set	4033
   614  0000                     _ADCON2	set	4032
   615  0000                     _ADRESH	set	4036
   616  0000                     _ADRESL	set	4035
   617  0000                     _CCP2CON	set	4026
   618  0000                     _CCPR2L	set	4027
   619  0000                     _INTCON2bits	set	4081
   620  0000                     _INTCON3bits	set	4080
   621  0000                     _INTCONbits	set	4082
   622  0000                     _OSCCON	set	4051
   623  0000                     _PIE1bits	set	3997
   624  0000                     _PIR1bits	set	3998
   625  0000                     _PIR2bits	set	4001
   626  0000                     _PORTAbits	set	3968
   627  0000                     _PORTBbits	set	3969
   628  0000                     _PORTCbits	set	3970
   629  0000                     _PORTDbits	set	3971
   630  0000                     _PORTEbits	set	3972
   631  0000                     _PR2	set	4043
   632  0000                     _RCSTA	set	4011
   633  0000                     _RCSTAbits	set	4011
   634  0000                     _SPBRG	set	4015
   635  0000                     _SPBRGH	set	4016
   636  0000                     _SSPBUF	set	4041
   637  0000                     _SSPCON1	set	4038
   638  0000                     _SSPSTAT	set	4039
   639  0000                     _SSPSTATbits	set	4039
   640  0000                     _T0CON	set	4053
   641  0000                     _T0CONbits	set	4053
   642  0000                     _T2CON	set	4042
   643  0000                     _T3CON	set	4017
   644  0000                     _T3CONbits	set	4017
   645  0000                     _TMR0H	set	4055
   646  0000                     _TMR0L	set	4054
   647  0000                     _TRISA	set	3986
   648  0000                     _TRISB	set	3987
   649  0000                     _TRISC	set	3988
   650  0000                     _TRISCbits	set	3988
   651  0000                     _TRISD	set	3989
   652  0000                     _TRISE	set	3990
   653  0000                     _TXREG	set	4013
   654  0000                     _TXSTA	set	4012
   655  0000                     _TXSTAbits	set	4012
   656  0000                     _RBPU	set	32655
   657  0000                     _TRMT	set	32097
   658  00FF38                     STR_13:
   659  00FF38  49                 	db	73	;'I'
   660  00FF39  4E                 	db	78	;'N'
   661  00FF3A  54                 	db	84	;'T'
   662  00FF3B  30                 	db	48	;'0'
   663  00FF3C  20                 	db	32
   664  00FF3D  69                 	db	105	;'i'
   665  00FF3E  6E                 	db	110	;'n'
   666  00FF3F  74                 	db	116	;'t'
   667  00FF40  65                 	db	101	;'e'
   668  00FF41  72                 	db	114	;'r'
   669  00FF42  72                 	db	114	;'r'
   670  00FF43  75                 	db	117	;'u'
   671  00FF44  70                 	db	112	;'p'
   672  00FF45  74                 	db	116	;'t'
   673  00FF46  20                 	db	32
   674  00FF47  70                 	db	112	;'p'
   675  00FF48  69                 	db	105	;'i'
   676  00FF49  6E                 	db	110	;'n'
   677  00FF4A  20                 	db	32
   678  00FF4B  64                 	db	100	;'d'
   679  00FF4C  65                 	db	101	;'e'
   680  00FF4D  74                 	db	116	;'t'
   681  00FF4E  65                 	db	101	;'e'
   682  00FF4F  63                 	db	99	;'c'
   683  00FF50  74                 	db	116	;'t'
   684  00FF51  65                 	db	101	;'e'
   685  00FF52  64                 	db	100	;'d'
   686  00FF53  20                 	db	32
   687  00FF54  0D                 	db	13
   688  00FF55  0A                 	db	10
   689  00FF56  00                 	db	0
   690  00FF57                     STR_14:
   691  00FF57  49                 	db	73	;'I'
   692  00FF58  4E                 	db	78	;'N'
   693  00FF59  54                 	db	84	;'T'
   694  00FF5A  31                 	db	49	;'1'
   695  00FF5B  20                 	db	32
   696  00FF5C  69                 	db	105	;'i'
   697  00FF5D  6E                 	db	110	;'n'
   698  00FF5E  74                 	db	116	;'t'
   699  00FF5F  65                 	db	101	;'e'
   700  00FF60  72                 	db	114	;'r'
   701  00FF61  72                 	db	114	;'r'
   702  00FF62  75                 	db	117	;'u'
   703  00FF63  70                 	db	112	;'p'
   704  00FF64  74                 	db	116	;'t'
   705  00FF65  20                 	db	32
   706  00FF66  70                 	db	112	;'p'
   707  00FF67  69                 	db	105	;'i'
   708  00FF68  6E                 	db	110	;'n'
   709  00FF69  20                 	db	32
   710  00FF6A  64                 	db	100	;'d'
   711  00FF6B  65                 	db	101	;'e'
   712  00FF6C  74                 	db	116	;'t'
   713  00FF6D  65                 	db	101	;'e'
   714  00FF6E  63                 	db	99	;'c'
   715  00FF6F  74                 	db	116	;'t'
   716  00FF70  65                 	db	101	;'e'
   717  00FF71  64                 	db	100	;'d'
   718  00FF72  20                 	db	32
   719  00FF73  0D                 	db	13
   720  00FF74  0A                 	db	10
   721  00FF75  00                 	db	0
   722  00FF76                     STR_15:
   723  00FF76  49                 	db	73	;'I'
   724  00FF77  4E                 	db	78	;'N'
   725  00FF78  54                 	db	84	;'T'
   726  00FF79  32                 	db	50	;'2'
   727  00FF7A  20                 	db	32
   728  00FF7B  69                 	db	105	;'i'
   729  00FF7C  6E                 	db	110	;'n'
   730  00FF7D  74                 	db	116	;'t'
   731  00FF7E  65                 	db	101	;'e'
   732  00FF7F  72                 	db	114	;'r'
   733  00FF80  72                 	db	114	;'r'
   734  00FF81  75                 	db	117	;'u'
   735  00FF82  70                 	db	112	;'p'
   736  00FF83  74                 	db	116	;'t'
   737  00FF84  20                 	db	32
   738  00FF85  70                 	db	112	;'p'
   739  00FF86  69                 	db	105	;'i'
   740  00FF87  6E                 	db	110	;'n'
   741  00FF88  20                 	db	32
   742  00FF89  64                 	db	100	;'d'
   743  00FF8A  65                 	db	101	;'e'
   744  00FF8B  74                 	db	116	;'t'
   745  00FF8C  65                 	db	101	;'e'
   746  00FF8D  63                 	db	99	;'c'
   747  00FF8E  74                 	db	116	;'t'
   748  00FF8F  65                 	db	101	;'e'
   749  00FF90  64                 	db	100	;'d'
   750  00FF91  20                 	db	32
   751  00FF92  0D                 	db	13
   752  00FF93  0A                 	db	10
   753  00FF94  00                 	db	0
   754  00FF95                     STR_1:
   755  00FF95  45                 	db	69	;'E'
   756  00FF96  43                 	db	67	;'C'
   757  00FF97  45                 	db	69	;'E'
   758  00FF98  33                 	db	51	;'3'
   759  00FF99  33                 	db	51	;'3'
   760  00FF9A  30                 	db	48	;'0'
   761  00FF9B  31                 	db	49	;'1'
   762  00FF9C  4C                 	db	76	;'L'
   763  00FF9D  20                 	db	32
   764  00FF9E  53                 	db	83	;'S'
   765  00FF9F  70                 	db	112	;'p'
   766  00FFA0  72                 	db	114	;'r'
   767  00FFA1  69                 	db	105	;'i'
   768  00FFA2  6E                 	db	110	;'n'
   769  00FFA3  67                 	db	103	;'g'
   770  00FFA4  20                 	db	32
   771  00FFA5  32                 	db	50	;'2'
   772  00FFA6  31                 	db	49	;'1'
   773  00FFA7  2D                 	db	45
   774  00FFA8  53                 	db	83	;'S'
   775  00FFA9  31                 	db	49	;'1'
   776  00FFAA  00                 	db	0
   777  00FFAB                     STR_12:
   778  00FFAB  45                 	db	69	;'E'
   779  00FFAC  57                 	db	87	;'W'
   780  00FFAD  50                 	db	80	;'P'
   781  00FFAE  20                 	db	32
   782  00FFAF  45                 	db	69	;'E'
   783  00FFB0  57                 	db	87	;'W'
   784  00FFB1  4C                 	db	76	;'L'
   785  00FFB2  54                 	db	84	;'T'
   786  00FFB3  20                 	db	32
   787  00FFB4  4E                 	db	78	;'N'
   788  00FFB5  53                 	db	83	;'S'
   789  00FFB6  50                 	db	80	;'P'
   790  00FFB7  20                 	db	32
   791  00FFB8  4E                 	db	78	;'N'
   792  00FFB9  53                 	db	83	;'S'
   793  00FFBA  4C                 	db	76	;'L'
   794  00FFBB  54                 	db	84	;'T'
   795  00FFBC  20                 	db	32
   796  00FFBD  4D                 	db	77	;'M'
   797  00FFBE  44                 	db	68	;'D'
   798  00FFBF  00                 	db	0
   799  00FFC0                     STR_8:
   800  00FFC0  4E                 	db	78	;'N'
   801  00FFC1  4F                 	db	79	;'O'
   802  00FFC2  52                 	db	82	;'R'
   803  00FFC3  54                 	db	84	;'T'
   804  00FFC4  48                 	db	72	;'H'
   805  00FFC5  2F                 	db	47
   806  00FFC6  53                 	db	83	;'S'
   807  00FFC7  4F                 	db	79	;'O'
   808  00FFC8  55                 	db	85	;'U'
   809  00FFC9  54                 	db	84	;'T'
   810  00FFCA  48                 	db	72	;'H'
   811  00FFCB  00                 	db	0
   812  00FFCC                     STR_6:
   813  00FFCC  45                 	db	69	;'E'
   814  00FFCD  41                 	db	65	;'A'
   815  00FFCE  53                 	db	83	;'S'
   816  00FFCF  54                 	db	84	;'T'
   817  00FFD0  2F                 	db	47
   818  00FFD1  57                 	db	87	;'W'
   819  00FFD2  45                 	db	69	;'E'
   820  00FFD3  53                 	db	83	;'S'
   821  00FFD4  54                 	db	84	;'T'
   822  00FFD5  00                 	db	0
   823  00FFD6                     STR_9:
   824  00FFD6  4E                 	db	78	;'N'
   825  00FFD7  2F                 	db	47
   826  00FFD8  53                 	db	83	;'S'
   827  00FFD9  20                 	db	32
   828  00FFDA  4C                 	db	76	;'L'
   829  00FFDB  54                 	db	84	;'T'
   830  00FFDC  00                 	db	0
   831  00FFDD                     STR_7:
   832  00FFDD  45                 	db	69	;'E'
   833  00FFDE  2F                 	db	47
   834  00FFDF  57                 	db	87	;'W'
   835  00FFE0  20                 	db	32
   836  00FFE1  4C                 	db	76	;'L'
   837  00FFE2  54                 	db	84	;'T'
   838  00FFE3  00                 	db	0
   839  00FFE4                     STR_2:
   840  00FFE4  4D                 	db	77	;'M'
   841  00FFE5  6F                 	db	111	;'o'
   842  00FFE6  64                 	db	100	;'d'
   843  00FFE7  65                 	db	101	;'e'
   844  00FFE8  3A                 	db	58	;':'
   845  00FFE9  00                 	db	0
   846  00FFEA                     STR_3:
   847  00FFEA  46                 	db	70	;'F'
   848  00FFEB  52                 	db	82	;'R'
   849  00FFEC  3A                 	db	58	;':'
   850  00FFED  00                 	db	0
   851  00FFEE                     STR_4:
   852  00FFEE  46                 	db	70	;'F'
   853  00FFEF  53                 	db	83	;'S'
   854  00FFF0  3A                 	db	58	;':'
   855  00FFF1  00                 	db	0
   856  00FFF2                     STR_11:
   857  00FFF2  50                 	db	80	;'P'
   858  00FFF3  4E                 	db	78	;'N'
   859  00FFF4  53                 	db	83	;'S'
   860  00FFF5  00                 	db	0
   861  00FFF6                     STR_10:
   862  00FFF6  50                 	db	80	;'P'
   863  00FFF7  45                 	db	69	;'E'
   864  00FFF8  57                 	db	87	;'W'
   865  00FFF9  00                 	db	0
   866  00FFFA  20                 	db	32
   867  00FFFB  00                 	db	0
   868  00FFFC                     STR_5:
   869  00FFFC  2A                 	db	42
   870  00FFFD  00                 	db	0
   871  0000                     
   872                           ; #config settings
   873  00FFFE  00                 	db	0	; dummy byte at the end
   874  0000                     
   875                           	psect	cinit
   876  0014AE                     __pcinit:
   877                           	opt stack 0
   878  0014AE                     start_initialization:
   879                           	opt stack 0
   880  0014AE                     __initialization:
   881                           	opt stack 0
   882                           
   883                           ; Clear objects allocated to BANK0 (38 bytes)
   884  0014AE  EE00  F080         	lfsr	0,__pbssBANK0
   885  0014B2  0E26               	movlw	38
   886  0014B4                     clear_0:
   887  0014B4  6AEE               	clrf	postinc0,c
   888  0014B6  06E8               	decf	wreg,f,c
   889  0014B8  E1FD               	bnz	clear_0
   890                           
   891                           ; Clear objects allocated to COMRAM (20 bytes)
   892  0014BA  EE00  F05C         	lfsr	0,__pbssCOMRAM
   893  0014BE  0E14               	movlw	20
   894  0014C0                     clear_1:
   895  0014C0  6AEE               	clrf	postinc0,c
   896  0014C2  06E8               	decf	wreg,f,c
   897  0014C4  E1FD               	bnz	clear_1
   898                           
   899                           ; Initialize objects allocated to COMRAM (35 bytes)
   900                           ; load TBLPTR registers with __pidataCOMRAM
   901  0014C6  0E76               	movlw	low __pidataCOMRAM
   902  0014C8  6EF6               	movwf	tblptrl,c
   903  0014CA  0E16               	movlw	high __pidataCOMRAM
   904  0014CC  6EF7               	movwf	tblptrh,c
   905  0014CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   906  0014D0  6EF8               	movwf	tblptru,c
   907  0014D2  EE00  F039         	lfsr	0,__pdataCOMRAM
   908  0014D6  EE10 F023          	lfsr	1,35
   909  0014DA                     copy_data0:
   910  0014DA  0009               	tblrd		*+
   911  0014DC  CFF5 FFEE          	movff	tablat,postinc0
   912  0014E0  50E5               	movf	postdec1,w,c
   913  0014E2  50E1               	movf	fsr1l,w,c
   914  0014E4  E1FA               	bnz	copy_data0
   915  0014E6                     end_of_initialization:
   916                           	opt stack 0
   917  0014E6                     __end_of__initialization:
   918                           	opt stack 0
   919  0014E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   920  0014E8  6EF8               	movwf	tblptru,c
   921  0014EA  0100               	movlb	0
   922  0014EC  EF4D  F009         	goto	_main	;jump to C main() function
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           fsr1l	equ	0xFE1
   931                           
   932                           	psect	bssCOMRAM
   933  00005C                     __pbssCOMRAM:
   934                           	opt stack 0
   935  00005C                     _INT0_flag:
   936                           	opt stack 0
   937  00005C                     	ds	2
   938  00005E                     _INT1_flag:
   939                           	opt stack 0
   940  00005E                     	ds	2
   941  000060                     _INT2_flag:
   942                           	opt stack 0
   943  000060                     	ds	2
   944  000062                     _txt:
   945                           	opt stack 0
   946  000062                     	ds	2
   947  000064                     _Count:
   948                           	opt stack 0
   949  000064                     	ds	1
   950  000065                     _PED_Count:
   951                           	opt stack 0
   952  000065                     	ds	1
   953  000066                     _SW_EWLT:
   954                           	opt stack 0
   955  000066                     	ds	1
   956  000067                     _SW_EWPED:
   957                           	opt stack 0
   958  000067                     	ds	1
   959  000068                     _SW_MODE:
   960                           	opt stack 0
   961  000068                     	ds	1
   962  000069                     _SW_NSLT:
   963                           	opt stack 0
   964  000069                     	ds	1
   965  00006A                     _SW_NSPED:
   966                           	opt stack 0
   967  00006A                     	ds	1
   968  00006B                     __tft_type:
   969                           	opt stack 0
   970  00006B                     	ds	1
   971  00006C                     _colstart:
   972                           	opt stack 0
   973  00006C                     	ds	1
   974  00006D                     _dir:
   975                           	opt stack 0
   976  00006D                     	ds	1
   977  00006E                     _direction:
   978                           	opt stack 0
   979  00006E                     	ds	1
   980  00006F                     _rowstart:
   981                           	opt stack 0
   982  00006F                     	ds	1
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           postdec1	equ	0xFE5
   990                           fsr1l	equ	0xFE1
   991                           
   992                           	psect	dataCOMRAM
   993  000039                     __pdataCOMRAM:
   994                           	opt stack 0
   995  000039                     _wrap:
   996                           	opt stack 0
   997  000039                     	ds	1
   998  00003A                     _EWLT_Count:
   999                           	opt stack 0
  1000  00003A                     	ds	3
  1001  00003D                     _EW_Count:
  1002                           	opt stack 0
  1003  00003D                     	ds	3
  1004  000040                     _NSLT_Count:
  1005                           	opt stack 0
  1006  000040                     	ds	3
  1007  000043                     _NS_Count:
  1008                           	opt stack 0
  1009  000043                     	ds	3
  1010  000046                     _PED_EW_Count:
  1011                           	opt stack 0
  1012  000046                     	ds	3
  1013  000049                     _PED_NS_Count:
  1014                           	opt stack 0
  1015  000049                     	ds	3
  1016  00004C                     _Act_Mode_Txt:
  1017                           	opt stack 0
  1018  00004C                     	ds	2
  1019  00004E                     _FlashingR_Txt:
  1020                           	opt stack 0
  1021  00004E                     	ds	2
  1022  000050                     _FlashingS_Txt:
  1023                           	opt stack 0
  1024  000050                     	ds	2
  1025  000052                     _SW_EWLT_Txt:
  1026                           	opt stack 0
  1027  000052                     	ds	2
  1028  000054                     _SW_EWPED_Txt:
  1029                           	opt stack 0
  1030  000054                     	ds	2
  1031  000056                     _SW_MODE_Txt:
  1032                           	opt stack 0
  1033  000056                     	ds	2
  1034  000058                     _SW_NSLT_Txt:
  1035                           	opt stack 0
  1036  000058                     	ds	2
  1037  00005A                     _SW_NSPED_Txt:
  1038                           	opt stack 0
  1039  00005A                     	ds	2
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           postinc0	equ	0xFEE
  1045                           wreg	equ	0xFE8
  1046                           postdec1	equ	0xFE5
  1047                           fsr1l	equ	0xFE1
  1048                           
  1049                           	psect	bssBANK0
  1050  000080                     __pbssBANK0:
  1051                           	opt stack 0
  1052  000080                     _volt:
  1053                           	opt stack 0
  1054  000080                     	ds	3
  1055  000083                     _MODE:
  1056                           	opt stack 0
  1057  000083                     	ds	2
  1058  000085                     _nbr:
  1059                           	opt stack 0
  1060  000085                     	ds	2
  1061  000087                     _buffer:
  1062                           	opt stack 0
  1063  000087                     	ds	31
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           postdec1	equ	0xFE5
  1071                           fsr1l	equ	0xFE1
  1072                           
  1073                           	psect	cstackBANK0
  1074  0000A6                     __pcstackBANK0:
  1075                           	opt stack 0
  1076  0000A6                     drawtext@y:
  1077                           	opt stack 0
  1078  0000A6                     fillCircle@x0:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x0
  1082  0000A6                     	ds	1
  1083  0000A7                     drawtext@_text:
  1084                           	opt stack 0
  1085                           
  1086                           ; 2 bytes @ 0x1
  1087  0000A7                     	ds	1
  1088  0000A8                     fillCircle@y0:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x2
  1092  0000A8                     	ds	1
  1093  0000A9                     drawtext@color:
  1094                           	opt stack 0
  1095                           
  1096                           ; 2 bytes @ 0x3
  1097  0000A9                     	ds	1
  1098  0000AA                     fillCircle@r:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x4
  1102  0000AA                     	ds	1
  1103  0000AB                     drawtext@bg:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x5
  1107  0000AB                     	ds	1
  1108  0000AC                     fillCircle@color:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x6
  1112  0000AC                     	ds	1
  1113  0000AD                     drawtext@size:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x7
  1117  0000AD                     	ds	1
  1118  0000AE                     drawtext@x:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x8
  1122  0000AE                     	ds	1
  1123  0000AF                     drawtext@textsize:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x9
  1127  0000AF                     	ds	2
  1128  0000B1                     drawtext@i:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0xB
  1132  0000B1                     	ds	2
  1133  0000B3                     drawtext@cursor_y:
  1134                           	opt stack 0
  1135                           
  1136                           ; 1 bytes @ 0xD
  1137  0000B3                     	ds	1
  1138  0000B4                     drawtext@cursor_x:
  1139                           	opt stack 0
  1140                           
  1141                           ; 1 bytes @ 0xE
  1142  0000B4                     	ds	1
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           postdec1	equ	0xFE5
  1150                           fsr1l	equ	0xFE1
  1151                           
  1152                           	psect	cstackCOMRAM
  1153  000001                     __pcstackCOMRAM:
  1154                           	opt stack 0
  1155  000001                     ??_chkisr:
  1156  000001                     
  1157                           ; 0 bytes @ 0x0
  1158  000001                     	ds	14
  1159  00000F                     ?_strlen:
  1160                           	opt stack 0
  1161  00000F                     ?___wmul:
  1162                           	opt stack 0
  1163  00000F                     spiwrite@x:
  1164                           	opt stack 0
  1165  00000F                     putch@c:
  1166                           	opt stack 0
  1167  00000F                     OpenUSART@spbrg:
  1168                           	opt stack 0
  1169  00000F                     ___wmul@multiplier:
  1170                           	opt stack 0
  1171  00000F                     strcpy@to:
  1172                           	opt stack 0
  1173  00000F                     strlen@s:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0xE
  1177  00000F                     	ds	1
  1178  000010                     ?_printf:
  1179                           	opt stack 0
  1180  000010                     spiwrite@spidata:
  1181                           	opt stack 0
  1182  000010                     printf@f:
  1183                           	opt stack 0
  1184                           
  1185                           ; 2 bytes @ 0xF
  1186  000010                     	ds	1
  1187  000011                     ??_strlen:
  1188  000011                     write_command@cmd_:
  1189                           	opt stack 0
  1190  000011                     write_data@data_:
  1191                           	opt stack 0
  1192  000011                     OpenUSART@config:
  1193                           	opt stack 0
  1194  000011                     ___wmul@multiplicand:
  1195                           	opt stack 0
  1196  000011                     strcpy@from:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x10
  1200  000011                     	ds	1
  1201  000012                     setAddrWindow@y0:
  1202                           	opt stack 0
  1203  000012                     printf@ap:
  1204                           	opt stack 0
  1205                           
  1206                           ; 2 bytes @ 0x11
  1207  000012                     	ds	1
  1208  000013                     setAddrWindow@x1:
  1209                           	opt stack 0
  1210  000013                     ___wmul@product:
  1211                           	opt stack 0
  1212  000013                     strcpy@cp:
  1213                           	opt stack 0
  1214  000013                     strlen@cp:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x12
  1218  000013                     	ds	1
  1219  000014                     setAddrWindow@y1:
  1220                           	opt stack 0
  1221  000014                     printf@c:
  1222                           	opt stack 0
  1223                           
  1224                           ; 1 bytes @ 0x13
  1225  000014                     	ds	1
  1226  000015                     setAddrWindow@x0:
  1227                           	opt stack 0
  1228  000015                     delay_ms@ms:
  1229                           	opt stack 0
  1230                           
  1231                           ; 2 bytes @ 0x14
  1232  000015                     	ds	1
  1233  000016                     drawPixel@y:
  1234                           	opt stack 0
  1235  000016                     drawFastVLine@y:
  1236                           	opt stack 0
  1237  000016                     fillRectangle@y:
  1238                           	opt stack 0
  1239  000016                     drawFastHLine@y:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x15
  1243  000016                     	ds	1
  1244  000017                     ??_delay_ms:
  1245  000017                     drawFastVLine@h:
  1246                           	opt stack 0
  1247  000017                     fillRectangle@w:
  1248                           	opt stack 0
  1249  000017                     drawFastHLine@w:
  1250                           	opt stack 0
  1251  000017                     drawPixel@color:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x16
  1255  000017                     	ds	1
  1256  000018                     fillRectangle@h:
  1257                           	opt stack 0
  1258  000018                     drawFastVLine@color:
  1259                           	opt stack 0
  1260  000018                     drawFastHLine@color:
  1261                           	opt stack 0
  1262                           
  1263                           ; 2 bytes @ 0x17
  1264  000018                     	ds	1
  1265  000019                     drawPixel@x:
  1266                           	opt stack 0
  1267  000019                     delay_ms@count:
  1268                           	opt stack 0
  1269  000019                     fillRectangle@color:
  1270                           	opt stack 0
  1271                           
  1272                           ; 2 bytes @ 0x18
  1273  000019                     	ds	1
  1274  00001A                     ??_drawFastVLine:
  1275  00001A                     ??_drawFastHLine:
  1276  00001A                     drawCircle@x0:
  1277                           	opt stack 0
  1278                           
  1279                           ; 2 bytes @ 0x19
  1280  00001A                     	ds	1
  1281  00001B                     ??_fillRectangle:
  1282  00001B                     
  1283                           ; 0 bytes @ 0x1A
  1284  00001B                     	ds	1
  1285  00001C                     drawCircle@y0:
  1286                           	opt stack 0
  1287                           
  1288                           ; 2 bytes @ 0x1B
  1289  00001C                     	ds	2
  1290  00001E                     drawFastVLine@hi:
  1291                           	opt stack 0
  1292  00001E                     drawFastHLine@hi:
  1293                           	opt stack 0
  1294  00001E                     drawCircle@r:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x1D
  1298  00001E                     	ds	1
  1299  00001F                     drawFastVLine@lo:
  1300                           	opt stack 0
  1301  00001F                     fillRectangle@hi:
  1302                           	opt stack 0
  1303  00001F                     drawFastHLine@lo:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x1E
  1307  00001F                     	ds	1
  1308  000020                     drawFastVLine@x:
  1309                           	opt stack 0
  1310  000020                     fillRectangle@lo:
  1311                           	opt stack 0
  1312  000020                     drawFastHLine@x:
  1313                           	opt stack 0
  1314  000020                     drawCircle@color:
  1315                           	opt stack 0
  1316                           
  1317                           ; 2 bytes @ 0x1F
  1318  000020                     	ds	1
  1319  000021                     fillRect@y:
  1320                           	opt stack 0
  1321  000021                     fillRectangle@x:
  1322                           	opt stack 0
  1323  000021                     fillCircleHelper@x0:
  1324                           	opt stack 0
  1325  000021                     drawRect@x:
  1326                           	opt stack 0
  1327                           
  1328                           ; 2 bytes @ 0x20
  1329  000021                     	ds	1
  1330  000022                     ??_drawCircle:
  1331  000022                     fillRect@w:
  1332                           	opt stack 0
  1333  000022                     fillScreen@color:
  1334                           	opt stack 0
  1335                           
  1336                           ; 2 bytes @ 0x21
  1337  000022                     	ds	1
  1338  000023                     fillRect@h:
  1339                           	opt stack 0
  1340  000023                     fillCircleHelper@y0:
  1341                           	opt stack 0
  1342  000023                     drawRect@y:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x22
  1346  000023                     	ds	1
  1347  000024                     fillRect@color:
  1348                           	opt stack 0
  1349  000024                     drawCircle@ddF_x:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x23
  1353  000024                     	ds	1
  1354  000025                     fillCircleHelper@r:
  1355                           	opt stack 0
  1356  000025                     drawRect@w:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0x24
  1360  000025                     	ds	1
  1361  000026                     ??_fillRect:
  1362  000026                     drawCircle@ddF_y:
  1363                           	opt stack 0
  1364                           
  1365                           ; 2 bytes @ 0x25
  1366  000026                     	ds	1
  1367  000027                     fillCircleHelper@cornername:
  1368                           	opt stack 0
  1369  000027                     drawRect@h:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0x26
  1373  000027                     	ds	1
  1374  000028                     drawCircle@f:
  1375                           	opt stack 0
  1376                           
  1377                           ; 2 bytes @ 0x27
  1378  000028                     	ds	1
  1379  000029                     fillRect@x:
  1380                           	opt stack 0
  1381  000029                     fillCircleHelper@delta:
  1382                           	opt stack 0
  1383  000029                     drawRect@color:
  1384                           	opt stack 0
  1385                           
  1386                           ; 2 bytes @ 0x28
  1387  000029                     	ds	1
  1388  00002A                     fillRect@i:
  1389                           	opt stack 0
  1390  00002A                     drawCircle@x:
  1391                           	opt stack 0
  1392                           
  1393                           ; 2 bytes @ 0x29
  1394  00002A                     	ds	1
  1395  00002B                     ??_drawRect:
  1396  00002B                     fillCircleHelper@color:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x2A
  1400  00002B                     	ds	1
  1401  00002C                     drawChar@y:
  1402                           	opt stack 0
  1403  00002C                     drawCircle@y:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0x2B
  1407  00002C                     	ds	1
  1408  00002D                     ??_fillCircleHelper:
  1409  00002D                     drawChar@c:
  1410                           	opt stack 0
  1411                           
  1412                           ; 1 bytes @ 0x2C
  1413  00002D                     	ds	1
  1414  00002E                     drawChar@color:
  1415                           	opt stack 0
  1416                           
  1417                           ; 2 bytes @ 0x2D
  1418  00002E                     	ds	1
  1419  00002F                     fillCircleHelper@ddF_x:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0x2E
  1423  00002F                     	ds	1
  1424  000030                     drawChar@bg:
  1425                           	opt stack 0
  1426                           
  1427                           ; 2 bytes @ 0x2F
  1428  000030                     	ds	1
  1429  000031                     fillCircleHelper@ddF_y:
  1430                           	opt stack 0
  1431                           
  1432                           ; 2 bytes @ 0x30
  1433  000031                     	ds	1
  1434  000032                     drawChar@size:
  1435                           	opt stack 0
  1436                           
  1437                           ; 1 bytes @ 0x31
  1438  000032                     	ds	1
  1439  000033                     drawChar@line:
  1440                           	opt stack 0
  1441  000033                     fillCircleHelper@f:
  1442                           	opt stack 0
  1443                           
  1444                           ; 2 bytes @ 0x32
  1445  000033                     	ds	1
  1446  000034                     drawChar@x:
  1447                           	opt stack 0
  1448                           
  1449                           ; 1 bytes @ 0x33
  1450  000034                     	ds	1
  1451  000035                     drawChar@j:
  1452                           	opt stack 0
  1453  000035                     fillCircleHelper@x:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x34
  1457  000035                     	ds	1
  1458  000036                     drawChar@i:
  1459                           	opt stack 0
  1460                           
  1461                           ; 1 bytes @ 0x35
  1462  000036                     	ds	1
  1463  000037                     ??_drawtext:
  1464  000037                     fillCircleHelper@y:
  1465                           	opt stack 0
  1466                           
  1467                           ; 2 bytes @ 0x36
  1468  000037                     	ds	2
  1469  000039                     tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1l	equ	0xFE1
  1477                           
  1478                           ; 0 bytes @ 0x38
  1479 ;;
  1480 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1481 ;;
  1482 ;; *************** function _main *****************
  1483 ;; Defined at:
  1484 ;;		line 287 in file "Lab9test.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;		None               void
  1491 ;; Registers used:
  1492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels required when called:   10
  1504 ;; This function calls:
  1505 ;;		_Do_Init
  1506 ;;		_Initialize_Screen
  1507 ;;		_printf
  1508 ;; This function is called by:
  1509 ;;		Startup code after reset
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text0
  1514  00129A                     __ptext0:
  1515                           	opt stack 0
  1516  00129A                     _main:
  1517                           	opt stack 21
  1518                           
  1519                           ;Lab9test.c: 289: Do_Init();
  1520                           
  1521                           ;incstack = 0
  1522  00129A  EC12  F00B         	call	_Do_Init	;wreg free
  1523                           
  1524                           ;Lab9test.c: 290: RBPU = 0;
  1525  00129E  9EF1               	bcf	intcon2,7,c	;volatile
  1526                           
  1527                           ;Lab9test.c: 292: Initialize_Screen();
  1528  0012A0  EC0E  F000         	call	_Initialize_Screen	;wreg free
  1529  0012A4  D000               	goto	l4744
  1530  0012A6                     l4744:
  1531                           
  1532                           ;Lab9test.c: 294: {
  1533                           ;Lab9test.c: 296: if (INT0_flag == 1)
  1534  0012A6  045C               	decf	_INT0_flag,w,c
  1535  0012A8  105D               	iorwf	_INT0_flag+1,w,c
  1536  0012AA  A4D8               	btfss	status,2,c
  1537  0012AC  D00B               	goto	l4750
  1538                           
  1539                           ;Lab9test.c: 297: {
  1540                           ;Lab9test.c: 298: INT0_flag = 0;
  1541  0012AE  0E00               	movlw	0
  1542  0012B0  6E5D               	movwf	_INT0_flag+1,c
  1543  0012B2  0E00               	movlw	0
  1544  0012B4  6E5C               	movwf	_INT0_flag,c
  1545                           
  1546                           ;Lab9test.c: 299: printf("INT0 interrupt pin detected \r\n");
  1547  0012B6  0E38               	movlw	low STR_13
  1548  0012B8  6E10               	movwf	printf@f,c
  1549  0012BA  0EFF               	movlw	high STR_13
  1550  0012BC  6E11               	movwf	printf@f+1,c
  1551  0012BE  ECE7  F00A         	call	_printf	;wreg free
  1552  0012C2  D000               	goto	l4750
  1553  0012C4                     l4750:
  1554                           
  1555                           ;Lab9test.c: 302: }
  1556                           ;Lab9test.c: 303: if (INT1_flag == 1)
  1557  0012C4  045E               	decf	_INT1_flag,w,c
  1558  0012C6  105F               	iorwf	_INT1_flag+1,w,c
  1559  0012C8  A4D8               	btfss	status,2,c
  1560  0012CA  D00B               	goto	l4756
  1561                           
  1562                           ;Lab9test.c: 304: {
  1563                           ;Lab9test.c: 305: INT1_flag = 0;
  1564  0012CC  0E00               	movlw	0
  1565  0012CE  6E5F               	movwf	_INT1_flag+1,c
  1566  0012D0  0E00               	movlw	0
  1567  0012D2  6E5E               	movwf	_INT1_flag,c
  1568                           
  1569                           ;Lab9test.c: 306: printf("INT1 interrupt pin detected \r\n");
  1570  0012D4  0E57               	movlw	low STR_14
  1571  0012D6  6E10               	movwf	printf@f,c
  1572  0012D8  0EFF               	movlw	high STR_14
  1573  0012DA  6E11               	movwf	printf@f+1,c
  1574  0012DC  ECE7  F00A         	call	_printf	;wreg free
  1575  0012E0  D000               	goto	l4756
  1576  0012E2                     l4756:
  1577                           
  1578                           ;Lab9test.c: 309: }
  1579                           ;Lab9test.c: 310: if (INT2_flag == 1)
  1580  0012E2  0460               	decf	_INT2_flag,w,c
  1581  0012E4  1061               	iorwf	_INT2_flag+1,w,c
  1582  0012E6  A4D8               	btfss	status,2,c
  1583  0012E8  D7DE               	goto	l4744
  1584                           
  1585                           ;Lab9test.c: 311: {
  1586                           ;Lab9test.c: 312: INT2_flag = 0;
  1587  0012EA  0E00               	movlw	0
  1588  0012EC  6E61               	movwf	_INT2_flag+1,c
  1589  0012EE  0E00               	movlw	0
  1590  0012F0  6E60               	movwf	_INT2_flag,c
  1591                           
  1592                           ;Lab9test.c: 313: printf("INT2 interrupt pin detected \r\n");
  1593  0012F2  0E76               	movlw	low STR_15
  1594  0012F4  6E10               	movwf	printf@f,c
  1595  0012F6  0EFF               	movlw	high STR_15
  1596  0012F8  6E11               	movwf	printf@f+1,c
  1597  0012FA  ECE7  F00A         	call	_printf	;wreg free
  1598  0012FE  D7D3               	goto	l4744
  1599  001300  EF0C  F000         	goto	start
  1600  001304                     __end_of_main:
  1601                           	opt stack 0
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           intcon2	equ	0xFF1
  1607                           postinc0	equ	0xFEE
  1608                           wreg	equ	0xFE8
  1609                           postdec1	equ	0xFE5
  1610                           fsr1l	equ	0xFE1
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _printf *****************
  1614 ;; Defined at:
  1615 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  f               2   15[COMRAM] PTR const unsigned char 
  1618 ;;		 -> STR_15(31), STR_14(31), STR_13(31), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  tmpval          4    0        struct .
  1621 ;;  cp              3    0        PTR const unsigned char 
  1622 ;;  ap              2   17[COMRAM] PTR void [1]
  1623 ;;		 -> ?_printf(2), 
  1624 ;;  len             2    0        unsigned int 
  1625 ;;  val             2    0        unsigned int 
  1626 ;;  c               1   19[COMRAM] char 
  1627 ;;  flag            1    0        unsigned char 
  1628 ;;  prec            1    0        char 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2   15[COMRAM] int 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;Total ram usage:        5 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    3
  1645 ;; This function calls:
  1646 ;;		_putch
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text1
  1653  0015CE                     __ptext1:
  1654                           	opt stack 0
  1655  0015CE                     _printf:
  1656                           	opt stack 27
  1657                           
  1658                           ;doprnt.c: 466: va_list ap;
  1659                           ;doprnt.c: 499: signed char c;
  1660                           ;doprnt.c: 506: signed char prec;
  1661                           ;doprnt.c: 508: unsigned char flag;
  1662                           ;doprnt.c: 523: union {
  1663                           ;doprnt.c: 524: unsigned long vd;
  1664                           ;doprnt.c: 525: double integ;
  1665                           ;doprnt.c: 526: } tmpval;
  1666                           ;doprnt.c: 528: unsigned int val;
  1667                           ;doprnt.c: 529: unsigned len;
  1668                           ;doprnt.c: 530: const char * cp;
  1669                           ;doprnt.c: 533: *ap = __va_start();
  1670                           
  1671                           ;incstack = 0
  1672  0015CE  0E12               	movlw	low (?_printf+2)
  1673  0015D0  6E12               	movwf	printf@ap,c
  1674  0015D2  0E00               	movlw	high (?_printf+2)
  1675  0015D4  6E13               	movwf	printf@ap+1,c
  1676                           
  1677                           ;doprnt.c: 536: while(c = *f++) {
  1678  0015D6  D004               	goto	l3070
  1679  0015D8                     l3068:
  1680                           
  1681                           ;doprnt.c: 540: {
  1682                           ;doprnt.c: 541: (putch(c) );
  1683  0015D8  5014               	movf	printf@c,w,c
  1684  0015DA  EC93  F00B         	call	_putch
  1685                           
  1686                           ;doprnt.c: 542: continue;
  1687  0015DE  D000               	goto	l3070
  1688  0015E0                     l3070:
  1689  0015E0  C010  FFF6         	movff	printf@f,tblptrl
  1690  0015E4  C011  FFF7         	movff	printf@f+1,tblptrh
  1691  0015E8  4A10               	infsnz	printf@f,f,c
  1692  0015EA  2A11               	incf	printf@f+1,f,c
  1693  0015EC                     	if	0	;tblptru may be non-zero
  1694  0015EC                     	endif
  1695  0015EC                     	if	0	;tblptru may be non-zero
  1696  0015EC                     	endif
  1697  0015EC  0008               	tblrd		*
  1698  0015EE  CFF5 F014          	movff	tablat,printf@c
  1699  0015F2  5014               	movf	printf@c,w,c
  1700  0015F4  A4D8               	btfss	status,2,c
  1701  0015F6  D7F0               	goto	l3068
  1702                           
  1703                           ;doprnt.c: 1469: }
  1704                           ;doprnt.c: 1533: }
  1705                           ;doprnt.c: 1540: return 0;
  1706                           ;	Return value of _printf is never used
  1707  0015F8  0012               	return		;funcret
  1708  0015FA                     __end_of_printf:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           intcon2	equ	0xFF1
  1715                           postinc0	equ	0xFEE
  1716                           wreg	equ	0xFE8
  1717                           postdec1	equ	0xFE5
  1718                           fsr1l	equ	0xFE1
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function _putch *****************
  1722 ;; Defined at:
  1723 ;;		line 259 in file "Lab9test.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  c               1    wreg     unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  c               1   14[COMRAM] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;		None               void
  1730 ;; Registers used:
  1731 ;;		wreg
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        1 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    2
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_printf
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text2
  1752  001726                     __ptext2:
  1753                           	opt stack 0
  1754  001726                     _putch:
  1755                           	opt stack 27
  1756                           
  1757                           ;incstack = 0
  1758                           ;putch@c stored from wreg
  1759  001726  6E0F               	movwf	putch@c,c
  1760                           
  1761                           ;Lab9test.c: 261: while (!TRMT);
  1762  001728  D000               	goto	l358
  1763  00172A                     l358:
  1764  00172A  A2AC               	btfss	4012,1,c	;volatile
  1765  00172C  D7FE               	goto	l358
  1766                           
  1767                           ;Lab9test.c: 262: TXREG = c;
  1768  00172E  C00F  FFAD         	movff	putch@c,4013	;volatile
  1769  001732  0012               	return		;funcret
  1770  001734                     __end_of_putch:
  1771                           	opt stack 0
  1772                           tblptru	equ	0xFF8
  1773                           tblptrh	equ	0xFF7
  1774                           tblptrl	equ	0xFF6
  1775                           tablat	equ	0xFF5
  1776                           intcon2	equ	0xFF1
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           fsr1l	equ	0xFE1
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function _Initialize_Screen *****************
  1784 ;; Defined at:
  1785 ;;		line 163 in file "Lab9test.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;		None               void
  1792 ;; Registers used:
  1793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    9
  1806 ;; This function calls:
  1807 ;;		_LCD_Reset
  1808 ;;		_TFT_GreenTab_Initialize
  1809 ;;		_drawCircle
  1810 ;;		_drawRect
  1811 ;;		_drawtext
  1812 ;;		_fillCircle
  1813 ;;		_fillScreen
  1814 ;;		_strcpy
  1815 ;; This function is called by:
  1816 ;;		_main
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text3
  1821  00001C                     __ptext3:
  1822                           	opt stack 0
  1823  00001C                     _Initialize_Screen:
  1824                           	opt stack 21
  1825                           
  1826                           ;Lab9test.c: 165: LCD_Reset();
  1827                           
  1828                           ;incstack = 0
  1829  00001C  EC7A  F00B         	call	_LCD_Reset	;wreg free
  1830                           
  1831                           ;Lab9test.c: 166: TFT_GreenTab_Initialize();
  1832  000020  ECFD  F00A         	call	_TFT_GreenTab_Initialize	;wreg free
  1833                           
  1834                           ;Lab9test.c: 167: fillScreen(0x0000);
  1835  000024  0E00               	movlw	0
  1836  000026  6E23               	movwf	fillScreen@color+1,c
  1837  000028  0E00               	movlw	0
  1838  00002A  6E22               	movwf	fillScreen@color,c
  1839  00002C  EC4D  F00B         	call	_fillScreen	;wreg free
  1840                           
  1841                           ;Lab9test.c: 170: txt = buffer;
  1842  000030  0E87               	movlw	low _buffer
  1843  000032  6E62               	movwf	_txt,c
  1844  000034  0E00               	movlw	high _buffer
  1845  000036  6E63               	movwf	_txt+1,c
  1846                           
  1847                           ;Lab9test.c: 171: strcpy(txt, "ECE3301L Spring 21-S1");
  1848  000038  C062  F00F         	movff	_txt,strcpy@to
  1849  00003C  C063  F010         	movff	_txt+1,strcpy@to+1
  1850  000040  0E95               	movlw	low STR_1
  1851  000042  6E11               	movwf	strcpy@from,c
  1852  000044  0EFF               	movlw	high STR_1
  1853  000046  6E12               	movwf	strcpy@from+1,c
  1854  000048  ECB6  F00A         	call	_strcpy	;wreg free
  1855                           
  1856                           ;Lab9test.c: 172: drawtext(2, 2, txt, 0xFFFF, 0x0000, 1);
  1857  00004C  0E02               	movlw	2
  1858  00004E  0100               	movlb	0	; () banked
  1859  000050  6FA6               	movwf	drawtext@y& (0+255),b
  1860  000052  C062  F0A7         	movff	_txt,drawtext@_text
  1861  000056  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  1862  00005A  0EFF               	movlw	255
  1863  00005C  0100               	movlb	0	; () banked
  1864  00005E  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  1865  000060  69A9               	setf	drawtext@color& (0+255),b
  1866  000062  0E00               	movlw	0
  1867  000064  0100               	movlb	0	; () banked
  1868  000066  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  1869  000068  0E00               	movlw	0
  1870  00006A  6FAB               	movwf	drawtext@bg& (0+255),b
  1871  00006C  0E01               	movlw	1
  1872  00006E  0100               	movlb	0	; () banked
  1873  000070  6FAD               	movwf	drawtext@size& (0+255),b
  1874  000072  0E02               	movlw	2
  1875  000074  EC4F  F006         	call	_drawtext
  1876                           
  1877                           ;Lab9test.c: 175: strcpy(txt, "Mode:");
  1878  000078  C062  F00F         	movff	_txt,strcpy@to
  1879  00007C  C063  F010         	movff	_txt+1,strcpy@to+1
  1880  000080  0EE4               	movlw	low STR_2
  1881  000082  6E11               	movwf	strcpy@from,c
  1882  000084  0EFF               	movlw	high STR_2
  1883  000086  6E12               	movwf	strcpy@from+1,c
  1884  000088  ECB6  F00A         	call	_strcpy	;wreg free
  1885                           
  1886                           ;Lab9test.c: 176: drawtext(2, 10, txt, 0xFFFF, 0x0000, 1);
  1887  00008C  0E0A               	movlw	10
  1888  00008E  0100               	movlb	0	; () banked
  1889  000090  6FA6               	movwf	drawtext@y& (0+255),b
  1890  000092  C062  F0A7         	movff	_txt,drawtext@_text
  1891  000096  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  1892  00009A  0EFF               	movlw	255
  1893  00009C  0100               	movlb	0	; () banked
  1894  00009E  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  1895  0000A0  69A9               	setf	drawtext@color& (0+255),b
  1896  0000A2  0E00               	movlw	0
  1897  0000A4  0100               	movlb	0	; () banked
  1898  0000A6  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  1899  0000A8  0E00               	movlw	0
  1900  0000AA  6FAB               	movwf	drawtext@bg& (0+255),b
  1901  0000AC  0E01               	movlw	1
  1902  0000AE  0100               	movlb	0	; () banked
  1903  0000B0  6FAD               	movwf	drawtext@size& (0+255),b
  1904  0000B2  0E02               	movlw	2
  1905  0000B4  EC4F  F006         	call	_drawtext
  1906                           
  1907                           ;Lab9test.c: 177: drawtext(35,10, Act_Mode_Txt, 0xFFFF, 0x0000, 1);
  1908  0000B8  0E0A               	movlw	10
  1909  0000BA  0100               	movlb	0	; () banked
  1910  0000BC  6FA6               	movwf	drawtext@y& (0+255),b
  1911  0000BE  0E4C               	movlw	low _Act_Mode_Txt
  1912  0000C0  0100               	movlb	0	; () banked
  1913  0000C2  6FA7               	movwf	drawtext@_text& (0+255),b
  1914  0000C4  0E00               	movlw	high _Act_Mode_Txt
  1915  0000C6  0100               	movlb	0	; () banked
  1916  0000C8  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  1917  0000CA  0EFF               	movlw	255
  1918  0000CC  0100               	movlb	0	; () banked
  1919  0000CE  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  1920  0000D0  69A9               	setf	drawtext@color& (0+255),b
  1921  0000D2  0E00               	movlw	0
  1922  0000D4  0100               	movlb	0	; () banked
  1923  0000D6  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  1924  0000D8  0E00               	movlw	0
  1925  0000DA  6FAB               	movwf	drawtext@bg& (0+255),b
  1926  0000DC  0E01               	movlw	1
  1927  0000DE  0100               	movlb	0	; () banked
  1928  0000E0  6FAD               	movwf	drawtext@size& (0+255),b
  1929  0000E2  0E23               	movlw	35
  1930  0000E4  EC4F  F006         	call	_drawtext
  1931                           
  1932                           ;Lab9test.c: 180: strcpy(txt, "FR:");
  1933  0000E8  C062  F00F         	movff	_txt,strcpy@to
  1934  0000EC  C063  F010         	movff	_txt+1,strcpy@to+1
  1935  0000F0  0EEA               	movlw	low STR_3
  1936  0000F2  6E11               	movwf	strcpy@from,c
  1937  0000F4  0EFF               	movlw	high STR_3
  1938  0000F6  6E12               	movwf	strcpy@from+1,c
  1939  0000F8  ECB6  F00A         	call	_strcpy	;wreg free
  1940                           
  1941                           ;Lab9test.c: 181: drawtext(50, 10, txt, 0xFFFF, 0x0000, 1);
  1942  0000FC  0E0A               	movlw	10
  1943  0000FE  0100               	movlb	0	; () banked
  1944  000100  6FA6               	movwf	drawtext@y& (0+255),b
  1945  000102  C062  F0A7         	movff	_txt,drawtext@_text
  1946  000106  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  1947  00010A  0EFF               	movlw	255
  1948  00010C  0100               	movlb	0	; () banked
  1949  00010E  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  1950  000110  69A9               	setf	drawtext@color& (0+255),b
  1951  000112  0E00               	movlw	0
  1952  000114  0100               	movlb	0	; () banked
  1953  000116  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  1954  000118  0E00               	movlw	0
  1955  00011A  6FAB               	movwf	drawtext@bg& (0+255),b
  1956  00011C  0E01               	movlw	1
  1957  00011E  0100               	movlb	0	; () banked
  1958  000120  6FAD               	movwf	drawtext@size& (0+255),b
  1959  000122  0E32               	movlw	50
  1960  000124  EC4F  F006         	call	_drawtext
  1961                           
  1962                           ;Lab9test.c: 182: drawtext(70, 10, FlashingR_Txt, 0xFFFF, 0x0000, 1);
  1963  000128  0E0A               	movlw	10
  1964  00012A  0100               	movlb	0	; () banked
  1965  00012C  6FA6               	movwf	drawtext@y& (0+255),b
  1966  00012E  0E4E               	movlw	low _FlashingR_Txt
  1967  000130  0100               	movlb	0	; () banked
  1968  000132  6FA7               	movwf	drawtext@_text& (0+255),b
  1969  000134  0E00               	movlw	high _FlashingR_Txt
  1970  000136  0100               	movlb	0	; () banked
  1971  000138  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  1972  00013A  0EFF               	movlw	255
  1973  00013C  0100               	movlb	0	; () banked
  1974  00013E  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  1975  000140  69A9               	setf	drawtext@color& (0+255),b
  1976  000142  0E00               	movlw	0
  1977  000144  0100               	movlb	0	; () banked
  1978  000146  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  1979  000148  0E00               	movlw	0
  1980  00014A  6FAB               	movwf	drawtext@bg& (0+255),b
  1981  00014C  0E01               	movlw	1
  1982  00014E  0100               	movlb	0	; () banked
  1983  000150  6FAD               	movwf	drawtext@size& (0+255),b
  1984  000152  0E46               	movlw	70
  1985  000154  EC4F  F006         	call	_drawtext
  1986                           
  1987                           ;Lab9test.c: 185: strcpy(txt, "FS:");
  1988  000158  C062  F00F         	movff	_txt,strcpy@to
  1989  00015C  C063  F010         	movff	_txt+1,strcpy@to+1
  1990  000160  0EEE               	movlw	low STR_4
  1991  000162  6E11               	movwf	strcpy@from,c
  1992  000164  0EFF               	movlw	high STR_4
  1993  000166  6E12               	movwf	strcpy@from+1,c
  1994  000168  ECB6  F00A         	call	_strcpy	;wreg free
  1995                           
  1996                           ;Lab9test.c: 186: drawtext(80, 10, txt, 0xFFFF, 0x0000, 1);
  1997  00016C  0E0A               	movlw	10
  1998  00016E  0100               	movlb	0	; () banked
  1999  000170  6FA6               	movwf	drawtext@y& (0+255),b
  2000  000172  C062  F0A7         	movff	_txt,drawtext@_text
  2001  000176  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2002  00017A  0EFF               	movlw	255
  2003  00017C  0100               	movlb	0	; () banked
  2004  00017E  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2005  000180  69A9               	setf	drawtext@color& (0+255),b
  2006  000182  0E00               	movlw	0
  2007  000184  0100               	movlb	0	; () banked
  2008  000186  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2009  000188  0E00               	movlw	0
  2010  00018A  6FAB               	movwf	drawtext@bg& (0+255),b
  2011  00018C  0E01               	movlw	1
  2012  00018E  0100               	movlb	0	; () banked
  2013  000190  6FAD               	movwf	drawtext@size& (0+255),b
  2014  000192  0E50               	movlw	80
  2015  000194  EC4F  F006         	call	_drawtext
  2016                           
  2017                           ;Lab9test.c: 187: drawtext(100, 10, FlashingS_Txt, 0xFFFF, 0x0000, 1);
  2018  000198  0E0A               	movlw	10
  2019  00019A  0100               	movlb	0	; () banked
  2020  00019C  6FA6               	movwf	drawtext@y& (0+255),b
  2021  00019E  0E50               	movlw	low _FlashingS_Txt
  2022  0001A0  0100               	movlb	0	; () banked
  2023  0001A2  6FA7               	movwf	drawtext@_text& (0+255),b
  2024  0001A4  0E00               	movlw	high _FlashingS_Txt
  2025  0001A6  0100               	movlb	0	; () banked
  2026  0001A8  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2027  0001AA  0EFF               	movlw	255
  2028  0001AC  0100               	movlb	0	; () banked
  2029  0001AE  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2030  0001B0  69A9               	setf	drawtext@color& (0+255),b
  2031  0001B2  0E00               	movlw	0
  2032  0001B4  0100               	movlb	0	; () banked
  2033  0001B6  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2034  0001B8  0E00               	movlw	0
  2035  0001BA  6FAB               	movwf	drawtext@bg& (0+255),b
  2036  0001BC  0E01               	movlw	1
  2037  0001BE  0100               	movlb	0	; () banked
  2038  0001C0  6FAD               	movwf	drawtext@size& (0+255),b
  2039  0001C2  0E64               	movlw	100
  2040  0001C4  EC4F  F006         	call	_drawtext
  2041                           
  2042                           ;Lab9test.c: 190: strcpy(txt, "*");
  2043  0001C8  C062  F00F         	movff	_txt,strcpy@to
  2044  0001CC  C063  F010         	movff	_txt+1,strcpy@to+1
  2045  0001D0  0EFC               	movlw	low STR_5
  2046  0001D2  6E11               	movwf	strcpy@from,c
  2047  0001D4  0EFF               	movlw	high STR_5
  2048  0001D6  6E12               	movwf	strcpy@from+1,c
  2049  0001D8  ECB6  F00A         	call	_strcpy	;wreg free
  2050                           
  2051                           ;Lab9test.c: 191: drawtext(120, 10, txt, 0xFFFF, 0x0000, 1);
  2052  0001DC  0E0A               	movlw	10
  2053  0001DE  0100               	movlb	0	; () banked
  2054  0001E0  6FA6               	movwf	drawtext@y& (0+255),b
  2055  0001E2  C062  F0A7         	movff	_txt,drawtext@_text
  2056  0001E6  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2057  0001EA  0EFF               	movlw	255
  2058  0001EC  0100               	movlb	0	; () banked
  2059  0001EE  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2060  0001F0  69A9               	setf	drawtext@color& (0+255),b
  2061  0001F2  0E00               	movlw	0
  2062  0001F4  0100               	movlb	0	; () banked
  2063  0001F6  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2064  0001F8  0E00               	movlw	0
  2065  0001FA  6FAB               	movwf	drawtext@bg& (0+255),b
  2066  0001FC  0E01               	movlw	1
  2067  0001FE  0100               	movlb	0	; () banked
  2068  000200  6FAD               	movwf	drawtext@size& (0+255),b
  2069  000202  0E78               	movlw	120
  2070  000204  EC4F  F006         	call	_drawtext
  2071                           
  2072                           ;Lab9test.c: 194: strcpy(txt, "EAST/WEST");
  2073  000208  C062  F00F         	movff	_txt,strcpy@to
  2074  00020C  C063  F010         	movff	_txt+1,strcpy@to+1
  2075  000210  0ECC               	movlw	low STR_6
  2076  000212  6E11               	movwf	strcpy@from,c
  2077  000214  0EFF               	movlw	high STR_6
  2078  000216  6E12               	movwf	strcpy@from+1,c
  2079  000218  ECB6  F00A         	call	_strcpy	;wreg free
  2080                           
  2081                           ;Lab9test.c: 195: drawtext (30, 20, txt, 0x07FF, 0x0000, 1);
  2082  00021C  0E14               	movlw	20
  2083  00021E  0100               	movlb	0	; () banked
  2084  000220  6FA6               	movwf	drawtext@y& (0+255),b
  2085  000222  C062  F0A7         	movff	_txt,drawtext@_text
  2086  000226  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2087  00022A  0E07               	movlw	7
  2088  00022C  0100               	movlb	0	; () banked
  2089  00022E  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2090  000230  69A9               	setf	drawtext@color& (0+255),b
  2091  000232  0E00               	movlw	0
  2092  000234  0100               	movlb	0	; () banked
  2093  000236  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2094  000238  0E00               	movlw	0
  2095  00023A  6FAB               	movwf	drawtext@bg& (0+255),b
  2096  00023C  0E01               	movlw	1
  2097  00023E  0100               	movlb	0	; () banked
  2098  000240  6FAD               	movwf	drawtext@size& (0+255),b
  2099  000242  0E1E               	movlw	30
  2100  000244  EC4F  F006         	call	_drawtext
  2101                           
  2102                           ;Lab9test.c: 196: drawRect (30, 20 + 15-8, 60, 18, 0x07FF);
  2103  000248  0E00               	movlw	0
  2104  00024A  6E22               	movwf	drawRect@x+1,c
  2105  00024C  0E1E               	movlw	30
  2106  00024E  6E21               	movwf	drawRect@x,c
  2107  000250  0E00               	movlw	0
  2108  000252  6E24               	movwf	drawRect@y+1,c
  2109  000254  0E1B               	movlw	27
  2110  000256  6E23               	movwf	drawRect@y,c
  2111  000258  0E00               	movlw	0
  2112  00025A  6E26               	movwf	drawRect@w+1,c
  2113  00025C  0E3C               	movlw	60
  2114  00025E  6E25               	movwf	drawRect@w,c
  2115  000260  0E00               	movlw	0
  2116  000262  6E28               	movwf	drawRect@h+1,c
  2117  000264  0E12               	movlw	18
  2118  000266  6E27               	movwf	drawRect@h,c
  2119  000268  0E07               	movlw	7
  2120  00026A  6E2A               	movwf	drawRect@color+1,c
  2121  00026C  6829               	setf	drawRect@color,c
  2122  00026E  EC82  F009         	call	_drawRect	;wreg free
  2123                           
  2124                           ;Lab9test.c: 197: fillCircle(40, 20 + 15, 7, 0xF800);
  2125  000272  0E00               	movlw	0
  2126  000274  0100               	movlb	0	; () banked
  2127  000276  6FA7               	movwf	(fillCircle@x0+1)& (0+255),b
  2128  000278  0E28               	movlw	40
  2129  00027A  6FA6               	movwf	fillCircle@x0& (0+255),b
  2130  00027C  0E00               	movlw	0
  2131  00027E  0100               	movlb	0	; () banked
  2132  000280  6FA9               	movwf	(fillCircle@y0+1)& (0+255),b
  2133  000282  0E23               	movlw	35
  2134  000284  6FA8               	movwf	fillCircle@y0& (0+255),b
  2135  000286  0E00               	movlw	0
  2136  000288  0100               	movlb	0	; () banked
  2137  00028A  6FAB               	movwf	(fillCircle@r+1)& (0+255),b
  2138  00028C  0E07               	movlw	7
  2139  00028E  6FAA               	movwf	fillCircle@r& (0+255),b
  2140  000290  0EF8               	movlw	248
  2141  000292  0100               	movlb	0	; () banked
  2142  000294  6FAD               	movwf	(fillCircle@color+1)& (0+255),b
  2143  000296  0E00               	movlw	0
  2144  000298  6FAC               	movwf	fillCircle@color& (0+255),b
  2145  00029A  ECB5  F009         	call	_fillCircle	;wreg free
  2146                           
  2147                           ;Lab9test.c: 198: drawCircle(60, 20 + 15, 7, 0xFFE0);
  2148  00029E  0E00               	movlw	0
  2149  0002A0  6E1B               	movwf	drawCircle@x0+1,c
  2150  0002A2  0E3C               	movlw	60
  2151  0002A4  6E1A               	movwf	drawCircle@x0,c
  2152  0002A6  0E00               	movlw	0
  2153  0002A8  6E1D               	movwf	drawCircle@y0+1,c
  2154  0002AA  0E23               	movlw	35
  2155  0002AC  6E1C               	movwf	drawCircle@y0,c
  2156  0002AE  0E00               	movlw	0
  2157  0002B0  6E1F               	movwf	drawCircle@r+1,c
  2158  0002B2  0E07               	movlw	7
  2159  0002B4  6E1E               	movwf	drawCircle@r,c
  2160  0002B6  0EFF               	movlw	255
  2161  0002B8  6E21               	movwf	drawCircle@color+1,c
  2162  0002BA  0EE0               	movlw	224
  2163  0002BC  6E20               	movwf	drawCircle@color,c
  2164  0002BE  EC31  F004         	call	_drawCircle	;wreg free
  2165                           
  2166                           ;Lab9test.c: 199: drawCircle(80, 20 + 15, 7, 0x07E0);
  2167  0002C2  0E00               	movlw	0
  2168  0002C4  6E1B               	movwf	drawCircle@x0+1,c
  2169  0002C6  0E50               	movlw	80
  2170  0002C8  6E1A               	movwf	drawCircle@x0,c
  2171  0002CA  0E00               	movlw	0
  2172  0002CC  6E1D               	movwf	drawCircle@y0+1,c
  2173  0002CE  0E23               	movlw	35
  2174  0002D0  6E1C               	movwf	drawCircle@y0,c
  2175  0002D2  0E00               	movlw	0
  2176  0002D4  6E1F               	movwf	drawCircle@r+1,c
  2177  0002D6  0E07               	movlw	7
  2178  0002D8  6E1E               	movwf	drawCircle@r,c
  2179  0002DA  0E07               	movlw	7
  2180  0002DC  6E21               	movwf	drawCircle@color+1,c
  2181  0002DE  0EE0               	movlw	224
  2182  0002E0  6E20               	movwf	drawCircle@color,c
  2183  0002E2  EC31  F004         	call	_drawCircle	;wreg free
  2184                           
  2185                           ;Lab9test.c: 200: drawtext (100, 20 + 10, EW_Count, 0x07FF, 0x0000, 2);
  2186  0002E6  0E1E               	movlw	30
  2187  0002E8  0100               	movlb	0	; () banked
  2188  0002EA  6FA6               	movwf	drawtext@y& (0+255),b
  2189  0002EC  0E3D               	movlw	low _EW_Count
  2190  0002EE  0100               	movlb	0	; () banked
  2191  0002F0  6FA7               	movwf	drawtext@_text& (0+255),b
  2192  0002F2  0E00               	movlw	high _EW_Count
  2193  0002F4  0100               	movlb	0	; () banked
  2194  0002F6  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2195  0002F8  0E07               	movlw	7
  2196  0002FA  0100               	movlb	0	; () banked
  2197  0002FC  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2198  0002FE  69A9               	setf	drawtext@color& (0+255),b
  2199  000300  0E00               	movlw	0
  2200  000302  0100               	movlb	0	; () banked
  2201  000304  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2202  000306  0E00               	movlw	0
  2203  000308  6FAB               	movwf	drawtext@bg& (0+255),b
  2204  00030A  0E02               	movlw	2
  2205  00030C  0100               	movlb	0	; () banked
  2206  00030E  6FAD               	movwf	drawtext@size& (0+255),b
  2207  000310  0E64               	movlw	100
  2208  000312  EC4F  F006         	call	_drawtext
  2209                           
  2210                           ;Lab9test.c: 203: strcpy(txt, "E/W LT");
  2211  000316  C062  F00F         	movff	_txt,strcpy@to
  2212  00031A  C063  F010         	movff	_txt+1,strcpy@to+1
  2213  00031E  0EDD               	movlw	low STR_7
  2214  000320  6E11               	movwf	strcpy@from,c
  2215  000322  0EFF               	movlw	high STR_7
  2216  000324  6E12               	movwf	strcpy@from+1,c
  2217  000326  ECB6  F00A         	call	_strcpy	;wreg free
  2218                           
  2219                           ;Lab9test.c: 204: drawtext (30, 50, txt, 0xFFFF, 0x0000, 1);
  2220  00032A  0E32               	movlw	50
  2221  00032C  0100               	movlb	0	; () banked
  2222  00032E  6FA6               	movwf	drawtext@y& (0+255),b
  2223  000330  C062  F0A7         	movff	_txt,drawtext@_text
  2224  000334  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2225  000338  0EFF               	movlw	255
  2226  00033A  0100               	movlb	0	; () banked
  2227  00033C  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2228  00033E  69A9               	setf	drawtext@color& (0+255),b
  2229  000340  0E00               	movlw	0
  2230  000342  0100               	movlb	0	; () banked
  2231  000344  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2232  000346  0E00               	movlw	0
  2233  000348  6FAB               	movwf	drawtext@bg& (0+255),b
  2234  00034A  0E01               	movlw	1
  2235  00034C  0100               	movlb	0	; () banked
  2236  00034E  6FAD               	movwf	drawtext@size& (0+255),b
  2237  000350  0E1E               	movlw	30
  2238  000352  EC4F  F006         	call	_drawtext
  2239                           
  2240                           ;Lab9test.c: 205: drawRect (30, 50 + 15-8, 60, 18, 0xFFFF);
  2241  000356  0E00               	movlw	0
  2242  000358  6E22               	movwf	drawRect@x+1,c
  2243  00035A  0E1E               	movlw	30
  2244  00035C  6E21               	movwf	drawRect@x,c
  2245  00035E  0E00               	movlw	0
  2246  000360  6E24               	movwf	drawRect@y+1,c
  2247  000362  0E39               	movlw	57
  2248  000364  6E23               	movwf	drawRect@y,c
  2249  000366  0E00               	movlw	0
  2250  000368  6E26               	movwf	drawRect@w+1,c
  2251  00036A  0E3C               	movlw	60
  2252  00036C  6E25               	movwf	drawRect@w,c
  2253  00036E  0E00               	movlw	0
  2254  000370  6E28               	movwf	drawRect@h+1,c
  2255  000372  0E12               	movlw	18
  2256  000374  6E27               	movwf	drawRect@h,c
  2257  000376  0EFF               	movlw	255
  2258  000378  6E2A               	movwf	drawRect@color+1,c
  2259  00037A  6829               	setf	drawRect@color,c
  2260  00037C  EC82  F009         	call	_drawRect	;wreg free
  2261                           
  2262                           ;Lab9test.c: 206: fillCircle(40, 50 + 15, 7, 0xF800);
  2263  000380  0E00               	movlw	0
  2264  000382  0100               	movlb	0	; () banked
  2265  000384  6FA7               	movwf	(fillCircle@x0+1)& (0+255),b
  2266  000386  0E28               	movlw	40
  2267  000388  6FA6               	movwf	fillCircle@x0& (0+255),b
  2268  00038A  0E00               	movlw	0
  2269  00038C  0100               	movlb	0	; () banked
  2270  00038E  6FA9               	movwf	(fillCircle@y0+1)& (0+255),b
  2271  000390  0E41               	movlw	65
  2272  000392  6FA8               	movwf	fillCircle@y0& (0+255),b
  2273  000394  0E00               	movlw	0
  2274  000396  0100               	movlb	0	; () banked
  2275  000398  6FAB               	movwf	(fillCircle@r+1)& (0+255),b
  2276  00039A  0E07               	movlw	7
  2277  00039C  6FAA               	movwf	fillCircle@r& (0+255),b
  2278  00039E  0EF8               	movlw	248
  2279  0003A0  0100               	movlb	0	; () banked
  2280  0003A2  6FAD               	movwf	(fillCircle@color+1)& (0+255),b
  2281  0003A4  0E00               	movlw	0
  2282  0003A6  6FAC               	movwf	fillCircle@color& (0+255),b
  2283  0003A8  ECB5  F009         	call	_fillCircle	;wreg free
  2284                           
  2285                           ;Lab9test.c: 207: drawCircle(60, 50 + 15, 7, 0xFFE0);
  2286  0003AC  0E00               	movlw	0
  2287  0003AE  6E1B               	movwf	drawCircle@x0+1,c
  2288  0003B0  0E3C               	movlw	60
  2289  0003B2  6E1A               	movwf	drawCircle@x0,c
  2290  0003B4  0E00               	movlw	0
  2291  0003B6  6E1D               	movwf	drawCircle@y0+1,c
  2292  0003B8  0E41               	movlw	65
  2293  0003BA  6E1C               	movwf	drawCircle@y0,c
  2294  0003BC  0E00               	movlw	0
  2295  0003BE  6E1F               	movwf	drawCircle@r+1,c
  2296  0003C0  0E07               	movlw	7
  2297  0003C2  6E1E               	movwf	drawCircle@r,c
  2298  0003C4  0EFF               	movlw	255
  2299  0003C6  6E21               	movwf	drawCircle@color+1,c
  2300  0003C8  0EE0               	movlw	224
  2301  0003CA  6E20               	movwf	drawCircle@color,c
  2302  0003CC  EC31  F004         	call	_drawCircle	;wreg free
  2303                           
  2304                           ;Lab9test.c: 208: drawCircle(80, 50 + 15, 7, 0x07E0);
  2305  0003D0  0E00               	movlw	0
  2306  0003D2  6E1B               	movwf	drawCircle@x0+1,c
  2307  0003D4  0E50               	movlw	80
  2308  0003D6  6E1A               	movwf	drawCircle@x0,c
  2309  0003D8  0E00               	movlw	0
  2310  0003DA  6E1D               	movwf	drawCircle@y0+1,c
  2311  0003DC  0E41               	movlw	65
  2312  0003DE  6E1C               	movwf	drawCircle@y0,c
  2313  0003E0  0E00               	movlw	0
  2314  0003E2  6E1F               	movwf	drawCircle@r+1,c
  2315  0003E4  0E07               	movlw	7
  2316  0003E6  6E1E               	movwf	drawCircle@r,c
  2317  0003E8  0E07               	movlw	7
  2318  0003EA  6E21               	movwf	drawCircle@color+1,c
  2319  0003EC  0EE0               	movlw	224
  2320  0003EE  6E20               	movwf	drawCircle@color,c
  2321  0003F0  EC31  F004         	call	_drawCircle	;wreg free
  2322                           
  2323                           ;Lab9test.c: 209: drawtext (100, 50 + 10, EWLT_Count, 0xFFFF, 0x0000, 2);
  2324  0003F4  0E3C               	movlw	60
  2325  0003F6  0100               	movlb	0	; () banked
  2326  0003F8  6FA6               	movwf	drawtext@y& (0+255),b
  2327  0003FA  0E3A               	movlw	low _EWLT_Count
  2328  0003FC  0100               	movlb	0	; () banked
  2329  0003FE  6FA7               	movwf	drawtext@_text& (0+255),b
  2330  000400  0E00               	movlw	high _EWLT_Count
  2331  000402  0100               	movlb	0	; () banked
  2332  000404  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2333  000406  0EFF               	movlw	255
  2334  000408  0100               	movlb	0	; () banked
  2335  00040A  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2336  00040C  69A9               	setf	drawtext@color& (0+255),b
  2337  00040E  0E00               	movlw	0
  2338  000410  0100               	movlb	0	; () banked
  2339  000412  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2340  000414  0E00               	movlw	0
  2341  000416  6FAB               	movwf	drawtext@bg& (0+255),b
  2342  000418  0E02               	movlw	2
  2343  00041A  0100               	movlb	0	; () banked
  2344  00041C  6FAD               	movwf	drawtext@size& (0+255),b
  2345  00041E  0E64               	movlw	100
  2346  000420  EC4F  F006         	call	_drawtext
  2347                           
  2348                           ;Lab9test.c: 212: strcpy(txt, "NORTH/SOUTH");
  2349  000424  C062  F00F         	movff	_txt,strcpy@to
  2350  000428  C063  F010         	movff	_txt+1,strcpy@to+1
  2351  00042C  0EC0               	movlw	low STR_8
  2352  00042E  6E11               	movwf	strcpy@from,c
  2353  000430  0EFF               	movlw	high STR_8
  2354  000432  6E12               	movwf	strcpy@from+1,c
  2355  000434  ECB6  F00A         	call	_strcpy	;wreg free
  2356                           
  2357                           ;Lab9test.c: 213: drawtext (30, 80 , txt, 0x001F, 0x0000, 1);
  2358  000438  0E50               	movlw	80
  2359  00043A  0100               	movlb	0	; () banked
  2360  00043C  6FA6               	movwf	drawtext@y& (0+255),b
  2361  00043E  C062  F0A7         	movff	_txt,drawtext@_text
  2362  000442  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2363  000446  0E00               	movlw	0
  2364  000448  0100               	movlb	0	; () banked
  2365  00044A  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2366  00044C  0E1F               	movlw	31
  2367  00044E  6FA9               	movwf	drawtext@color& (0+255),b
  2368  000450  0E00               	movlw	0
  2369  000452  0100               	movlb	0	; () banked
  2370  000454  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2371  000456  0E00               	movlw	0
  2372  000458  6FAB               	movwf	drawtext@bg& (0+255),b
  2373  00045A  0E01               	movlw	1
  2374  00045C  0100               	movlb	0	; () banked
  2375  00045E  6FAD               	movwf	drawtext@size& (0+255),b
  2376  000460  0E1E               	movlw	30
  2377  000462  EC4F  F006         	call	_drawtext
  2378                           
  2379                           ;Lab9test.c: 214: drawRect (30, 80 + 15-8, 60, 18, 0x001F);
  2380  000466  0E00               	movlw	0
  2381  000468  6E22               	movwf	drawRect@x+1,c
  2382  00046A  0E1E               	movlw	30
  2383  00046C  6E21               	movwf	drawRect@x,c
  2384  00046E  0E00               	movlw	0
  2385  000470  6E24               	movwf	drawRect@y+1,c
  2386  000472  0E57               	movlw	87
  2387  000474  6E23               	movwf	drawRect@y,c
  2388  000476  0E00               	movlw	0
  2389  000478  6E26               	movwf	drawRect@w+1,c
  2390  00047A  0E3C               	movlw	60
  2391  00047C  6E25               	movwf	drawRect@w,c
  2392  00047E  0E00               	movlw	0
  2393  000480  6E28               	movwf	drawRect@h+1,c
  2394  000482  0E12               	movlw	18
  2395  000484  6E27               	movwf	drawRect@h,c
  2396  000486  0E00               	movlw	0
  2397  000488  6E2A               	movwf	drawRect@color+1,c
  2398  00048A  0E1F               	movlw	31
  2399  00048C  6E29               	movwf	drawRect@color,c
  2400  00048E  EC82  F009         	call	_drawRect	;wreg free
  2401                           
  2402                           ;Lab9test.c: 215: drawCircle(40, 80 + 15 , 7, 0xF800);
  2403  000492  0E00               	movlw	0
  2404  000494  6E1B               	movwf	drawCircle@x0+1,c
  2405  000496  0E28               	movlw	40
  2406  000498  6E1A               	movwf	drawCircle@x0,c
  2407  00049A  0E00               	movlw	0
  2408  00049C  6E1D               	movwf	drawCircle@y0+1,c
  2409  00049E  0E5F               	movlw	95
  2410  0004A0  6E1C               	movwf	drawCircle@y0,c
  2411  0004A2  0E00               	movlw	0
  2412  0004A4  6E1F               	movwf	drawCircle@r+1,c
  2413  0004A6  0E07               	movlw	7
  2414  0004A8  6E1E               	movwf	drawCircle@r,c
  2415  0004AA  0EF8               	movlw	248
  2416  0004AC  6E21               	movwf	drawCircle@color+1,c
  2417  0004AE  0E00               	movlw	0
  2418  0004B0  6E20               	movwf	drawCircle@color,c
  2419  0004B2  EC31  F004         	call	_drawCircle	;wreg free
  2420                           
  2421                           ;Lab9test.c: 216: drawCircle(60, 80 + 15 , 7, 0xFFE0);
  2422  0004B6  0E00               	movlw	0
  2423  0004B8  6E1B               	movwf	drawCircle@x0+1,c
  2424  0004BA  0E3C               	movlw	60
  2425  0004BC  6E1A               	movwf	drawCircle@x0,c
  2426  0004BE  0E00               	movlw	0
  2427  0004C0  6E1D               	movwf	drawCircle@y0+1,c
  2428  0004C2  0E5F               	movlw	95
  2429  0004C4  6E1C               	movwf	drawCircle@y0,c
  2430  0004C6  0E00               	movlw	0
  2431  0004C8  6E1F               	movwf	drawCircle@r+1,c
  2432  0004CA  0E07               	movlw	7
  2433  0004CC  6E1E               	movwf	drawCircle@r,c
  2434  0004CE  0EFF               	movlw	255
  2435  0004D0  6E21               	movwf	drawCircle@color+1,c
  2436  0004D2  0EE0               	movlw	224
  2437  0004D4  6E20               	movwf	drawCircle@color,c
  2438  0004D6  EC31  F004         	call	_drawCircle	;wreg free
  2439                           
  2440                           ;Lab9test.c: 217: fillCircle(80, 80 + 15 , 7, 0x07E0);
  2441  0004DA  0E00               	movlw	0
  2442  0004DC  0100               	movlb	0	; () banked
  2443  0004DE  6FA7               	movwf	(fillCircle@x0+1)& (0+255),b
  2444  0004E0  0E50               	movlw	80
  2445  0004E2  6FA6               	movwf	fillCircle@x0& (0+255),b
  2446  0004E4  0E00               	movlw	0
  2447  0004E6  0100               	movlb	0	; () banked
  2448  0004E8  6FA9               	movwf	(fillCircle@y0+1)& (0+255),b
  2449  0004EA  0E5F               	movlw	95
  2450  0004EC  6FA8               	movwf	fillCircle@y0& (0+255),b
  2451  0004EE  0E00               	movlw	0
  2452  0004F0  0100               	movlb	0	; () banked
  2453  0004F2  6FAB               	movwf	(fillCircle@r+1)& (0+255),b
  2454  0004F4  0E07               	movlw	7
  2455  0004F6  6FAA               	movwf	fillCircle@r& (0+255),b
  2456  0004F8  0E07               	movlw	7
  2457  0004FA  0100               	movlb	0	; () banked
  2458  0004FC  6FAD               	movwf	(fillCircle@color+1)& (0+255),b
  2459  0004FE  0EE0               	movlw	224
  2460  000500  6FAC               	movwf	fillCircle@color& (0+255),b
  2461  000502  ECB5  F009         	call	_fillCircle	;wreg free
  2462                           
  2463                           ;Lab9test.c: 218: drawtext (100, 80 + 10, NS_Count, 0x001F, 0x0000, 2);
  2464  000506  0E5A               	movlw	90
  2465  000508  0100               	movlb	0	; () banked
  2466  00050A  6FA6               	movwf	drawtext@y& (0+255),b
  2467  00050C  0E43               	movlw	low _NS_Count
  2468  00050E  0100               	movlb	0	; () banked
  2469  000510  6FA7               	movwf	drawtext@_text& (0+255),b
  2470  000512  0E00               	movlw	high _NS_Count
  2471  000514  0100               	movlb	0	; () banked
  2472  000516  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2473  000518  0E00               	movlw	0
  2474  00051A  0100               	movlb	0	; () banked
  2475  00051C  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2476  00051E  0E1F               	movlw	31
  2477  000520  6FA9               	movwf	drawtext@color& (0+255),b
  2478  000522  0E00               	movlw	0
  2479  000524  0100               	movlb	0	; () banked
  2480  000526  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2481  000528  0E00               	movlw	0
  2482  00052A  6FAB               	movwf	drawtext@bg& (0+255),b
  2483  00052C  0E02               	movlw	2
  2484  00052E  0100               	movlb	0	; () banked
  2485  000530  6FAD               	movwf	drawtext@size& (0+255),b
  2486  000532  0E64               	movlw	100
  2487  000534  EC4F  F006         	call	_drawtext
  2488                           
  2489                           ;Lab9test.c: 221: strcpy(txt, "N/S LT");
  2490  000538  C062  F00F         	movff	_txt,strcpy@to
  2491  00053C  C063  F010         	movff	_txt+1,strcpy@to+1
  2492  000540  0ED6               	movlw	low STR_9
  2493  000542  6E11               	movwf	strcpy@from,c
  2494  000544  0EFF               	movlw	high STR_9
  2495  000546  6E12               	movwf	strcpy@from+1,c
  2496  000548  ECB6  F00A         	call	_strcpy	;wreg free
  2497                           
  2498                           ;Lab9test.c: 222: drawtext (30, 110, txt, 0xF81F, 0x0000, 1);
  2499  00054C  0E6E               	movlw	110
  2500  00054E  0100               	movlb	0	; () banked
  2501  000550  6FA6               	movwf	drawtext@y& (0+255),b
  2502  000552  C062  F0A7         	movff	_txt,drawtext@_text
  2503  000556  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2504  00055A  0EF8               	movlw	248
  2505  00055C  0100               	movlb	0	; () banked
  2506  00055E  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2507  000560  0E1F               	movlw	31
  2508  000562  6FA9               	movwf	drawtext@color& (0+255),b
  2509  000564  0E00               	movlw	0
  2510  000566  0100               	movlb	0	; () banked
  2511  000568  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2512  00056A  0E00               	movlw	0
  2513  00056C  6FAB               	movwf	drawtext@bg& (0+255),b
  2514  00056E  0E01               	movlw	1
  2515  000570  0100               	movlb	0	; () banked
  2516  000572  6FAD               	movwf	drawtext@size& (0+255),b
  2517  000574  0E1E               	movlw	30
  2518  000576  EC4F  F006         	call	_drawtext
  2519                           
  2520                           ;Lab9test.c: 223: drawRect (30, 110 + 15-8, 60, 18, 0xF81F);
  2521  00057A  0E00               	movlw	0
  2522  00057C  6E22               	movwf	drawRect@x+1,c
  2523  00057E  0E1E               	movlw	30
  2524  000580  6E21               	movwf	drawRect@x,c
  2525  000582  0E00               	movlw	0
  2526  000584  6E24               	movwf	drawRect@y+1,c
  2527  000586  0E75               	movlw	117
  2528  000588  6E23               	movwf	drawRect@y,c
  2529  00058A  0E00               	movlw	0
  2530  00058C  6E26               	movwf	drawRect@w+1,c
  2531  00058E  0E3C               	movlw	60
  2532  000590  6E25               	movwf	drawRect@w,c
  2533  000592  0E00               	movlw	0
  2534  000594  6E28               	movwf	drawRect@h+1,c
  2535  000596  0E12               	movlw	18
  2536  000598  6E27               	movwf	drawRect@h,c
  2537  00059A  0EF8               	movlw	248
  2538  00059C  6E2A               	movwf	drawRect@color+1,c
  2539  00059E  0E1F               	movlw	31
  2540  0005A0  6E29               	movwf	drawRect@color,c
  2541  0005A2  EC82  F009         	call	_drawRect	;wreg free
  2542                           
  2543                           ;Lab9test.c: 224: fillCircle(40, 110 + 15, 7, 0xF800);
  2544  0005A6  0E00               	movlw	0
  2545  0005A8  0100               	movlb	0	; () banked
  2546  0005AA  6FA7               	movwf	(fillCircle@x0+1)& (0+255),b
  2547  0005AC  0E28               	movlw	40
  2548  0005AE  6FA6               	movwf	fillCircle@x0& (0+255),b
  2549  0005B0  0E00               	movlw	0
  2550  0005B2  0100               	movlb	0	; () banked
  2551  0005B4  6FA9               	movwf	(fillCircle@y0+1)& (0+255),b
  2552  0005B6  0E7D               	movlw	125
  2553  0005B8  6FA8               	movwf	fillCircle@y0& (0+255),b
  2554  0005BA  0E00               	movlw	0
  2555  0005BC  0100               	movlb	0	; () banked
  2556  0005BE  6FAB               	movwf	(fillCircle@r+1)& (0+255),b
  2557  0005C0  0E07               	movlw	7
  2558  0005C2  6FAA               	movwf	fillCircle@r& (0+255),b
  2559  0005C4  0EF8               	movlw	248
  2560  0005C6  0100               	movlb	0	; () banked
  2561  0005C8  6FAD               	movwf	(fillCircle@color+1)& (0+255),b
  2562  0005CA  0E00               	movlw	0
  2563  0005CC  6FAC               	movwf	fillCircle@color& (0+255),b
  2564  0005CE  ECB5  F009         	call	_fillCircle	;wreg free
  2565                           
  2566                           ;Lab9test.c: 225: drawCircle(60, 110 + 15, 7, 0xFFE0);
  2567  0005D2  0E00               	movlw	0
  2568  0005D4  6E1B               	movwf	drawCircle@x0+1,c
  2569  0005D6  0E3C               	movlw	60
  2570  0005D8  6E1A               	movwf	drawCircle@x0,c
  2571  0005DA  0E00               	movlw	0
  2572  0005DC  6E1D               	movwf	drawCircle@y0+1,c
  2573  0005DE  0E7D               	movlw	125
  2574  0005E0  6E1C               	movwf	drawCircle@y0,c
  2575  0005E2  0E00               	movlw	0
  2576  0005E4  6E1F               	movwf	drawCircle@r+1,c
  2577  0005E6  0E07               	movlw	7
  2578  0005E8  6E1E               	movwf	drawCircle@r,c
  2579  0005EA  0EFF               	movlw	255
  2580  0005EC  6E21               	movwf	drawCircle@color+1,c
  2581  0005EE  0EE0               	movlw	224
  2582  0005F0  6E20               	movwf	drawCircle@color,c
  2583  0005F2  EC31  F004         	call	_drawCircle	;wreg free
  2584                           
  2585                           ;Lab9test.c: 226: drawCircle(80, 110 + 15, 7, 0x07E0);
  2586  0005F6  0E00               	movlw	0
  2587  0005F8  6E1B               	movwf	drawCircle@x0+1,c
  2588  0005FA  0E50               	movlw	80
  2589  0005FC  6E1A               	movwf	drawCircle@x0,c
  2590  0005FE  0E00               	movlw	0
  2591  000600  6E1D               	movwf	drawCircle@y0+1,c
  2592  000602  0E7D               	movlw	125
  2593  000604  6E1C               	movwf	drawCircle@y0,c
  2594  000606  0E00               	movlw	0
  2595  000608  6E1F               	movwf	drawCircle@r+1,c
  2596  00060A  0E07               	movlw	7
  2597  00060C  6E1E               	movwf	drawCircle@r,c
  2598  00060E  0E07               	movlw	7
  2599  000610  6E21               	movwf	drawCircle@color+1,c
  2600  000612  0EE0               	movlw	224
  2601  000614  6E20               	movwf	drawCircle@color,c
  2602  000616  EC31  F004         	call	_drawCircle	;wreg free
  2603                           
  2604                           ;Lab9test.c: 227: drawtext (100, 110 + 10, NSLT_Count, 0xF81F, 0x0000, 2);
  2605  00061A  0E78               	movlw	120
  2606  00061C  0100               	movlb	0	; () banked
  2607  00061E  6FA6               	movwf	drawtext@y& (0+255),b
  2608  000620  0E40               	movlw	low _NSLT_Count
  2609  000622  0100               	movlb	0	; () banked
  2610  000624  6FA7               	movwf	drawtext@_text& (0+255),b
  2611  000626  0E00               	movlw	high _NSLT_Count
  2612  000628  0100               	movlb	0	; () banked
  2613  00062A  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2614  00062C  0EF8               	movlw	248
  2615  00062E  0100               	movlb	0	; () banked
  2616  000630  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2617  000632  0E1F               	movlw	31
  2618  000634  6FA9               	movwf	drawtext@color& (0+255),b
  2619  000636  0E00               	movlw	0
  2620  000638  0100               	movlb	0	; () banked
  2621  00063A  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2622  00063C  0E00               	movlw	0
  2623  00063E  6FAB               	movwf	drawtext@bg& (0+255),b
  2624  000640  0E02               	movlw	2
  2625  000642  0100               	movlb	0	; () banked
  2626  000644  6FAD               	movwf	drawtext@size& (0+255),b
  2627  000646  0E64               	movlw	100
  2628  000648  EC4F  F006         	call	_drawtext
  2629                           
  2630                           ;Lab9test.c: 231: drawtext(2, 30, PED_EW_Count, 0x07FF, 0x0000, 2);
  2631  00064C  0E1E               	movlw	30
  2632  00064E  0100               	movlb	0	; () banked
  2633  000650  6FA6               	movwf	drawtext@y& (0+255),b
  2634  000652  0E46               	movlw	low _PED_EW_Count
  2635  000654  0100               	movlb	0	; () banked
  2636  000656  6FA7               	movwf	drawtext@_text& (0+255),b
  2637  000658  0E00               	movlw	high _PED_EW_Count
  2638  00065A  0100               	movlb	0	; () banked
  2639  00065C  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2640  00065E  0E07               	movlw	7
  2641  000660  0100               	movlb	0	; () banked
  2642  000662  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2643  000664  69A9               	setf	drawtext@color& (0+255),b
  2644  000666  0E00               	movlw	0
  2645  000668  0100               	movlb	0	; () banked
  2646  00066A  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2647  00066C  0E00               	movlw	0
  2648  00066E  6FAB               	movwf	drawtext@bg& (0+255),b
  2649  000670  0E02               	movlw	2
  2650  000672  0100               	movlb	0	; () banked
  2651  000674  6FAD               	movwf	drawtext@size& (0+255),b
  2652  000676  0E02               	movlw	2
  2653  000678  EC4F  F006         	call	_drawtext
  2654                           
  2655                           ;Lab9test.c: 232: strcpy(txt, "PEW");
  2656  00067C  C062  F00F         	movff	_txt,strcpy@to
  2657  000680  C063  F010         	movff	_txt+1,strcpy@to+1
  2658  000684  0EF6               	movlw	low STR_10
  2659  000686  6E11               	movwf	strcpy@from,c
  2660  000688  0EFF               	movlw	high STR_10
  2661  00068A  6E12               	movwf	strcpy@from+1,c
  2662  00068C  ECB6  F00A         	call	_strcpy	;wreg free
  2663                           
  2664                           ;Lab9test.c: 233: drawtext(3, 20, txt, 0x07FF, 0x0000, 1);
  2665  000690  0E14               	movlw	20
  2666  000692  0100               	movlb	0	; () banked
  2667  000694  6FA6               	movwf	drawtext@y& (0+255),b
  2668  000696  C062  F0A7         	movff	_txt,drawtext@_text
  2669  00069A  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2670  00069E  0E07               	movlw	7
  2671  0006A0  0100               	movlb	0	; () banked
  2672  0006A2  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2673  0006A4  69A9               	setf	drawtext@color& (0+255),b
  2674  0006A6  0E00               	movlw	0
  2675  0006A8  0100               	movlb	0	; () banked
  2676  0006AA  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2677  0006AC  0E00               	movlw	0
  2678  0006AE  6FAB               	movwf	drawtext@bg& (0+255),b
  2679  0006B0  0E01               	movlw	1
  2680  0006B2  0100               	movlb	0	; () banked
  2681  0006B4  6FAD               	movwf	drawtext@size& (0+255),b
  2682  0006B6  0E03               	movlw	3
  2683  0006B8  EC4F  F006         	call	_drawtext
  2684                           
  2685                           ;Lab9test.c: 236: strcpy(txt, "PNS");
  2686  0006BC  C062  F00F         	movff	_txt,strcpy@to
  2687  0006C0  C063  F010         	movff	_txt+1,strcpy@to+1
  2688  0006C4  0EF2               	movlw	low STR_11
  2689  0006C6  6E11               	movwf	strcpy@from,c
  2690  0006C8  0EFF               	movlw	high STR_11
  2691  0006CA  6E12               	movwf	strcpy@from+1,c
  2692  0006CC  ECB6  F00A         	call	_strcpy	;wreg free
  2693                           
  2694                           ;Lab9test.c: 237: drawtext(3, 80, txt, 0x001F, 0x0000, 1);
  2695  0006D0  0E50               	movlw	80
  2696  0006D2  0100               	movlb	0	; () banked
  2697  0006D4  6FA6               	movwf	drawtext@y& (0+255),b
  2698  0006D6  C062  F0A7         	movff	_txt,drawtext@_text
  2699  0006DA  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2700  0006DE  0E00               	movlw	0
  2701  0006E0  0100               	movlb	0	; () banked
  2702  0006E2  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2703  0006E4  0E1F               	movlw	31
  2704  0006E6  6FA9               	movwf	drawtext@color& (0+255),b
  2705  0006E8  0E00               	movlw	0
  2706  0006EA  0100               	movlb	0	; () banked
  2707  0006EC  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2708  0006EE  0E00               	movlw	0
  2709  0006F0  6FAB               	movwf	drawtext@bg& (0+255),b
  2710  0006F2  0E01               	movlw	1
  2711  0006F4  0100               	movlb	0	; () banked
  2712  0006F6  6FAD               	movwf	drawtext@size& (0+255),b
  2713  0006F8  0E03               	movlw	3
  2714  0006FA  EC4F  F006         	call	_drawtext
  2715                           
  2716                           ;Lab9test.c: 238: drawtext(2, 90, PED_NS_Count, 0x001F, 0x0000, 2);
  2717  0006FE  0E5A               	movlw	90
  2718  000700  0100               	movlb	0	; () banked
  2719  000702  6FA6               	movwf	drawtext@y& (0+255),b
  2720  000704  0E49               	movlw	low _PED_NS_Count
  2721  000706  0100               	movlb	0	; () banked
  2722  000708  6FA7               	movwf	drawtext@_text& (0+255),b
  2723  00070A  0E00               	movlw	high _PED_NS_Count
  2724  00070C  0100               	movlb	0	; () banked
  2725  00070E  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2726  000710  0E00               	movlw	0
  2727  000712  0100               	movlb	0	; () banked
  2728  000714  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2729  000716  0E1F               	movlw	31
  2730  000718  6FA9               	movwf	drawtext@color& (0+255),b
  2731  00071A  0E00               	movlw	0
  2732  00071C  0100               	movlb	0	; () banked
  2733  00071E  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2734  000720  0E00               	movlw	0
  2735  000722  6FAB               	movwf	drawtext@bg& (0+255),b
  2736  000724  0E02               	movlw	2
  2737  000726  0100               	movlb	0	; () banked
  2738  000728  6FAD               	movwf	drawtext@size& (0+255),b
  2739  00072A  0E02               	movlw	2
  2740  00072C  EC4F  F006         	call	_drawtext
  2741                           
  2742                           ;Lab9test.c: 241: strcpy(txt, "EWP EWLT NSP NSLT MD");
  2743  000730  C062  F00F         	movff	_txt,strcpy@to
  2744  000734  C063  F010         	movff	_txt+1,strcpy@to+1
  2745  000738  0EAB               	movlw	low STR_12
  2746  00073A  6E11               	movwf	strcpy@from,c
  2747  00073C  0EFF               	movlw	high STR_12
  2748  00073E  6E12               	movwf	strcpy@from+1,c
  2749  000740  ECB6  F00A         	call	_strcpy	;wreg free
  2750                           
  2751                           ;Lab9test.c: 242: drawtext(1, 140, txt, 0xFFFF, 0x0000, 1);
  2752  000744  0E8C               	movlw	140
  2753  000746  0100               	movlb	0	; () banked
  2754  000748  6FA6               	movwf	drawtext@y& (0+255),b
  2755  00074A  C062  F0A7         	movff	_txt,drawtext@_text
  2756  00074E  C063  F0A8         	movff	_txt+1,drawtext@_text+1
  2757  000752  0EFF               	movlw	255
  2758  000754  0100               	movlb	0	; () banked
  2759  000756  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2760  000758  69A9               	setf	drawtext@color& (0+255),b
  2761  00075A  0E00               	movlw	0
  2762  00075C  0100               	movlb	0	; () banked
  2763  00075E  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2764  000760  0E00               	movlw	0
  2765  000762  6FAB               	movwf	drawtext@bg& (0+255),b
  2766  000764  0E01               	movlw	1
  2767  000766  0100               	movlb	0	; () banked
  2768  000768  6FAD               	movwf	drawtext@size& (0+255),b
  2769  00076A  0E01               	movlw	1
  2770  00076C  EC4F  F006         	call	_drawtext
  2771                           
  2772                           ;Lab9test.c: 243: drawtext(6, 140+9, SW_EWPED_Txt, 0xFFFF, 0x0000, 1);
  2773  000770  0E95               	movlw	149
  2774  000772  0100               	movlb	0	; () banked
  2775  000774  6FA6               	movwf	drawtext@y& (0+255),b
  2776  000776  0E54               	movlw	low _SW_EWPED_Txt
  2777  000778  0100               	movlb	0	; () banked
  2778  00077A  6FA7               	movwf	drawtext@_text& (0+255),b
  2779  00077C  0E00               	movlw	high _SW_EWPED_Txt
  2780  00077E  0100               	movlb	0	; () banked
  2781  000780  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2782  000782  0EFF               	movlw	255
  2783  000784  0100               	movlb	0	; () banked
  2784  000786  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2785  000788  69A9               	setf	drawtext@color& (0+255),b
  2786  00078A  0E00               	movlw	0
  2787  00078C  0100               	movlb	0	; () banked
  2788  00078E  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2789  000790  0E00               	movlw	0
  2790  000792  6FAB               	movwf	drawtext@bg& (0+255),b
  2791  000794  0E01               	movlw	1
  2792  000796  0100               	movlb	0	; () banked
  2793  000798  6FAD               	movwf	drawtext@size& (0+255),b
  2794  00079A  0E06               	movlw	6
  2795  00079C  EC4F  F006         	call	_drawtext
  2796                           
  2797                           ;Lab9test.c: 244: drawtext(32, 140+9, SW_EWLT_Txt, 0xFFFF, 0x0000, 1);
  2798  0007A0  0E95               	movlw	149
  2799  0007A2  0100               	movlb	0	; () banked
  2800  0007A4  6FA6               	movwf	drawtext@y& (0+255),b
  2801  0007A6  0E52               	movlw	low _SW_EWLT_Txt
  2802  0007A8  0100               	movlb	0	; () banked
  2803  0007AA  6FA7               	movwf	drawtext@_text& (0+255),b
  2804  0007AC  0E00               	movlw	high _SW_EWLT_Txt
  2805  0007AE  0100               	movlb	0	; () banked
  2806  0007B0  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2807  0007B2  0EFF               	movlw	255
  2808  0007B4  0100               	movlb	0	; () banked
  2809  0007B6  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2810  0007B8  69A9               	setf	drawtext@color& (0+255),b
  2811  0007BA  0E00               	movlw	0
  2812  0007BC  0100               	movlb	0	; () banked
  2813  0007BE  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2814  0007C0  0E00               	movlw	0
  2815  0007C2  6FAB               	movwf	drawtext@bg& (0+255),b
  2816  0007C4  0E01               	movlw	1
  2817  0007C6  0100               	movlb	0	; () banked
  2818  0007C8  6FAD               	movwf	drawtext@size& (0+255),b
  2819  0007CA  0E20               	movlw	32
  2820  0007CC  EC4F  F006         	call	_drawtext
  2821                           
  2822                           ;Lab9test.c: 245: drawtext(58, 140+9, SW_NSPED_Txt, 0xFFFF, 0x0000, 1);
  2823  0007D0  0E95               	movlw	149
  2824  0007D2  0100               	movlb	0	; () banked
  2825  0007D4  6FA6               	movwf	drawtext@y& (0+255),b
  2826  0007D6  0E5A               	movlw	low _SW_NSPED_Txt
  2827  0007D8  0100               	movlb	0	; () banked
  2828  0007DA  6FA7               	movwf	drawtext@_text& (0+255),b
  2829  0007DC  0E00               	movlw	high _SW_NSPED_Txt
  2830  0007DE  0100               	movlb	0	; () banked
  2831  0007E0  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2832  0007E2  0EFF               	movlw	255
  2833  0007E4  0100               	movlb	0	; () banked
  2834  0007E6  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2835  0007E8  69A9               	setf	drawtext@color& (0+255),b
  2836  0007EA  0E00               	movlw	0
  2837  0007EC  0100               	movlb	0	; () banked
  2838  0007EE  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2839  0007F0  0E00               	movlw	0
  2840  0007F2  6FAB               	movwf	drawtext@bg& (0+255),b
  2841  0007F4  0E01               	movlw	1
  2842  0007F6  0100               	movlb	0	; () banked
  2843  0007F8  6FAD               	movwf	drawtext@size& (0+255),b
  2844  0007FA  0E3A               	movlw	58
  2845  0007FC  EC4F  F006         	call	_drawtext
  2846                           
  2847                           ;Lab9test.c: 246: drawtext(87, 140+9, SW_NSLT_Txt, 0xFFFF, 0x0000, 1);
  2848  000800  0E95               	movlw	149
  2849  000802  0100               	movlb	0	; () banked
  2850  000804  6FA6               	movwf	drawtext@y& (0+255),b
  2851  000806  0E58               	movlw	low _SW_NSLT_Txt
  2852  000808  0100               	movlb	0	; () banked
  2853  00080A  6FA7               	movwf	drawtext@_text& (0+255),b
  2854  00080C  0E00               	movlw	high _SW_NSLT_Txt
  2855  00080E  0100               	movlb	0	; () banked
  2856  000810  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2857  000812  0EFF               	movlw	255
  2858  000814  0100               	movlb	0	; () banked
  2859  000816  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2860  000818  69A9               	setf	drawtext@color& (0+255),b
  2861  00081A  0E00               	movlw	0
  2862  00081C  0100               	movlb	0	; () banked
  2863  00081E  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2864  000820  0E00               	movlw	0
  2865  000822  6FAB               	movwf	drawtext@bg& (0+255),b
  2866  000824  0E01               	movlw	1
  2867  000826  0100               	movlb	0	; () banked
  2868  000828  6FAD               	movwf	drawtext@size& (0+255),b
  2869  00082A  0E57               	movlw	87
  2870  00082C  EC4F  F006         	call	_drawtext
  2871                           
  2872                           ;Lab9test.c: 248: drawtext(112,140+9, SW_MODE_Txt, 0xFFFF, 0x0000, 1);
  2873  000830  0E95               	movlw	149
  2874  000832  0100               	movlb	0	; () banked
  2875  000834  6FA6               	movwf	drawtext@y& (0+255),b
  2876  000836  0E56               	movlw	low _SW_MODE_Txt
  2877  000838  0100               	movlb	0	; () banked
  2878  00083A  6FA7               	movwf	drawtext@_text& (0+255),b
  2879  00083C  0E00               	movlw	high _SW_MODE_Txt
  2880  00083E  0100               	movlb	0	; () banked
  2881  000840  6FA8               	movwf	(drawtext@_text+1)& (0+255),b
  2882  000842  0EFF               	movlw	255
  2883  000844  0100               	movlb	0	; () banked
  2884  000846  6FAA               	movwf	(drawtext@color+1)& (0+255),b
  2885  000848  69A9               	setf	drawtext@color& (0+255),b
  2886  00084A  0E00               	movlw	0
  2887  00084C  0100               	movlb	0	; () banked
  2888  00084E  6FAC               	movwf	(drawtext@bg+1)& (0+255),b
  2889  000850  0E00               	movlw	0
  2890  000852  6FAB               	movwf	drawtext@bg& (0+255),b
  2891  000854  0E01               	movlw	1
  2892  000856  0100               	movlb	0	; () banked
  2893  000858  6FAD               	movwf	drawtext@size& (0+255),b
  2894  00085A  0E70               	movlw	112
  2895  00085C  EC4F  F006         	call	_drawtext
  2896  000860  0012               	return		;funcret
  2897  000862                     __end_of_Initialize_Screen:
  2898                           	opt stack 0
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           intcon2	equ	0xFF1
  2904                           postinc0	equ	0xFEE
  2905                           wreg	equ	0xFE8
  2906                           postdec1	equ	0xFE5
  2907                           fsr1l	equ	0xFE1
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _strcpy *****************
  2911 ;; Defined at:
  2912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  to              2   14[COMRAM] PTR unsigned char 
  2915 ;;		 -> NULL(0), buffer(31), 
  2916 ;;  from            2   16[COMRAM] PTR const unsigned char 
  2917 ;;		 -> STR_17(2), STR_16(2), STR_12(21), STR_11(4), 
  2918 ;;		 -> STR_10(4), STR_9(7), STR_8(12), STR_7(7), 
  2919 ;;		 -> STR_6(10), STR_5(2), STR_4(4), STR_3(4), 
  2920 ;;		 -> STR_2(6), STR_1(22), 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  cp              2   18[COMRAM] PTR unsigned char 
  2923 ;;		 -> NULL(0), buffer(31), 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  2   14[COMRAM] PTR unsigned char 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:        6 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    2
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_Initialize_Screen
  2944 ;;		_Wait_One_Second
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text4
  2949  00156C                     __ptext4:
  2950                           	opt stack 0
  2951  00156C                     _strcpy:
  2952                           	opt stack 27
  2953                           
  2954                           ;incstack = 0
  2955  00156C  C00F  F013         	movff	strcpy@to,strcpy@cp
  2956  001570  C010  F014         	movff	strcpy@to+1,strcpy@cp+1
  2957  001574  D005               	goto	l2912
  2958  001576                     l2910:
  2959  001576  4A13               	infsnz	strcpy@cp,f,c
  2960  001578  2A14               	incf	strcpy@cp+1,f,c
  2961  00157A  4A11               	infsnz	strcpy@from,f,c
  2962  00157C  2A12               	incf	strcpy@from+1,f,c
  2963  00157E  D000               	goto	l2912
  2964  001580                     l2912:
  2965  001580  C011  FFF6         	movff	strcpy@from,tblptrl
  2966  001584  C012  FFF7         	movff	strcpy@from+1,tblptrh
  2967  001588                     	if	0	;tblptru may be non-zero
  2968  001588                     	endif
  2969  001588                     	if	0	;tblptru may be non-zero
  2970  001588                     	endif
  2971  001588  C013  FFD9         	movff	strcpy@cp,fsr2l
  2972  00158C  C014  FFDA         	movff	strcpy@cp+1,fsr2h
  2973  001590  0008               	tblrd		*
  2974  001592  CFF5 FFDF          	movff	tablat,indf2
  2975  001596  50DF               	movf	indf2,w,c
  2976  001598  A4D8               	btfss	status,2,c
  2977  00159A  D7ED               	goto	l2910
  2978                           
  2979                           ;	Return value of _strcpy is never used
  2980  00159C  0012               	return		;funcret
  2981  00159E                     __end_of_strcpy:
  2982                           	opt stack 0
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           intcon2	equ	0xFF1
  2988                           postinc0	equ	0xFEE
  2989                           wreg	equ	0xFE8
  2990                           postdec1	equ	0xFE5
  2991                           fsr1l	equ	0xFE1
  2992                           indf2	equ	0xFDF
  2993                           fsr2h	equ	0xFDA
  2994                           fsr2l	equ	0xFD9
  2995                           status	equ	0xFD8
  2996                           
  2997 ;; *************** function _fillScreen *****************
  2998 ;; Defined at:
  2999 ;;		line 652 in file "ST7735_TFT.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  color           2   33[COMRAM] unsigned int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        2 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    6
  3020 ;; This function calls:
  3021 ;;		_fillRectangle
  3022 ;; This function is called by:
  3023 ;;		_Initialize_Screen
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text5
  3028  00169A                     __ptext5:
  3029                           	opt stack 0
  3030  00169A                     _fillScreen:
  3031                           	opt stack 23
  3032                           
  3033                           ;ST7735_TFT.c: 654: fillRectangle(0, 0, 128, 160, color);
  3034                           
  3035                           ;incstack = 0
  3036  00169A  0E00               	movlw	0
  3037  00169C  6E16               	movwf	fillRectangle@y,c
  3038  00169E  0E80               	movlw	128
  3039  0016A0  6E17               	movwf	fillRectangle@w,c
  3040  0016A2  0EA0               	movlw	160
  3041  0016A4  6E18               	movwf	fillRectangle@h,c
  3042  0016A6  C022  F019         	movff	fillScreen@color,fillRectangle@color
  3043  0016AA  C023  F01A         	movff	fillScreen@color+1,fillRectangle@color+1
  3044  0016AE  0E00               	movlw	0
  3045  0016B0  ECDC  F007         	call	_fillRectangle
  3046  0016B4  0012               	return		;funcret
  3047  0016B6                     __end_of_fillScreen:
  3048                           	opt stack 0
  3049                           tblptru	equ	0xFF8
  3050                           tblptrh	equ	0xFF7
  3051                           tblptrl	equ	0xFF6
  3052                           tablat	equ	0xFF5
  3053                           intcon2	equ	0xFF1
  3054                           postinc0	equ	0xFEE
  3055                           wreg	equ	0xFE8
  3056                           postdec1	equ	0xFE5
  3057                           fsr1l	equ	0xFE1
  3058                           indf2	equ	0xFDF
  3059                           fsr2h	equ	0xFDA
  3060                           fsr2l	equ	0xFD9
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function _fillRectangle *****************
  3064 ;; Defined at:
  3065 ;;		line 536 in file "ST7735_TFT.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  x               1    wreg     unsigned char 
  3068 ;;  y               1   21[COMRAM] unsigned char 
  3069 ;;  w               1   22[COMRAM] unsigned char 
  3070 ;;  h               1   23[COMRAM] unsigned char 
  3071 ;;  color           2   24[COMRAM] unsigned int 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  x               1   32[COMRAM] unsigned char 
  3074 ;;  lo              1   31[COMRAM] unsigned char 
  3075 ;;  hi              1   30[COMRAM] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;		None               void
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:       12 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    5
  3092 ;; This function calls:
  3093 ;;		_setAddrWindow
  3094 ;;		_spiwrite
  3095 ;; This function is called by:
  3096 ;;		_fillScreen
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text6
  3101  000FB8                     __ptext6:
  3102                           	opt stack 0
  3103  000FB8                     _fillRectangle:
  3104                           	opt stack 23
  3105                           
  3106                           ;incstack = 0
  3107                           ;fillRectangle@x stored from wreg
  3108  000FB8  6E21               	movwf	fillRectangle@x,c
  3109                           
  3110                           ;ST7735_TFT.c: 538: unsigned char hi, lo;
  3111                           ;ST7735_TFT.c: 539: if((x >= 128) || (y >= 160))
  3112  000FBA  0E80               	movlw	128
  3113  000FBC  6021               	cpfslt	fillRectangle@x,c
  3114  000FBE  D069               	goto	l226
  3115  000FC0  0E9F               	movlw	159
  3116  000FC2  6416               	cpfsgt	fillRectangle@y,c
  3117  000FC4  D001               	goto	l4118
  3118                           
  3119                           ;ST7735_TFT.c: 540: return;
  3120  000FC6  D065               	goto	l226
  3121  000FC8                     l4118:
  3122                           
  3123                           ;ST7735_TFT.c: 541: if((x + w - 1) >= 128)
  3124  000FC8  0EFF               	movlw	255
  3125  000FCA  6E1B               	movwf	??_fillRectangle& (0+255),c
  3126  000FCC  0EFF               	movlw	255
  3127  000FCE  6E1C               	movwf	(??_fillRectangle+1)& (0+255),c
  3128  000FD0  5017               	movf	fillRectangle@w,w,c
  3129  000FD2  C021  F01D         	movff	fillRectangle@x,??_fillRectangle+2
  3130  000FD6  6A1E               	clrf	(??_fillRectangle+3)& (0+255),c
  3131  000FD8  261D               	addwf	??_fillRectangle+2,f,c
  3132  000FDA  0E00               	movlw	0
  3133  000FDC  221E               	addwfc	??_fillRectangle+3,f,c
  3134  000FDE  501B               	movf	??_fillRectangle,w,c
  3135  000FE0  261D               	addwf	??_fillRectangle+2,f,c
  3136  000FE2  501C               	movf	??_fillRectangle+1,w,c
  3137  000FE4  221E               	addwfc	??_fillRectangle+3,f,c
  3138  000FE6  BE1E               	btfsc	??_fillRectangle+3,7,c
  3139  000FE8  D00A               	goto	l227
  3140  000FEA  501E               	movf	??_fillRectangle+3,w,c
  3141  000FEC  E104               	bnz	u2600
  3142  000FEE  0E80               	movlw	128
  3143  000FF0  5C1D               	subwf	??_fillRectangle+2,w,c
  3144  000FF2  A0D8               	btfss	status,0,c
  3145  000FF4  D004               	goto	l227
  3146  000FF6                     u2600:
  3147                           
  3148                           ;ST7735_TFT.c: 542: w = 128 - x;
  3149  000FF6  5021               	movf	fillRectangle@x,w,c
  3150  000FF8  0800               	sublw	0
  3151  000FFA  0F80               	addlw	128
  3152  000FFC  6E17               	movwf	fillRectangle@w,c
  3153  000FFE                     l227:
  3154                           
  3155                           ;ST7735_TFT.c: 543: if((y + h - 1) >= 160)
  3156  000FFE  0EFF               	movlw	255
  3157  001000  6E1B               	movwf	??_fillRectangle& (0+255),c
  3158  001002  0EFF               	movlw	255
  3159  001004  6E1C               	movwf	(??_fillRectangle+1)& (0+255),c
  3160  001006  5018               	movf	fillRectangle@h,w,c
  3161  001008  C016  F01D         	movff	fillRectangle@y,??_fillRectangle+2
  3162  00100C  6A1E               	clrf	(??_fillRectangle+3)& (0+255),c
  3163  00100E  261D               	addwf	??_fillRectangle+2,f,c
  3164  001010  0E00               	movlw	0
  3165  001012  221E               	addwfc	??_fillRectangle+3,f,c
  3166  001014  501B               	movf	??_fillRectangle,w,c
  3167  001016  261D               	addwf	??_fillRectangle+2,f,c
  3168  001018  501C               	movf	??_fillRectangle+1,w,c
  3169  00101A  221E               	addwfc	??_fillRectangle+3,f,c
  3170  00101C  BE1E               	btfsc	??_fillRectangle+3,7,c
  3171  00101E  D00B               	goto	l4124
  3172  001020  501E               	movf	??_fillRectangle+3,w,c
  3173  001022  E104               	bnz	u2610
  3174  001024  0EA0               	movlw	160
  3175  001026  5C1D               	subwf	??_fillRectangle+2,w,c
  3176  001028  A0D8               	btfss	status,0,c
  3177  00102A  D005               	goto	l4124
  3178  00102C                     u2610:
  3179                           
  3180                           ;ST7735_TFT.c: 544: h = 160 - y;
  3181  00102C  5016               	movf	fillRectangle@y,w,c
  3182  00102E  0800               	sublw	0
  3183  001030  0FA0               	addlw	160
  3184  001032  6E18               	movwf	fillRectangle@h,c
  3185  001034  D000               	goto	l4124
  3186  001036                     l4124:
  3187                           
  3188                           ;ST7735_TFT.c: 545: setAddrWindow(x, y, x+w-1, y+h-1);
  3189  001036  C016  F012         	movff	fillRectangle@y,setAddrWindow@y0
  3190  00103A  5021               	movf	fillRectangle@x,w,c
  3191  00103C  2417               	addwf	fillRectangle@w,w,c
  3192  00103E  6E1B               	movwf	??_fillRectangle& (0+255),c
  3193  001040  041B               	decf	??_fillRectangle,w,c
  3194  001042  6E13               	movwf	setAddrWindow@x1,c
  3195  001044  5016               	movf	fillRectangle@y,w,c
  3196  001046  2418               	addwf	fillRectangle@h,w,c
  3197  001048  6E1C               	movwf	(??_fillRectangle+1)& (0+255),c
  3198  00104A  041C               	decf	??_fillRectangle+1,w,c
  3199  00104C  6E14               	movwf	setAddrWindow@y1,c
  3200  00104E  5021               	movf	fillRectangle@x,w,c
  3201  001050  EC0B  F00A         	call	_setAddrWindow
  3202                           
  3203                           ;ST7735_TFT.c: 546: hi = color >> 8; lo = color;
  3204  001054  501A               	movf	fillRectangle@color+1,w,c
  3205  001056  6E1F               	movwf	fillRectangle@hi,c
  3206  001058  C019  F020         	movff	fillRectangle@color,fillRectangle@lo
  3207                           
  3208                           ;ST7735_TFT.c: 547: PORTDbits.RD0 = 1;
  3209  00105C  8083               	bsf	3971,0,c	;volatile
  3210                           
  3211                           ;ST7735_TFT.c: 548: PORTDbits.RD1 = 0;
  3212  00105E  9283               	bcf	3971,1,c	;volatile
  3213                           
  3214                           ;ST7735_TFT.c: 550: for(y=h; y>0; y--) {
  3215  001060  C018  F016         	movff	fillRectangle@h,fillRectangle@y
  3216  001064                     l4136:
  3217  001064  5016               	movf	fillRectangle@y,w,c
  3218  001066  B4D8               	btfsc	status,2,c
  3219  001068  D013               	goto	l230
  3220  00106A  D001               	goto	l229
  3221  00106C  D011               	goto	l230
  3222  00106E                     l229:
  3223                           
  3224                           ;ST7735_TFT.c: 551: for(x = w; x > 0; x--) {
  3225  00106E  C017  F021         	movff	fillRectangle@w,fillRectangle@x
  3226  001072                     l4140:
  3227  001072  5021               	movf	fillRectangle@x,w,c
  3228  001074  B4D8               	btfsc	status,2,c
  3229  001076  D00A               	goto	l4150
  3230  001078  D001               	goto	l4144
  3231  00107A  D008               	goto	l4150
  3232  00107C                     l4144:
  3233                           
  3234                           ;ST7735_TFT.c: 552: spiwrite(hi);
  3235  00107C  501F               	movf	fillRectangle@hi,w,c
  3236  00107E  EC66  F00B         	call	_spiwrite
  3237                           
  3238                           ;ST7735_TFT.c: 553: spiwrite(lo);
  3239  001082  5020               	movf	fillRectangle@lo,w,c
  3240  001084  EC66  F00B         	call	_spiwrite
  3241  001088  0621               	decf	fillRectangle@x,f,c
  3242  00108A  D7F3               	goto	l4140
  3243  00108C                     l4150:
  3244  00108C  0616               	decf	fillRectangle@y,f,c
  3245  00108E  D7EA               	goto	l4136
  3246  001090                     l230:
  3247                           
  3248                           ;ST7735_TFT.c: 554: }
  3249                           ;ST7735_TFT.c: 555: }
  3250                           ;ST7735_TFT.c: 556: PORTDbits.RD1 = 1;
  3251  001090  8283               	bsf	3971,1,c	;volatile
  3252  001092                     l226:
  3253  001092  0012               	return		;funcret
  3254  001094                     __end_of_fillRectangle:
  3255                           	opt stack 0
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           intcon2	equ	0xFF1
  3261                           postinc0	equ	0xFEE
  3262                           wreg	equ	0xFE8
  3263                           postdec1	equ	0xFE5
  3264                           fsr1l	equ	0xFE1
  3265                           indf2	equ	0xFDF
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _fillCircle *****************
  3271 ;; Defined at:
  3272 ;;		line 647 in file "ST7735_TFT.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  x0              2    0[BANK0 ] int 
  3275 ;;  y0              2    2[BANK0 ] int 
  3276 ;;  r               2    4[BANK0 ] int 
  3277 ;;  color           2    6[BANK0 ] unsigned int 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:        8 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    7
  3296 ;; This function calls:
  3297 ;;		_drawFastVLine
  3298 ;;		_fillCircleHelper
  3299 ;; This function is called by:
  3300 ;;		_Initialize_Screen
  3301 ;;		_update_LCD_color
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text7
  3306  00136A                     __ptext7:
  3307                           	opt stack 0
  3308  00136A                     _fillCircle:
  3309                           	opt stack 22
  3310                           
  3311                           ;ST7735_TFT.c: 649: drawFastVLine(x0, y0 - r, 2 * r + 1, color);
  3312                           
  3313                           ;incstack = 0
  3314  00136A  0100               	movlb	0	; () banked
  3315  00136C  51AA               	movf	fillCircle@r& (0+255),w,b
  3316  00136E  0800               	sublw	0
  3317  001370  0100               	movlb	0	; () banked
  3318  001372  25A8               	addwf	fillCircle@y0& (0+255),w,b
  3319  001374  6E16               	movwf	drawFastVLine@y,c
  3320  001376  80D8               	bsf	status,0,c
  3321  001378  0100               	movlb	0	; () banked
  3322  00137A  35AA               	rlcf	fillCircle@r& (0+255),w,b
  3323  00137C  6E17               	movwf	drawFastVLine@h,c
  3324  00137E  C0AC  F018         	movff	fillCircle@color,drawFastVLine@color
  3325  001382  C0AD  F019         	movff	fillCircle@color+1,drawFastVLine@color+1
  3326  001386  0100               	movlb	0	; () banked
  3327  001388  51A6               	movf	fillCircle@x0& (0+255),w,b
  3328  00138A  EC4A  F008         	call	_drawFastVLine
  3329                           
  3330                           ;ST7735_TFT.c: 650: fillCircleHelper(x0, y0, r, 3, 0, color);
  3331  00138E  C0A6  F021         	movff	fillCircle@x0,fillCircleHelper@x0
  3332  001392  C0A7  F022         	movff	fillCircle@x0+1,fillCircleHelper@x0+1
  3333  001396  C0A8  F023         	movff	fillCircle@y0,fillCircleHelper@y0
  3334  00139A  C0A9  F024         	movff	fillCircle@y0+1,fillCircleHelper@y0+1
  3335  00139E  C0AA  F025         	movff	fillCircle@r,fillCircleHelper@r
  3336  0013A2  C0AB  F026         	movff	fillCircle@r+1,fillCircleHelper@r+1
  3337  0013A6  0E00               	movlw	0
  3338  0013A8  6E28               	movwf	fillCircleHelper@cornername+1,c
  3339  0013AA  0E03               	movlw	3
  3340  0013AC  6E27               	movwf	fillCircleHelper@cornername,c
  3341  0013AE  0E00               	movlw	0
  3342  0013B0  6E2A               	movwf	fillCircleHelper@delta+1,c
  3343  0013B2  0E00               	movlw	0
  3344  0013B4  6E29               	movwf	fillCircleHelper@delta,c
  3345  0013B6  C0AC  F02B         	movff	fillCircle@color,fillCircleHelper@color
  3346  0013BA  C0AD  F02C         	movff	fillCircle@color+1,fillCircleHelper@color+1
  3347  0013BE  ECB3  F005         	call	_fillCircleHelper	;wreg free
  3348  0013C2  0012               	return		;funcret
  3349  0013C4                     __end_of_fillCircle:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           intcon2	equ	0xFF1
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           postdec1	equ	0xFE5
  3359                           fsr1l	equ	0xFE1
  3360                           indf2	equ	0xFDF
  3361                           fsr2h	equ	0xFDA
  3362                           fsr2l	equ	0xFD9
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _fillCircleHelper *****************
  3366 ;; Defined at:
  3367 ;;		line 622 in file "ST7735_TFT.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  x0              2   32[COMRAM] int 
  3370 ;;  y0              2   34[COMRAM] int 
  3371 ;;  r               2   36[COMRAM] int 
  3372 ;;  cornername      2   38[COMRAM] unsigned int 
  3373 ;;  delta           2   40[COMRAM] int 
  3374 ;;  color           2   42[COMRAM] unsigned int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  y               2   54[COMRAM] int 
  3377 ;;  x               2   52[COMRAM] int 
  3378 ;;  f               2   50[COMRAM] int 
  3379 ;;  ddF_y           2   48[COMRAM] int 
  3380 ;;  ddF_x           2   46[COMRAM] int 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;		None               void
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:       24 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    6
  3397 ;; This function calls:
  3398 ;;		_drawFastVLine
  3399 ;; This function is called by:
  3400 ;;		_fillCircle
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text8
  3405  000B66                     __ptext8:
  3406                           	opt stack 0
  3407  000B66                     _fillCircleHelper:
  3408                           	opt stack 22
  3409                           
  3410                           ;ST7735_TFT.c: 624: signed int f, ddF_x, ddF_y, x, y;
  3411                           ;ST7735_TFT.c: 625: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  3412                           
  3413                           ;incstack = 0
  3414  000B66  C025  F02D         	movff	fillCircleHelper@r,??_fillCircleHelper
  3415  000B6A  C026  F02E         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  3416  000B6E  1E2D               	comf	??_fillCircleHelper,f,c
  3417  000B70  1E2E               	comf	??_fillCircleHelper+1,f,c
  3418  000B72  4A2D               	infsnz	??_fillCircleHelper,f,c
  3419  000B74  2A2E               	incf	??_fillCircleHelper+1,f,c
  3420  000B76  0E01               	movlw	1
  3421  000B78  242D               	addwf	??_fillCircleHelper,w,c
  3422  000B7A  6E33               	movwf	fillCircleHelper@f,c
  3423  000B7C  0E00               	movlw	0
  3424  000B7E  202E               	addwfc	??_fillCircleHelper+1,w,c
  3425  000B80  6E34               	movwf	fillCircleHelper@f+1,c
  3426  000B82  0E00               	movlw	0
  3427  000B84  6E30               	movwf	fillCircleHelper@ddF_x+1,c
  3428  000B86  0E01               	movlw	1
  3429  000B88  6E2F               	movwf	fillCircleHelper@ddF_x,c
  3430  000B8A  C025  F02D         	movff	fillCircleHelper@r,??_fillCircleHelper
  3431  000B8E  C026  F02E         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  3432  000B92  90D8               	bcf	status,0,c
  3433  000B94  362D               	rlcf	??_fillCircleHelper,f,c
  3434  000B96  362E               	rlcf	??_fillCircleHelper+1,f,c
  3435  000B98  1E2D               	comf	??_fillCircleHelper,f,c
  3436  000B9A  1E2E               	comf	??_fillCircleHelper+1,f,c
  3437  000B9C  4A2D               	infsnz	??_fillCircleHelper,f,c
  3438  000B9E  2A2E               	incf	??_fillCircleHelper+1,f,c
  3439  000BA0  C02D  F031         	movff	??_fillCircleHelper,fillCircleHelper@ddF_y
  3440  000BA4  C02E  F032         	movff	??_fillCircleHelper+1,fillCircleHelper@ddF_y+1
  3441  000BA8  0E00               	movlw	0
  3442  000BAA  6E36               	movwf	fillCircleHelper@x+1,c
  3443  000BAC  0E00               	movlw	0
  3444  000BAE  6E35               	movwf	fillCircleHelper@x,c
  3445  000BB0  C025  F037         	movff	fillCircleHelper@r,fillCircleHelper@y
  3446  000BB4  C026  F038         	movff	fillCircleHelper@r+1,fillCircleHelper@y+1
  3447                           
  3448                           ;ST7735_TFT.c: 626: while (x<y) {
  3449  000BB8  D067               	goto	l4184
  3450  000BBA                     l4164:
  3451                           
  3452                           ;ST7735_TFT.c: 627: if (f >= 0) {
  3453  000BBA  BE34               	btfsc	fillCircleHelper@f+1,7,c
  3454  000BBC  D00B               	goto	l255
  3455                           
  3456                           ;ST7735_TFT.c: 628: y--;
  3457  000BBE  0637               	decf	fillCircleHelper@y,f,c
  3458  000BC0  A0D8               	btfss	status,0,c
  3459  000BC2  0638               	decf	fillCircleHelper@y+1,f,c
  3460                           
  3461                           ;ST7735_TFT.c: 629: ddF_y += 2;
  3462  000BC4  0E02               	movlw	2
  3463  000BC6  2631               	addwf	fillCircleHelper@ddF_y,f,c
  3464  000BC8  0E00               	movlw	0
  3465  000BCA  2232               	addwfc	fillCircleHelper@ddF_y+1,f,c
  3466                           
  3467                           ;ST7735_TFT.c: 630: f += ddF_y;
  3468  000BCC  5031               	movf	fillCircleHelper@ddF_y,w,c
  3469  000BCE  2633               	addwf	fillCircleHelper@f,f,c
  3470  000BD0  5032               	movf	fillCircleHelper@ddF_y+1,w,c
  3471  000BD2  2234               	addwfc	fillCircleHelper@f+1,f,c
  3472  000BD4                     l255:
  3473                           
  3474                           ;ST7735_TFT.c: 631: }
  3475                           ;ST7735_TFT.c: 632: x++;
  3476  000BD4  4A35               	infsnz	fillCircleHelper@x,f,c
  3477  000BD6  2A36               	incf	fillCircleHelper@x+1,f,c
  3478                           
  3479                           ;ST7735_TFT.c: 633: ddF_x += 2;
  3480  000BD8  0E02               	movlw	2
  3481  000BDA  262F               	addwf	fillCircleHelper@ddF_x,f,c
  3482  000BDC  0E00               	movlw	0
  3483  000BDE  2230               	addwfc	fillCircleHelper@ddF_x+1,f,c
  3484                           
  3485                           ;ST7735_TFT.c: 634: f += ddF_x;
  3486  000BE0  502F               	movf	fillCircleHelper@ddF_x,w,c
  3487  000BE2  2633               	addwf	fillCircleHelper@f,f,c
  3488  000BE4  5030               	movf	fillCircleHelper@ddF_x+1,w,c
  3489  000BE6  2234               	addwfc	fillCircleHelper@f+1,f,c
  3490                           
  3491                           ;ST7735_TFT.c: 636: if (cornername & 0x1) {
  3492  000BE8  A027               	btfss	fillCircleHelper@cornername,0,c
  3493  000BEA  D025               	goto	l4180
  3494                           
  3495                           ;ST7735_TFT.c: 637: drawFastVLine(x0+x, y0-y, 2*y+1+delta, color);
  3496  000BEC  5037               	movf	fillCircleHelper@y,w,c
  3497  000BEE  0800               	sublw	0
  3498  000BF0  2423               	addwf	fillCircleHelper@y0,w,c
  3499  000BF2  6E16               	movwf	drawFastVLine@y,c
  3500  000BF4  5037               	movf	fillCircleHelper@y,w,c
  3501  000BF6  2437               	addwf	fillCircleHelper@y,w,c
  3502  000BF8  2429               	addwf	fillCircleHelper@delta,w,c
  3503  000BFA  6E2D               	movwf	??_fillCircleHelper& (0+255),c
  3504  000BFC  282D               	incf	??_fillCircleHelper,w,c
  3505  000BFE  6E17               	movwf	drawFastVLine@h,c
  3506  000C00  C02B  F018         	movff	fillCircleHelper@color,drawFastVLine@color
  3507  000C04  C02C  F019         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3508  000C08  5021               	movf	fillCircleHelper@x0,w,c
  3509  000C0A  2435               	addwf	fillCircleHelper@x,w,c
  3510  000C0C  EC4A  F008         	call	_drawFastVLine
  3511                           
  3512                           ;ST7735_TFT.c: 638: drawFastVLine(x0+y, y0-x, 2*x+1+delta, color);
  3513  000C10  5035               	movf	fillCircleHelper@x,w,c
  3514  000C12  0800               	sublw	0
  3515  000C14  2423               	addwf	fillCircleHelper@y0,w,c
  3516  000C16  6E16               	movwf	drawFastVLine@y,c
  3517  000C18  5035               	movf	fillCircleHelper@x,w,c
  3518  000C1A  2435               	addwf	fillCircleHelper@x,w,c
  3519  000C1C  2429               	addwf	fillCircleHelper@delta,w,c
  3520  000C1E  6E2D               	movwf	??_fillCircleHelper& (0+255),c
  3521  000C20  282D               	incf	??_fillCircleHelper,w,c
  3522  000C22  6E17               	movwf	drawFastVLine@h,c
  3523  000C24  C02B  F018         	movff	fillCircleHelper@color,drawFastVLine@color
  3524  000C28  C02C  F019         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3525  000C2C  5021               	movf	fillCircleHelper@x0,w,c
  3526  000C2E  2437               	addwf	fillCircleHelper@y,w,c
  3527  000C30  EC4A  F008         	call	_drawFastVLine
  3528  000C34  D000               	goto	l4180
  3529  000C36                     l4180:
  3530                           
  3531                           ;ST7735_TFT.c: 639: }
  3532                           ;ST7735_TFT.c: 640: if (cornername & 0x2) {
  3533  000C36  A227               	btfss	fillCircleHelper@cornername,1,c
  3534  000C38  D027               	goto	l4184
  3535                           
  3536                           ;ST7735_TFT.c: 641: drawFastVLine(x0-x, y0-y, 2*y+1+delta, color);
  3537  000C3A  5037               	movf	fillCircleHelper@y,w,c
  3538  000C3C  0800               	sublw	0
  3539  000C3E  2423               	addwf	fillCircleHelper@y0,w,c
  3540  000C40  6E16               	movwf	drawFastVLine@y,c
  3541  000C42  5037               	movf	fillCircleHelper@y,w,c
  3542  000C44  2437               	addwf	fillCircleHelper@y,w,c
  3543  000C46  2429               	addwf	fillCircleHelper@delta,w,c
  3544  000C48  6E2D               	movwf	??_fillCircleHelper& (0+255),c
  3545  000C4A  282D               	incf	??_fillCircleHelper,w,c
  3546  000C4C  6E17               	movwf	drawFastVLine@h,c
  3547  000C4E  C02B  F018         	movff	fillCircleHelper@color,drawFastVLine@color
  3548  000C52  C02C  F019         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3549  000C56  5035               	movf	fillCircleHelper@x,w,c
  3550  000C58  0800               	sublw	0
  3551  000C5A  2421               	addwf	fillCircleHelper@x0,w,c
  3552  000C5C  EC4A  F008         	call	_drawFastVLine
  3553                           
  3554                           ;ST7735_TFT.c: 642: drawFastVLine(x0-y, y0-x, 2*x+1+delta, color);
  3555  000C60  5035               	movf	fillCircleHelper@x,w,c
  3556  000C62  0800               	sublw	0
  3557  000C64  2423               	addwf	fillCircleHelper@y0,w,c
  3558  000C66  6E16               	movwf	drawFastVLine@y,c
  3559  000C68  5035               	movf	fillCircleHelper@x,w,c
  3560  000C6A  2435               	addwf	fillCircleHelper@x,w,c
  3561  000C6C  2429               	addwf	fillCircleHelper@delta,w,c
  3562  000C6E  6E2D               	movwf	??_fillCircleHelper& (0+255),c
  3563  000C70  282D               	incf	??_fillCircleHelper,w,c
  3564  000C72  6E17               	movwf	drawFastVLine@h,c
  3565  000C74  C02B  F018         	movff	fillCircleHelper@color,drawFastVLine@color
  3566  000C78  C02C  F019         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3567  000C7C  5037               	movf	fillCircleHelper@y,w,c
  3568  000C7E  0800               	sublw	0
  3569  000C80  2421               	addwf	fillCircleHelper@x0,w,c
  3570  000C82  EC4A  F008         	call	_drawFastVLine
  3571  000C86  D000               	goto	l4184
  3572  000C88                     l4184:
  3573  000C88  5037               	movf	fillCircleHelper@y,w,c
  3574  000C8A  5C35               	subwf	fillCircleHelper@x,w,c
  3575  000C8C  5036               	movf	fillCircleHelper@x+1,w,c
  3576  000C8E  0A80               	xorlw	128
  3577  000C90  6E2D               	movwf	??_fillCircleHelper& (0+255),c
  3578  000C92  5038               	movf	fillCircleHelper@y+1,w,c
  3579  000C94  0A80               	xorlw	128
  3580  000C96  582D               	subwfb	??_fillCircleHelper& (0+255),w,c
  3581  000C98  A0D8               	btfss	status,0,c
  3582  000C9A  D78F               	goto	l4164
  3583  000C9C  0012               	return		;funcret
  3584  000C9E                     __end_of_fillCircleHelper:
  3585                           	opt stack 0
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           intcon2	equ	0xFF1
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postdec1	equ	0xFE5
  3594                           fsr1l	equ	0xFE1
  3595                           indf2	equ	0xFDF
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function _drawtext *****************
  3601 ;; Defined at:
  3602 ;;		line 507 in file "ST7735_TFT.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  x               1    wreg     unsigned char 
  3605 ;;  y               1    0[BANK0 ] unsigned char 
  3606 ;;  _text           2    1[BANK0 ] PTR unsigned char 
  3607 ;;		 -> NULL(0), SW_MODE_Txt(2), SW_NSLT_Txt(2), SW_NSPED_Txt(2), 
  3608 ;;		 -> SW_EWLT_Txt(2), SW_EWPED_Txt(2), PED_NS_Count(3), PED_EW_Count(3), 
  3609 ;;		 -> NSLT_Count(3), NS_Count(3), EWLT_Count(3), EW_Count(3), 
  3610 ;;		 -> FlashingS_Txt(2), FlashingR_Txt(2), Act_Mode_Txt(2), buffer(31), 
  3611 ;;  color           2    3[BANK0 ] unsigned int 
  3612 ;;  bg              2    5[BANK0 ] unsigned int 
  3613 ;;  size            1    7[BANK0 ] unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  x               1    8[BANK0 ] unsigned char 
  3616 ;;  i               2   11[BANK0 ] unsigned int 
  3617 ;;  textsize        2    9[BANK0 ] unsigned int 
  3618 ;;  cursor_x        1   14[BANK0 ] unsigned char 
  3619 ;;  cursor_y        1   13[BANK0 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;		None               void
  3622 ;; Registers used:
  3623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3629 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;Total ram usage:       17 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    8
  3636 ;; This function calls:
  3637 ;;		_drawChar
  3638 ;;		_strlen
  3639 ;; This function is called by:
  3640 ;;		_Initialize_Screen
  3641 ;;		_Wait_One_Second
  3642 ;;		_update_LCD_count
  3643 ;;		_update_LCD_PED_Count
  3644 ;;		_update_LCD_misc
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text9
  3649  000C9E                     __ptext9:
  3650                           	opt stack 0
  3651  000C9E                     _drawtext:
  3652                           	opt stack 21
  3653                           
  3654                           ;incstack = 0
  3655                           ;drawtext@x stored from wreg
  3656  000C9E  0100               	movlb	0	; () banked
  3657  000CA0  6FAE               	movwf	drawtext@x& (0+255),b
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;ST7735_TFT.c: 509: unsigned char cursor_x, cursor_y;
  3661                           ;ST7735_TFT.c: 510: unsigned int textsize, i;
  3662                           ;ST7735_TFT.c: 511: cursor_x = x, cursor_y = y;
  3663  000CA2  C0AE  F0B4         	movff	drawtext@x,drawtext@cursor_x
  3664                           
  3665                           ; BSR set to: 0
  3666  000CA6  C0A6  F0B3         	movff	drawtext@y,drawtext@cursor_y
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;ST7735_TFT.c: 512: textsize = strlen(_text);
  3670  000CAA  C0A7  F00F         	movff	drawtext@_text,strlen@s
  3671  000CAE  C0A8  F010         	movff	drawtext@_text+1,strlen@s+1
  3672  000CB2  EC78  F00A         	call	_strlen	;wreg free
  3673  000CB6  C00F  F0AF         	movff	?_strlen,drawtext@textsize
  3674  000CBA  C010  F0B0         	movff	?_strlen+1,drawtext@textsize+1
  3675                           
  3676                           ;ST7735_TFT.c: 513: for(i = 0; i < textsize; i++){
  3677  000CBE  0E00               	movlw	0
  3678  000CC0  0100               	movlb	0	; () banked
  3679  000CC2  6FB2               	movwf	(drawtext@i+1)& (0+255),b
  3680  000CC4  0E00               	movlw	0
  3681  000CC6  6FB1               	movwf	drawtext@i& (0+255),b
  3682  000CC8  D06B               	goto	l4248
  3683  000CCA                     l4222:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;ST7735_TFT.c: 514: if(wrap && ((cursor_x + size * 5) > 128)){
  3687  000CCA  5039               	movf	_wrap,w,c
  3688  000CCC  B4D8               	btfsc	status,2,c
  3689  000CCE  D038               	goto	l4238
  3690                           
  3691                           ; BSR set to: 0
  3692  000CD0  0100               	movlb	0	; () banked
  3693  000CD2  51AD               	movf	drawtext@size& (0+255),w,b
  3694  000CD4  0D05               	mullw	5
  3695  000CD6  0100               	movlb	0	; () banked
  3696  000CD8  51B4               	movf	drawtext@cursor_x& (0+255),w,b
  3697  000CDA  6E37               	movwf	??_drawtext& (0+255),c
  3698  000CDC  6A38               	clrf	(??_drawtext+1)& (0+255),c
  3699  000CDE  50F3               	movf	prodl,w,c
  3700  000CE0  2637               	addwf	??_drawtext,f,c
  3701  000CE2  50F4               	movf	prodh,w,c
  3702  000CE4  2238               	addwfc	??_drawtext+1,f,c
  3703  000CE6  BE38               	btfsc	??_drawtext+1,7,c
  3704  000CE8  D02B               	goto	l4238
  3705  000CEA  5038               	movf	??_drawtext+1,w,c
  3706  000CEC  E104               	bnz	u2750
  3707  000CEE  0E81               	movlw	129
  3708  000CF0  5C37               	subwf	??_drawtext,w,c
  3709  000CF2  A0D8               	btfss	status,0,c
  3710  000CF4  D025               	goto	l4238
  3711  000CF6                     u2750:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;ST7735_TFT.c: 515: cursor_x = 0;
  3715  000CF6  0E00               	movlw	0
  3716  000CF8  0100               	movlb	0	; () banked
  3717  000CFA  6FB4               	movwf	drawtext@cursor_x& (0+255),b
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;ST7735_TFT.c: 516: cursor_y = cursor_y + size * 7 + 3 ;
  3721  000CFC  0100               	movlb	0	; () banked
  3722  000CFE  51AD               	movf	drawtext@size& (0+255),w,b
  3723  000D00  0D07               	mullw	7
  3724  000D02  50F3               	movf	prodl,w,c
  3725  000D04  0100               	movlb	0	; () banked
  3726  000D06  25B3               	addwf	drawtext@cursor_y& (0+255),w,b
  3727  000D08  0F03               	addlw	3
  3728  000D0A  0100               	movlb	0	; () banked
  3729  000D0C  6FB3               	movwf	drawtext@cursor_y& (0+255),b
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;ST7735_TFT.c: 517: if(cursor_y > 160) cursor_y = 160;
  3733  000D0E  0EA0               	movlw	160
  3734  000D10  0100               	movlb	0	; () banked
  3735  000D12  65B3               	cpfsgt	drawtext@cursor_y& (0+255),b
  3736  000D14  D004               	goto	l4234
  3737                           
  3738                           ; BSR set to: 0
  3739  000D16  0EA0               	movlw	160
  3740  000D18  0100               	movlb	0	; () banked
  3741  000D1A  6FB3               	movwf	drawtext@cursor_y& (0+255),b
  3742  000D1C  D000               	goto	l4234
  3743  000D1E                     l4234:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;ST7735_TFT.c: 518: if(_text[i] == 0x20) goto _skip; }
  3747  000D1E  0100               	movlb	0	; () banked
  3748  000D20  51B1               	movf	drawtext@i& (0+255),w,b
  3749  000D22  0100               	movlb	0	; () banked
  3750  000D24  25A7               	addwf	drawtext@_text& (0+255),w,b
  3751  000D26  6ED9               	movwf	fsr2l,c
  3752  000D28  0100               	movlb	0	; () banked
  3753  000D2A  51B2               	movf	(drawtext@i+1)& (0+255),w,b
  3754  000D2C  0100               	movlb	0	; () banked
  3755  000D2E  21A8               	addwfc	(drawtext@_text+1)& (0+255),w,b
  3756  000D30  6EDA               	movwf	fsr2h,c
  3757  000D32  0E20               	movlw	32
  3758  000D34  18DE               	xorwf	postinc2,w,c
  3759  000D36  B4D8               	btfsc	status,2,c
  3760  000D38  D02F               	goto	l4246
  3761  000D3A  D002               	goto	l4238
  3762                           
  3763                           ; BSR set to: 0
  3764  000D3C  D02D               	goto	l4246
  3765                           
  3766                           ; BSR set to: 0
  3767  000D3E  D000               	goto	l4238
  3768  000D40                     l4238:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;ST7735_TFT.c: 519: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  3772  000D40  C0B3  F02C         	movff	drawtext@cursor_y,drawChar@y
  3773  000D44  0100               	movlb	0	; () banked
  3774  000D46  51B1               	movf	drawtext@i& (0+255),w,b
  3775  000D48  0100               	movlb	0	; () banked
  3776  000D4A  25A7               	addwf	drawtext@_text& (0+255),w,b
  3777  000D4C  6ED9               	movwf	fsr2l,c
  3778  000D4E  0100               	movlb	0	; () banked
  3779  000D50  51B2               	movf	(drawtext@i+1)& (0+255),w,b
  3780  000D52  0100               	movlb	0	; () banked
  3781  000D54  21A8               	addwfc	(drawtext@_text+1)& (0+255),w,b
  3782  000D56  6EDA               	movwf	fsr2h,c
  3783  000D58  50DF               	movf	indf2,w,c
  3784  000D5A  6E2D               	movwf	drawChar@c,c
  3785  000D5C  C0A9  F02E         	movff	drawtext@color,drawChar@color
  3786  000D60  C0AA  F02F         	movff	drawtext@color+1,drawChar@color+1
  3787  000D64  C0AB  F030         	movff	drawtext@bg,drawChar@bg
  3788  000D68  C0AC  F031         	movff	drawtext@bg+1,drawChar@bg+1
  3789  000D6C  C0AD  F032         	movff	drawtext@size,drawChar@size
  3790  000D70  0100               	movlb	0	; () banked
  3791  000D72  51B4               	movf	drawtext@cursor_x& (0+255),w,b
  3792  000D74  EC08  F005         	call	_drawChar
  3793                           
  3794                           ;ST7735_TFT.c: 520: cursor_x = cursor_x + size * 6;
  3795  000D78  0100               	movlb	0	; () banked
  3796  000D7A  51AD               	movf	drawtext@size& (0+255),w,b
  3797  000D7C  0D06               	mullw	6
  3798  000D7E  50F3               	movf	prodl,w,c
  3799  000D80  0100               	movlb	0	; () banked
  3800  000D82  25B4               	addwf	drawtext@cursor_x& (0+255),w,b
  3801  000D84  0100               	movlb	0	; () banked
  3802  000D86  6FB4               	movwf	drawtext@cursor_x& (0+255),b
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;ST7735_TFT.c: 521: if(cursor_x > 128) cursor_x = 128;
  3806  000D88  0E80               	movlw	128
  3807  000D8A  0100               	movlb	0	; () banked
  3808  000D8C  65B4               	cpfsgt	drawtext@cursor_x& (0+255),b
  3809  000D8E  D004               	goto	l4246
  3810                           
  3811                           ; BSR set to: 0
  3812  000D90  0E80               	movlw	128
  3813  000D92  0100               	movlb	0	; () banked
  3814  000D94  6FB4               	movwf	drawtext@cursor_x& (0+255),b
  3815                           
  3816                           ; BSR set to: 0
  3817  000D96  D000               	goto	l4246
  3818  000D98                     l4246:
  3819                           
  3820                           ; BSR set to: 0
  3821  000D98  0100               	movlb	0	; () banked
  3822  000D9A  4BB1               	infsnz	drawtext@i& (0+255),f,b
  3823  000D9C  2BB2               	incf	(drawtext@i+1)& (0+255),f,b
  3824  000D9E  D000               	goto	l4248
  3825  000DA0                     l4248:
  3826                           
  3827                           ; BSR set to: 0
  3828  000DA0  0100               	movlb	0	; () banked
  3829  000DA2  51AF               	movf	drawtext@textsize& (0+255),w,b
  3830  000DA4  0100               	movlb	0	; () banked
  3831  000DA6  5DB1               	subwf	drawtext@i& (0+255),w,b
  3832  000DA8  0100               	movlb	0	; () banked
  3833  000DAA  51B0               	movf	(drawtext@textsize+1)& (0+255),w,b
  3834  000DAC  0100               	movlb	0	; () banked
  3835  000DAE  59B2               	subwfb	(drawtext@i+1)& (0+255),w,b
  3836  000DB0  A0D8               	btfss	status,0,c
  3837  000DB2  D78B               	goto	l4222
  3838                           
  3839                           ; BSR set to: 0
  3840                           
  3841                           ; BSR set to: 0
  3842  000DB4  0012               	return		;funcret
  3843  000DB6                     __end_of_drawtext:
  3844                           	opt stack 0
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           prodh	equ	0xFF4
  3850                           prodl	equ	0xFF3
  3851                           intcon2	equ	0xFF1
  3852                           postinc0	equ	0xFEE
  3853                           wreg	equ	0xFE8
  3854                           postdec1	equ	0xFE5
  3855                           fsr1l	equ	0xFE1
  3856                           indf2	equ	0xFDF
  3857                           postinc2	equ	0xFDE
  3858                           fsr2h	equ	0xFDA
  3859                           fsr2l	equ	0xFD9
  3860                           status	equ	0xFD8
  3861                           
  3862 ;; *************** function _strlen *****************
  3863 ;; Defined at:
  3864 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3867 ;;		 -> NULL(0), SW_MODE_Txt(2), SW_NSLT_Txt(2), SW_NSPED_Txt(2), 
  3868 ;;		 -> SW_EWLT_Txt(2), SW_EWPED_Txt(2), PED_NS_Count(3), PED_EW_Count(3), 
  3869 ;;		 -> NSLT_Count(3), NS_Count(3), EWLT_Count(3), EW_Count(3), 
  3870 ;;		 -> FlashingS_Txt(2), FlashingR_Txt(2), Act_Mode_Txt(2), buffer(31), 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  cp              2   18[COMRAM] PTR const unsigned char 
  3873 ;;		 -> NULL(0), SW_MODE_Txt(2), SW_NSLT_Txt(2), SW_NSPED_Txt(2), 
  3874 ;;		 -> SW_EWLT_Txt(2), SW_EWPED_Txt(2), PED_NS_Count(3), PED_EW_Count(3), 
  3875 ;;		 -> NSLT_Count(3), NS_Count(3), EWLT_Count(3), EW_Count(3), 
  3876 ;;		 -> FlashingS_Txt(2), FlashingR_Txt(2), Act_Mode_Txt(2), buffer(31), 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  2   14[COMRAM] unsigned int 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;Total ram usage:        6 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_drawtext
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text10
  3901  0014F0                     __ptext10:
  3902                           	opt stack 0
  3903  0014F0                     _strlen:
  3904                           	opt stack 26
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;incstack = 0
  3908  0014F0  C00F  F013         	movff	strlen@s,strlen@cp
  3909  0014F4  C010  F014         	movff	strlen@s+1,strlen@cp+1
  3910  0014F8  D003               	goto	l4108
  3911  0014FA                     l4106:
  3912  0014FA  4A13               	infsnz	strlen@cp,f,c
  3913  0014FC  2A14               	incf	strlen@cp+1,f,c
  3914  0014FE  D000               	goto	l4108
  3915  001500                     l4108:
  3916  001500  C013  FFD9         	movff	strlen@cp,fsr2l
  3917  001504  C014  FFDA         	movff	strlen@cp+1,fsr2h
  3918  001508  50DF               	movf	indf2,w,c
  3919  00150A  A4D8               	btfss	status,2,c
  3920  00150C  D7F6               	goto	l4106
  3921  00150E  C00F  F011         	movff	strlen@s,??_strlen
  3922  001512  C010  F012         	movff	strlen@s+1,??_strlen+1
  3923  001516  1E11               	comf	??_strlen,f,c
  3924  001518  1E12               	comf	??_strlen+1,f,c
  3925  00151A  4A11               	infsnz	??_strlen,f,c
  3926  00151C  2A12               	incf	??_strlen+1,f,c
  3927  00151E  5013               	movf	strlen@cp,w,c
  3928  001520  2411               	addwf	??_strlen,w,c
  3929  001522  6E0F               	movwf	?_strlen,c
  3930  001524  5014               	movf	strlen@cp+1,w,c
  3931  001526  2012               	addwfc	??_strlen+1,w,c
  3932  001528  6E10               	movwf	?_strlen+1,c
  3933  00152A  D000               	goto	l1124
  3934  00152C                     l1124:
  3935  00152C  0012               	return		;funcret
  3936  00152E                     __end_of_strlen:
  3937                           	opt stack 0
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           intcon2	equ	0xFF1
  3945                           postinc0	equ	0xFEE
  3946                           wreg	equ	0xFE8
  3947                           postdec1	equ	0xFE5
  3948                           fsr1l	equ	0xFE1
  3949                           indf2	equ	0xFDF
  3950                           postinc2	equ	0xFDE
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _drawChar *****************
  3956 ;; Defined at:
  3957 ;;		line 480 in file "ST7735_TFT.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  x               1    wreg     unsigned char 
  3960 ;;  y               1   43[COMRAM] unsigned char 
  3961 ;;  c               1   44[COMRAM] unsigned char 
  3962 ;;  color           2   45[COMRAM] unsigned int 
  3963 ;;  bg              2   47[COMRAM] unsigned int 
  3964 ;;  size            1   49[COMRAM] unsigned char 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  x               1   51[COMRAM] unsigned char 
  3967 ;;  line            1   50[COMRAM] unsigned char 
  3968 ;;  i               1   53[COMRAM] unsigned char 
  3969 ;;  j               1   52[COMRAM] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;		None               void
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3979 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;Total ram usage:       11 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    7
  3986 ;; This function calls:
  3987 ;;		___wmul
  3988 ;;		_drawPixel
  3989 ;;		_fillRect
  3990 ;; This function is called by:
  3991 ;;		_drawtext
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text11
  3996  000A10                     __ptext11:
  3997                           	opt stack 0
  3998  000A10                     _drawChar:
  3999                           	opt stack 21
  4000                           
  4001                           ;incstack = 0
  4002                           ;drawChar@x stored from wreg
  4003  000A10  6E34               	movwf	drawChar@x,c
  4004                           
  4005                           ;ST7735_TFT.c: 482: char i, j;
  4006                           ;ST7735_TFT.c: 483: if((x >= 128) || (y >= 160))
  4007  000A12  0E80               	movlw	128
  4008  000A14  6034               	cpfslt	drawChar@x,c
  4009  000A16  D0A6               	goto	l189
  4010  000A18  0E9F               	movlw	159
  4011  000A1A  642C               	cpfsgt	drawChar@y,c
  4012  000A1C  D001               	goto	l4054
  4013                           
  4014                           ;ST7735_TFT.c: 484: return;
  4015  000A1E  D0A2               	goto	l189
  4016  000A20                     l4054:
  4017                           
  4018                           ;ST7735_TFT.c: 485: if(size < 1) size = 1;
  4019  000A20  5032               	movf	drawChar@size,w,c
  4020  000A22  A4D8               	btfss	status,2,c
  4021  000A24  D003               	goto	l4058
  4022  000A26  0E01               	movlw	1
  4023  000A28  6E32               	movwf	drawChar@size,c
  4024  000A2A  D000               	goto	l4058
  4025  000A2C                     l4058:
  4026                           
  4027                           ;ST7735_TFT.c: 486: if((c < ' ') || (c > '~'))
  4028  000A2C  0E1F               	movlw	31
  4029  000A2E  642D               	cpfsgt	drawChar@c,c
  4030  000A30  D004               	goto	l4062
  4031  000A32  0E7E               	movlw	126
  4032  000A34  642D               	cpfsgt	drawChar@c,c
  4033  000A36  D003               	goto	l191
  4034  000A38  D000               	goto	l4062
  4035  000A3A                     l4062:
  4036                           
  4037                           ;ST7735_TFT.c: 487: c = '?';
  4038  000A3A  0E3F               	movlw	63
  4039  000A3C  6E2D               	movwf	drawChar@c,c
  4040  000A3E                     l191:
  4041                           
  4042                           ;ST7735_TFT.c: 488: for(i=0; i<5; i++ ) {
  4043  000A3E  0E00               	movlw	0
  4044  000A40  6E36               	movwf	drawChar@i,c
  4045  000A42                     l4064:
  4046  000A42  0E04               	movlw	4
  4047  000A44  6436               	cpfsgt	drawChar@i,c
  4048  000A46  D001               	goto	l4068
  4049  000A48  D08D               	goto	l189
  4050  000A4A                     l4068:
  4051                           
  4052                           ;ST7735_TFT.c: 489: unsigned char line;
  4053                           ;ST7735_TFT.c: 490: if(c < 'S')
  4054  000A4A  0E53               	movlw	83
  4055  000A4C  602D               	cpfslt	drawChar@c,c
  4056  000A4E  D015               	goto	l4072
  4057                           
  4058                           ;ST7735_TFT.c: 491: line = font[(c - 32)*5 + i];
  4059  000A50  0EE0               	movlw	224
  4060  000A52  242D               	addwf	drawChar@c,w,c
  4061  000A54  6E0F               	movwf	___wmul@multiplier,c
  4062  000A56  6A10               	clrf	___wmul@multiplier+1,c
  4063  000A58  0EFF               	movlw	255
  4064  000A5A  2210               	addwfc	___wmul@multiplier+1,f,c
  4065  000A5C  0E00               	movlw	0
  4066  000A5E  6E12               	movwf	___wmul@multiplicand+1,c
  4067  000A60  0E05               	movlw	5
  4068  000A62  6E11               	movwf	___wmul@multiplicand,c
  4069  000A64  EC27  F00B         	call	___wmul	;wreg free
  4070  000A68  5036               	movf	drawChar@i,w,c
  4071  000A6A  260F               	addwf	?___wmul,f,c
  4072  000A6C  0E00               	movlw	0
  4073  000A6E  2210               	addwfc	?___wmul+1,f,c
  4074  000A70  0E5D               	movlw	low _font
  4075  000A72  240F               	addwf	?___wmul,w,c
  4076  000A74  6EF6               	movwf	tblptrl,c
  4077  000A76  0EFD               	movlw	high _font
  4078  000A78  D014               	goto	L1
  4079  000A7A                     l4072:
  4080                           
  4081                           ;ST7735_TFT.c: 492: else
  4082                           ;ST7735_TFT.c: 493: line = font2[(c - 'S')*5 + i];
  4083  000A7A  0EAD               	movlw	173
  4084  000A7C  242D               	addwf	drawChar@c,w,c
  4085  000A7E  6E0F               	movwf	___wmul@multiplier,c
  4086  000A80  6A10               	clrf	___wmul@multiplier+1,c
  4087  000A82  0EFF               	movlw	255
  4088  000A84  2210               	addwfc	___wmul@multiplier+1,f,c
  4089  000A86  0E00               	movlw	0
  4090  000A88  6E12               	movwf	___wmul@multiplicand+1,c
  4091  000A8A  0E05               	movlw	5
  4092  000A8C  6E11               	movwf	___wmul@multiplicand,c
  4093  000A8E  EC27  F00B         	call	___wmul	;wreg free
  4094  000A92  5036               	movf	drawChar@i,w,c
  4095  000A94  260F               	addwf	?___wmul,f,c
  4096  000A96  0E00               	movlw	0
  4097  000A98  2210               	addwfc	?___wmul+1,f,c
  4098  000A9A  0E5C               	movlw	low _font2
  4099  000A9C  240F               	addwf	?___wmul,w,c
  4100  000A9E  6EF6               	movwf	tblptrl,c
  4101  000AA0  0EFE               	movlw	high _font2
  4102  000AA2                     L1:
  4103  000AA2  2010               	addwfc	?___wmul+1,w,c
  4104  000AA4  6EF7               	movwf	tblptrh,c
  4105  000AA6                     	if	0	;There are less than 3 active tblptr bytes
  4106  000AA6                     	endif
  4107  000AA6  0008               	tblrd		*
  4108  000AA8  CFF5 F033          	movff	tablat,drawChar@line
  4109  000AAC  D000               	goto	l4074
  4110  000AAE                     l4074:
  4111                           
  4112                           ;ST7735_TFT.c: 494: for(j=0; j<7; j++, line >>= 1) {
  4113  000AAE  0E00               	movlw	0
  4114  000AB0  6E35               	movwf	drawChar@j,c
  4115  000AB2                     l4076:
  4116  000AB2  0E06               	movlw	6
  4117  000AB4  6435               	cpfsgt	drawChar@j,c
  4118  000AB6  D001               	goto	l198
  4119  000AB8  D053               	goto	l4100
  4120  000ABA                     l198:
  4121                           
  4122                           ;ST7735_TFT.c: 495: if(line & 0x01) {
  4123  000ABA  A033               	btfss	drawChar@line,0,c
  4124  000ABC  D023               	goto	l4086
  4125                           
  4126                           ;ST7735_TFT.c: 496: if(size == 1) drawPixel(x+i, y+j, color);
  4127  000ABE  0432               	decf	drawChar@size,w,c
  4128  000AC0  A4D8               	btfss	status,2,c
  4129  000AC2  D00C               	goto	l4084
  4130  000AC4  502C               	movf	drawChar@y,w,c
  4131  000AC6  2435               	addwf	drawChar@j,w,c
  4132  000AC8  6E16               	movwf	drawPixel@y,c
  4133  000ACA  C02E  F017         	movff	drawChar@color,drawPixel@color
  4134  000ACE  C02F  F018         	movff	drawChar@color+1,drawPixel@color+1
  4135  000AD2  5034               	movf	drawChar@x,w,c
  4136  000AD4  2436               	addwf	drawChar@i,w,c
  4137  000AD6  ECCF  F00A         	call	_drawPixel
  4138  000ADA  D03E               	goto	l4094
  4139  000ADC                     l4084:
  4140                           
  4141                           ;ST7735_TFT.c: 497: else fillRect(x+(i*size), y+(j*size), size, size, color);
  4142  000ADC  5035               	movf	drawChar@j,w,c
  4143  000ADE  0232               	mulwf	drawChar@size,c
  4144  000AE0  50F3               	movf	prodl,w,c
  4145  000AE2  242C               	addwf	drawChar@y,w,c
  4146  000AE4  6E21               	movwf	fillRect@y,c
  4147  000AE6  C032  F022         	movff	drawChar@size,fillRect@w
  4148  000AEA  C032  F023         	movff	drawChar@size,fillRect@h
  4149  000AEE  C02E  F024         	movff	drawChar@color,fillRect@color
  4150  000AF2  C02F  F025         	movff	drawChar@color+1,fillRect@color+1
  4151  000AF6  5036               	movf	drawChar@i,w,c
  4152  000AF8  0232               	mulwf	drawChar@size,c
  4153  000AFA  50F3               	movf	prodl,w,c
  4154  000AFC  2434               	addwf	drawChar@x,w,c
  4155  000AFE  EC32  F00A         	call	_fillRect
  4156                           
  4157                           ;ST7735_TFT.c: 498: }
  4158  000B02  D02A               	goto	l4094
  4159  000B04                     l4086:
  4160                           
  4161                           ;ST7735_TFT.c: 499: else if(bg != color) {
  4162  000B04  502E               	movf	drawChar@color,w,c
  4163  000B06  1830               	xorwf	drawChar@bg,w,c
  4164  000B08  E104               	bnz	u2530
  4165  000B0A  502F               	movf	drawChar@color+1,w,c
  4166  000B0C  1831               	xorwf	drawChar@bg+1,w,c
  4167  000B0E  B4D8               	btfsc	status,2,c
  4168  000B10  D023               	goto	l4094
  4169  000B12                     u2530:
  4170                           
  4171                           ;ST7735_TFT.c: 500: if(size == 1) drawPixel(x+i, y+j, bg);
  4172  000B12  0432               	decf	drawChar@size,w,c
  4173  000B14  A4D8               	btfss	status,2,c
  4174  000B16  D00C               	goto	l4092
  4175  000B18  502C               	movf	drawChar@y,w,c
  4176  000B1A  2435               	addwf	drawChar@j,w,c
  4177  000B1C  6E16               	movwf	drawPixel@y,c
  4178  000B1E  C030  F017         	movff	drawChar@bg,drawPixel@color
  4179  000B22  C031  F018         	movff	drawChar@bg+1,drawPixel@color+1
  4180  000B26  5034               	movf	drawChar@x,w,c
  4181  000B28  2436               	addwf	drawChar@i,w,c
  4182  000B2A  ECCF  F00A         	call	_drawPixel
  4183  000B2E  D014               	goto	l4094
  4184  000B30                     l4092:
  4185                           
  4186                           ;ST7735_TFT.c: 501: else fillRect(x+i*size, y+j*size, size, size, bg);
  4187  000B30  5035               	movf	drawChar@j,w,c
  4188  000B32  0232               	mulwf	drawChar@size,c
  4189  000B34  50F3               	movf	prodl,w,c
  4190  000B36  242C               	addwf	drawChar@y,w,c
  4191  000B38  6E21               	movwf	fillRect@y,c
  4192  000B3A  C032  F022         	movff	drawChar@size,fillRect@w
  4193  000B3E  C032  F023         	movff	drawChar@size,fillRect@h
  4194  000B42  C030  F024         	movff	drawChar@bg,fillRect@color
  4195  000B46  C031  F025         	movff	drawChar@bg+1,fillRect@color+1
  4196  000B4A  5036               	movf	drawChar@i,w,c
  4197  000B4C  0232               	mulwf	drawChar@size,c
  4198  000B4E  50F3               	movf	prodl,w,c
  4199  000B50  2434               	addwf	drawChar@x,w,c
  4200  000B52  EC32  F00A         	call	_fillRect
  4201  000B56  D000               	goto	l4094
  4202  000B58                     l4094:
  4203  000B58  2A35               	incf	drawChar@j,f,c
  4204  000B5A  90D8               	bcf	status,0,c
  4205  000B5C  3233               	rrcf	drawChar@line,f,c
  4206  000B5E  D7A9               	goto	l4076
  4207  000B60                     l4100:
  4208  000B60  2A36               	incf	drawChar@i,f,c
  4209  000B62  D76F               	goto	l4064
  4210  000B64                     l189:
  4211  000B64  0012               	return		;funcret
  4212  000B66                     __end_of_drawChar:
  4213                           	opt stack 0
  4214                           tblptru	equ	0xFF8
  4215                           tblptrh	equ	0xFF7
  4216                           tblptrl	equ	0xFF6
  4217                           tablat	equ	0xFF5
  4218                           prodh	equ	0xFF4
  4219                           prodl	equ	0xFF3
  4220                           intcon2	equ	0xFF1
  4221                           postinc0	equ	0xFEE
  4222                           wreg	equ	0xFE8
  4223                           postdec1	equ	0xFE5
  4224                           fsr1l	equ	0xFE1
  4225                           indf2	equ	0xFDF
  4226                           postinc2	equ	0xFDE
  4227                           fsr2h	equ	0xFDA
  4228                           fsr2l	equ	0xFD9
  4229                           status	equ	0xFD8
  4230                           
  4231 ;; *************** function _fillRect *****************
  4232 ;; Defined at:
  4233 ;;		line 470 in file "ST7735_TFT.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  x               1    wreg     unsigned char 
  4236 ;;  y               1   32[COMRAM] unsigned char 
  4237 ;;  w               1   33[COMRAM] unsigned char 
  4238 ;;  h               1   34[COMRAM] unsigned char 
  4239 ;;  color           2   35[COMRAM] unsigned int 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  x               1   40[COMRAM] unsigned char 
  4242 ;;  i               2   41[COMRAM] int 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;		None               void
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4252 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;Total ram usage:       11 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    6
  4259 ;; This function calls:
  4260 ;;		_drawFastVLine
  4261 ;; This function is called by:
  4262 ;;		_drawChar
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text12
  4267  001464                     __ptext12:
  4268                           	opt stack 0
  4269  001464                     _fillRect:
  4270                           	opt stack 21
  4271                           
  4272                           ;incstack = 0
  4273                           ;fillRect@x stored from wreg
  4274  001464  6E29               	movwf	fillRect@x,c
  4275                           
  4276                           ;ST7735_TFT.c: 472: signed int i;
  4277                           ;ST7735_TFT.c: 474: for (i = x; i < x + w; i++)
  4278  001466  C029  F02A         	movff	fillRect@x,fillRect@i
  4279  00146A  6A2B               	clrf	fillRect@i+1,c
  4280  00146C  D00E               	goto	l3956
  4281  00146E                     l3952:
  4282                           
  4283                           ;ST7735_TFT.c: 475: {
  4284                           ;ST7735_TFT.c: 476: drawFastVLine(i, y, h, color);
  4285  00146E  C021  F016         	movff	fillRect@y,drawFastVLine@y
  4286  001472  C023  F017         	movff	fillRect@h,drawFastVLine@h
  4287  001476  C024  F018         	movff	fillRect@color,drawFastVLine@color
  4288  00147A  C025  F019         	movff	fillRect@color+1,drawFastVLine@color+1
  4289  00147E  502A               	movf	fillRect@i,w,c
  4290  001480  EC4A  F008         	call	_drawFastVLine
  4291  001484  4A2A               	infsnz	fillRect@i,f,c
  4292  001486  2A2B               	incf	fillRect@i+1,f,c
  4293  001488  D000               	goto	l3956
  4294  00148A                     l3956:
  4295  00148A  5022               	movf	fillRect@w,w,c
  4296  00148C  C029  F026         	movff	fillRect@x,??_fillRect
  4297  001490  6A27               	clrf	(??_fillRect+1)& (0+255),c
  4298  001492  2626               	addwf	??_fillRect,f,c
  4299  001494  0E00               	movlw	0
  4300  001496  2227               	addwfc	??_fillRect+1,f,c
  4301  001498  5026               	movf	??_fillRect,w,c
  4302  00149A  5C2A               	subwf	fillRect@i,w,c
  4303  00149C  502B               	movf	fillRect@i+1,w,c
  4304  00149E  0A80               	xorlw	128
  4305  0014A0  6E28               	movwf	(??_fillRect+2)& (0+255),c
  4306  0014A2  5027               	movf	??_fillRect+1,w,c
  4307  0014A4  0A80               	xorlw	128
  4308  0014A6  5828               	subwfb	(??_fillRect+2)& (0+255),w,c
  4309  0014A8  A0D8               	btfss	status,0,c
  4310  0014AA  D7E1               	goto	l3952
  4311  0014AC  0012               	return		;funcret
  4312  0014AE                     __end_of_fillRect:
  4313                           	opt stack 0
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodh	equ	0xFF4
  4319                           prodl	equ	0xFF3
  4320                           intcon2	equ	0xFF1
  4321                           postinc0	equ	0xFEE
  4322                           wreg	equ	0xFE8
  4323                           postdec1	equ	0xFE5
  4324                           fsr1l	equ	0xFE1
  4325                           indf2	equ	0xFDF
  4326                           postinc2	equ	0xFDE
  4327                           fsr2h	equ	0xFDA
  4328                           fsr2l	equ	0xFD9
  4329                           status	equ	0xFD8
  4330                           
  4331 ;; *************** function _drawRect *****************
  4332 ;; Defined at:
  4333 ;;		line 718 in file "ST7735_TFT.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  x               2   32[COMRAM] unsigned int 
  4336 ;;  y               2   34[COMRAM] unsigned int 
  4337 ;;  w               2   36[COMRAM] unsigned int 
  4338 ;;  h               2   38[COMRAM] unsigned int 
  4339 ;;  color           2   40[COMRAM] unsigned int 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;		None               void
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4351 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;Total ram usage:       11 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    6
  4358 ;; This function calls:
  4359 ;;		_drawFastHLine
  4360 ;;		_drawFastVLine
  4361 ;; This function is called by:
  4362 ;;		_Initialize_Screen
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text13
  4367  001304                     __ptext13:
  4368                           	opt stack 0
  4369  001304                     _drawRect:
  4370                           	opt stack 23
  4371                           
  4372                           ;ST7735_TFT.c: 720: drawFastHLine(x, y, w, color);
  4373                           
  4374                           ;incstack = 0
  4375  001304  C023  F016         	movff	drawRect@y,drawFastHLine@y
  4376  001308  C025  F017         	movff	drawRect@w,drawFastHLine@w
  4377  00130C  C029  F018         	movff	drawRect@color,drawFastHLine@color
  4378  001310  C02A  F019         	movff	drawRect@color+1,drawFastHLine@color+1
  4379  001314  5021               	movf	drawRect@x,w,c
  4380  001316  EC8E  F008         	call	_drawFastHLine
  4381                           
  4382                           ;ST7735_TFT.c: 721: drawFastHLine(x, y + h - 1, w, color);
  4383  00131A  5023               	movf	drawRect@y,w,c
  4384  00131C  2427               	addwf	drawRect@h,w,c
  4385  00131E  6E2B               	movwf	??_drawRect& (0+255),c
  4386  001320  042B               	decf	??_drawRect,w,c
  4387  001322  6E16               	movwf	drawFastHLine@y,c
  4388  001324  C025  F017         	movff	drawRect@w,drawFastHLine@w
  4389  001328  C029  F018         	movff	drawRect@color,drawFastHLine@color
  4390  00132C  C02A  F019         	movff	drawRect@color+1,drawFastHLine@color+1
  4391  001330  5021               	movf	drawRect@x,w,c
  4392  001332  EC8E  F008         	call	_drawFastHLine
  4393                           
  4394                           ;ST7735_TFT.c: 722: drawFastVLine(x, y, h, color);
  4395  001336  C023  F016         	movff	drawRect@y,drawFastVLine@y
  4396  00133A  C027  F017         	movff	drawRect@h,drawFastVLine@h
  4397  00133E  C029  F018         	movff	drawRect@color,drawFastVLine@color
  4398  001342  C02A  F019         	movff	drawRect@color+1,drawFastVLine@color+1
  4399  001346  5021               	movf	drawRect@x,w,c
  4400  001348  EC4A  F008         	call	_drawFastVLine
  4401                           
  4402                           ;ST7735_TFT.c: 723: drawFastVLine(x + w - 1, y, h, color);
  4403  00134C  C023  F016         	movff	drawRect@y,drawFastVLine@y
  4404  001350  C027  F017         	movff	drawRect@h,drawFastVLine@h
  4405  001354  C029  F018         	movff	drawRect@color,drawFastVLine@color
  4406  001358  C02A  F019         	movff	drawRect@color+1,drawFastVLine@color+1
  4407  00135C  5021               	movf	drawRect@x,w,c
  4408  00135E  2425               	addwf	drawRect@w,w,c
  4409  001360  6E2B               	movwf	??_drawRect& (0+255),c
  4410  001362  042B               	decf	??_drawRect,w,c
  4411  001364  EC4A  F008         	call	_drawFastVLine
  4412  001368  0012               	return		;funcret
  4413  00136A                     __end_of_drawRect:
  4414                           	opt stack 0
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           prodh	equ	0xFF4
  4420                           prodl	equ	0xFF3
  4421                           intcon2	equ	0xFF1
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           postdec1	equ	0xFE5
  4425                           fsr1l	equ	0xFE1
  4426                           indf2	equ	0xFDF
  4427                           postinc2	equ	0xFDE
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _drawFastVLine *****************
  4433 ;; Defined at:
  4434 ;;		line 449 in file "ST7735_TFT.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  x               1    wreg     unsigned char 
  4437 ;;  y               1   21[COMRAM] unsigned char 
  4438 ;;  h               1   22[COMRAM] unsigned char 
  4439 ;;  color           2   23[COMRAM] unsigned int 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  x               1   31[COMRAM] unsigned char 
  4442 ;;  lo              1   30[COMRAM] unsigned char 
  4443 ;;  hi              1   29[COMRAM] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;		None               void
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4453 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;Total ram usage:       11 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    5
  4460 ;; This function calls:
  4461 ;;		_setAddrWindow
  4462 ;;		_spiwrite
  4463 ;; This function is called by:
  4464 ;;		_fillRect
  4465 ;;		_fillCircleHelper
  4466 ;;		_fillCircle
  4467 ;;		_drawRect
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text14
  4472  001094                     __ptext14:
  4473                           	opt stack 0
  4474  001094                     _drawFastVLine:
  4475                           	opt stack 22
  4476                           
  4477                           ;incstack = 0
  4478                           ;drawFastVLine@x stored from wreg
  4479  001094  6E20               	movwf	drawFastVLine@x,c
  4480                           
  4481                           ;ST7735_TFT.c: 451: unsigned char hi, lo;
  4482                           ;ST7735_TFT.c: 452: if((x >= 128) || (y >= 160))
  4483  001096  0E80               	movlw	128
  4484  001098  6020               	cpfslt	drawFastVLine@x,c
  4485  00109A  D03F               	goto	l173
  4486  00109C  0E9F               	movlw	159
  4487  00109E  6416               	cpfsgt	drawFastVLine@y,c
  4488  0010A0  D001               	goto	l3902
  4489                           
  4490                           ;ST7735_TFT.c: 453: return;
  4491  0010A2  D03B               	goto	l173
  4492  0010A4                     l3902:
  4493                           
  4494                           ;ST7735_TFT.c: 454: if((y + h - 1) >= 160)
  4495  0010A4  0EFF               	movlw	255
  4496  0010A6  6E1A               	movwf	??_drawFastVLine& (0+255),c
  4497  0010A8  0EFF               	movlw	255
  4498  0010AA  6E1B               	movwf	(??_drawFastVLine+1)& (0+255),c
  4499  0010AC  5017               	movf	drawFastVLine@h,w,c
  4500  0010AE  C016  F01C         	movff	drawFastVLine@y,??_drawFastVLine+2
  4501  0010B2  6A1D               	clrf	(??_drawFastVLine+3)& (0+255),c
  4502  0010B4  261C               	addwf	??_drawFastVLine+2,f,c
  4503  0010B6  0E00               	movlw	0
  4504  0010B8  221D               	addwfc	??_drawFastVLine+3,f,c
  4505  0010BA  501A               	movf	??_drawFastVLine,w,c
  4506  0010BC  261C               	addwf	??_drawFastVLine+2,f,c
  4507  0010BE  501B               	movf	??_drawFastVLine+1,w,c
  4508  0010C0  221D               	addwfc	??_drawFastVLine+3,f,c
  4509  0010C2  BE1D               	btfsc	??_drawFastVLine+3,7,c
  4510  0010C4  D00B               	goto	l3906
  4511  0010C6  501D               	movf	??_drawFastVLine+3,w,c
  4512  0010C8  E104               	bnz	u2370
  4513  0010CA  0EA0               	movlw	160
  4514  0010CC  5C1C               	subwf	??_drawFastVLine+2,w,c
  4515  0010CE  A0D8               	btfss	status,0,c
  4516  0010D0  D005               	goto	l3906
  4517  0010D2                     u2370:
  4518                           
  4519                           ;ST7735_TFT.c: 455: h = 160 - y;
  4520  0010D2  5016               	movf	drawFastVLine@y,w,c
  4521  0010D4  0800               	sublw	0
  4522  0010D6  0FA0               	addlw	160
  4523  0010D8  6E17               	movwf	drawFastVLine@h,c
  4524  0010DA  D000               	goto	l3906
  4525  0010DC                     l3906:
  4526                           
  4527                           ;ST7735_TFT.c: 456: hi = color >> 8; lo = color;
  4528  0010DC  5019               	movf	drawFastVLine@color+1,w,c
  4529  0010DE  6E1E               	movwf	drawFastVLine@hi,c
  4530  0010E0  C018  F01F         	movff	drawFastVLine@color,drawFastVLine@lo
  4531                           
  4532                           ;ST7735_TFT.c: 457: setAddrWindow(x, y, x, y + h - 1);
  4533  0010E4  C016  F012         	movff	drawFastVLine@y,setAddrWindow@y0
  4534  0010E8  C020  F013         	movff	drawFastVLine@x,setAddrWindow@x1
  4535  0010EC  5016               	movf	drawFastVLine@y,w,c
  4536  0010EE  2417               	addwf	drawFastVLine@h,w,c
  4537  0010F0  6E1A               	movwf	??_drawFastVLine& (0+255),c
  4538  0010F2  041A               	decf	??_drawFastVLine,w,c
  4539  0010F4  6E14               	movwf	setAddrWindow@y1,c
  4540  0010F6  5020               	movf	drawFastVLine@x,w,c
  4541  0010F8  EC0B  F00A         	call	_setAddrWindow
  4542                           
  4543                           ;ST7735_TFT.c: 458: PORTDbits.RD0 = 1;
  4544  0010FC  8083               	bsf	3971,0,c	;volatile
  4545                           
  4546                           ;ST7735_TFT.c: 459: PORTDbits.RD1 = 0;
  4547  0010FE  9283               	bcf	3971,1,c	;volatile
  4548                           
  4549                           ;ST7735_TFT.c: 461: while (h--) {
  4550  001100  D007               	goto	l3918
  4551  001102                     l3916:
  4552                           
  4553                           ;ST7735_TFT.c: 462: spiwrite(hi);
  4554  001102  501E               	movf	drawFastVLine@hi,w,c
  4555  001104  EC66  F00B         	call	_spiwrite
  4556                           
  4557                           ;ST7735_TFT.c: 463: spiwrite(lo);
  4558  001108  501F               	movf	drawFastVLine@lo,w,c
  4559  00110A  EC66  F00B         	call	_spiwrite
  4560  00110E  D000               	goto	l3918
  4561  001110                     l3918:
  4562  001110  0617               	decf	drawFastVLine@h,f,c
  4563  001112  2817               	incf	drawFastVLine@h,w,c
  4564  001114  A4D8               	btfss	status,2,c
  4565  001116  D7F5               	goto	l3916
  4566                           
  4567                           ;ST7735_TFT.c: 464: }
  4568                           ;ST7735_TFT.c: 465: PORTDbits.RD1 = 1;
  4569  001118  8283               	bsf	3971,1,c	;volatile
  4570  00111A                     l173:
  4571  00111A  0012               	return		;funcret
  4572  00111C                     __end_of_drawFastVLine:
  4573                           	opt stack 0
  4574                           tblptru	equ	0xFF8
  4575                           tblptrh	equ	0xFF7
  4576                           tblptrl	equ	0xFF6
  4577                           tablat	equ	0xFF5
  4578                           prodh	equ	0xFF4
  4579                           prodl	equ	0xFF3
  4580                           intcon2	equ	0xFF1
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           postdec1	equ	0xFE5
  4584                           fsr1l	equ	0xFE1
  4585                           indf2	equ	0xFDF
  4586                           postinc2	equ	0xFDE
  4587                           fsr2h	equ	0xFDA
  4588                           fsr2l	equ	0xFD9
  4589                           status	equ	0xFD8
  4590                           
  4591 ;; *************** function _drawFastHLine *****************
  4592 ;; Defined at:
  4593 ;;		line 657 in file "ST7735_TFT.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  x               1    wreg     unsigned char 
  4596 ;;  y               1   21[COMRAM] unsigned char 
  4597 ;;  w               1   22[COMRAM] unsigned char 
  4598 ;;  color           2   23[COMRAM] unsigned int 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  x               1   31[COMRAM] unsigned char 
  4601 ;;  lo              1   30[COMRAM] unsigned char 
  4602 ;;  hi              1   29[COMRAM] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;		None               void
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;Total ram usage:       11 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    5
  4619 ;; This function calls:
  4620 ;;		_setAddrWindow
  4621 ;;		_spiwrite
  4622 ;; This function is called by:
  4623 ;;		_drawRect
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text15
  4628  00111C                     __ptext15:
  4629                           	opt stack 0
  4630  00111C                     _drawFastHLine:
  4631                           	opt stack 23
  4632                           
  4633                           ;incstack = 0
  4634                           ;drawFastHLine@x stored from wreg
  4635  00111C  6E20               	movwf	drawFastHLine@x,c
  4636                           
  4637                           ;ST7735_TFT.c: 659: unsigned char hi, lo;
  4638                           ;ST7735_TFT.c: 660: if((x >= 128) || (y >= 160))
  4639  00111E  0E80               	movlw	128
  4640  001120  6020               	cpfslt	drawFastHLine@x,c
  4641  001122  D03F               	goto	l271
  4642  001124  0E9F               	movlw	159
  4643  001126  6416               	cpfsgt	drawFastHLine@y,c
  4644  001128  D001               	goto	l4190
  4645                           
  4646                           ;ST7735_TFT.c: 661: return;
  4647  00112A  D03B               	goto	l271
  4648  00112C                     l4190:
  4649                           
  4650                           ;ST7735_TFT.c: 662: if((x + w - 1) >= 128)
  4651  00112C  0EFF               	movlw	255
  4652  00112E  6E1A               	movwf	??_drawFastHLine& (0+255),c
  4653  001130  0EFF               	movlw	255
  4654  001132  6E1B               	movwf	(??_drawFastHLine+1)& (0+255),c
  4655  001134  5017               	movf	drawFastHLine@w,w,c
  4656  001136  C020  F01C         	movff	drawFastHLine@x,??_drawFastHLine+2
  4657  00113A  6A1D               	clrf	(??_drawFastHLine+3)& (0+255),c
  4658  00113C  261C               	addwf	??_drawFastHLine+2,f,c
  4659  00113E  0E00               	movlw	0
  4660  001140  221D               	addwfc	??_drawFastHLine+3,f,c
  4661  001142  501A               	movf	??_drawFastHLine,w,c
  4662  001144  261C               	addwf	??_drawFastHLine+2,f,c
  4663  001146  501B               	movf	??_drawFastHLine+1,w,c
  4664  001148  221D               	addwfc	??_drawFastHLine+3,f,c
  4665  00114A  BE1D               	btfsc	??_drawFastHLine+3,7,c
  4666  00114C  D00B               	goto	l4194
  4667  00114E  501D               	movf	??_drawFastHLine+3,w,c
  4668  001150  E104               	bnz	u2720
  4669  001152  0E80               	movlw	128
  4670  001154  5C1C               	subwf	??_drawFastHLine+2,w,c
  4671  001156  A0D8               	btfss	status,0,c
  4672  001158  D005               	goto	l4194
  4673  00115A                     u2720:
  4674                           
  4675                           ;ST7735_TFT.c: 663: w = 128 - x;
  4676  00115A  5020               	movf	drawFastHLine@x,w,c
  4677  00115C  0800               	sublw	0
  4678  00115E  0F80               	addlw	128
  4679  001160  6E17               	movwf	drawFastHLine@w,c
  4680  001162  D000               	goto	l4194
  4681  001164                     l4194:
  4682                           
  4683                           ;ST7735_TFT.c: 664: hi = color >> 8; lo = color;
  4684  001164  5019               	movf	drawFastHLine@color+1,w,c
  4685  001166  6E1E               	movwf	drawFastHLine@hi,c
  4686  001168  C018  F01F         	movff	drawFastHLine@color,drawFastHLine@lo
  4687                           
  4688                           ;ST7735_TFT.c: 665: setAddrWindow(x, y, x + w - 1, y);
  4689  00116C  C016  F012         	movff	drawFastHLine@y,setAddrWindow@y0
  4690  001170  5020               	movf	drawFastHLine@x,w,c
  4691  001172  2417               	addwf	drawFastHLine@w,w,c
  4692  001174  6E1A               	movwf	??_drawFastHLine& (0+255),c
  4693  001176  041A               	decf	??_drawFastHLine,w,c
  4694  001178  6E13               	movwf	setAddrWindow@x1,c
  4695  00117A  C016  F014         	movff	drawFastHLine@y,setAddrWindow@y1
  4696  00117E  5020               	movf	drawFastHLine@x,w,c
  4697  001180  EC0B  F00A         	call	_setAddrWindow
  4698                           
  4699                           ;ST7735_TFT.c: 666: PORTDbits.RD0 = 1;
  4700  001184  8083               	bsf	3971,0,c	;volatile
  4701                           
  4702                           ;ST7735_TFT.c: 667: PORTDbits.RD1 = 0;
  4703  001186  9283               	bcf	3971,1,c	;volatile
  4704                           
  4705                           ;ST7735_TFT.c: 669: while (w--) {
  4706  001188  D007               	goto	l4206
  4707  00118A                     l4204:
  4708                           
  4709                           ;ST7735_TFT.c: 670: spiwrite(hi);
  4710  00118A  501E               	movf	drawFastHLine@hi,w,c
  4711  00118C  EC66  F00B         	call	_spiwrite
  4712                           
  4713                           ;ST7735_TFT.c: 671: spiwrite(lo);
  4714  001190  501F               	movf	drawFastHLine@lo,w,c
  4715  001192  EC66  F00B         	call	_spiwrite
  4716  001196  D000               	goto	l4206
  4717  001198                     l4206:
  4718  001198  0617               	decf	drawFastHLine@w,f,c
  4719  00119A  2817               	incf	drawFastHLine@w,w,c
  4720  00119C  A4D8               	btfss	status,2,c
  4721  00119E  D7F5               	goto	l4204
  4722                           
  4723                           ;ST7735_TFT.c: 672: }
  4724                           ;ST7735_TFT.c: 673: PORTDbits.RD1 = 1;
  4725  0011A0  8283               	bsf	3971,1,c	;volatile
  4726  0011A2                     l271:
  4727  0011A2  0012               	return		;funcret
  4728  0011A4                     __end_of_drawFastHLine:
  4729                           	opt stack 0
  4730                           tblptru	equ	0xFF8
  4731                           tblptrh	equ	0xFF7
  4732                           tblptrl	equ	0xFF6
  4733                           tablat	equ	0xFF5
  4734                           prodh	equ	0xFF4
  4735                           prodl	equ	0xFF3
  4736                           intcon2	equ	0xFF1
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           postdec1	equ	0xFE5
  4740                           fsr1l	equ	0xFE1
  4741                           indf2	equ	0xFDF
  4742                           postinc2	equ	0xFDE
  4743                           fsr2h	equ	0xFDA
  4744                           fsr2l	equ	0xFD9
  4745                           status	equ	0xFD8
  4746                           
  4747 ;; *************** function _drawCircle *****************
  4748 ;; Defined at:
  4749 ;;		line 561 in file "ST7735_TFT.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  x0              2   25[COMRAM] int 
  4752 ;;  y0              2   27[COMRAM] int 
  4753 ;;  r               2   29[COMRAM] int 
  4754 ;;  color           2   31[COMRAM] unsigned int 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  y               2   43[COMRAM] int 
  4757 ;;  x               2   41[COMRAM] int 
  4758 ;;  f               2   39[COMRAM] int 
  4759 ;;  ddF_y           2   37[COMRAM] int 
  4760 ;;  ddF_x           2   35[COMRAM] int 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;		None               void
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;Total ram usage:       20 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    6
  4777 ;; This function calls:
  4778 ;;		_drawPixel
  4779 ;; This function is called by:
  4780 ;;		_Initialize_Screen
  4781 ;;		_update_LCD_color
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text16
  4786  000862                     __ptext16:
  4787                           	opt stack 0
  4788  000862                     _drawCircle:
  4789                           	opt stack 23
  4790                           
  4791                           ;ST7735_TFT.c: 563: signed int f, ddF_x, ddF_y, x, y;
  4792                           ;ST7735_TFT.c: 564: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  4793                           
  4794                           ;incstack = 0
  4795  000862  C01E  F022         	movff	drawCircle@r,??_drawCircle
  4796  000866  C01F  F023         	movff	drawCircle@r+1,??_drawCircle+1
  4797  00086A  1E22               	comf	??_drawCircle,f,c
  4798  00086C  1E23               	comf	??_drawCircle+1,f,c
  4799  00086E  4A22               	infsnz	??_drawCircle,f,c
  4800  000870  2A23               	incf	??_drawCircle+1,f,c
  4801  000872  0E01               	movlw	1
  4802  000874  2422               	addwf	??_drawCircle,w,c
  4803  000876  6E28               	movwf	drawCircle@f,c
  4804  000878  0E00               	movlw	0
  4805  00087A  2023               	addwfc	??_drawCircle+1,w,c
  4806  00087C  6E29               	movwf	drawCircle@f+1,c
  4807  00087E  0E00               	movlw	0
  4808  000880  6E25               	movwf	drawCircle@ddF_x+1,c
  4809  000882  0E01               	movlw	1
  4810  000884  6E24               	movwf	drawCircle@ddF_x,c
  4811  000886  C01E  F022         	movff	drawCircle@r,??_drawCircle
  4812  00088A  C01F  F023         	movff	drawCircle@r+1,??_drawCircle+1
  4813  00088E  90D8               	bcf	status,0,c
  4814  000890  3622               	rlcf	??_drawCircle,f,c
  4815  000892  3623               	rlcf	??_drawCircle+1,f,c
  4816  000894  1E22               	comf	??_drawCircle,f,c
  4817  000896  1E23               	comf	??_drawCircle+1,f,c
  4818  000898  4A22               	infsnz	??_drawCircle,f,c
  4819  00089A  2A23               	incf	??_drawCircle+1,f,c
  4820  00089C  C022  F026         	movff	??_drawCircle,drawCircle@ddF_y
  4821  0008A0  C023  F027         	movff	??_drawCircle+1,drawCircle@ddF_y+1
  4822  0008A4  0E00               	movlw	0
  4823  0008A6  6E2B               	movwf	drawCircle@x+1,c
  4824  0008A8  0E00               	movlw	0
  4825  0008AA  6E2A               	movwf	drawCircle@x,c
  4826  0008AC  C01E  F02C         	movff	drawCircle@r,drawCircle@y
  4827  0008B0  C01F  F02D         	movff	drawCircle@r+1,drawCircle@y+1
  4828                           
  4829                           ;ST7735_TFT.c: 565: drawPixel(x0 , y0 + r, color);
  4830  0008B4  501C               	movf	drawCircle@y0,w,c
  4831  0008B6  241E               	addwf	drawCircle@r,w,c
  4832  0008B8  6E16               	movwf	drawPixel@y,c
  4833  0008BA  C020  F017         	movff	drawCircle@color,drawPixel@color
  4834  0008BE  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4835  0008C2  501A               	movf	drawCircle@x0,w,c
  4836  0008C4  ECCF  F00A         	call	_drawPixel
  4837                           
  4838                           ;ST7735_TFT.c: 566: drawPixel(x0 , y0 - r, color);
  4839  0008C8  501E               	movf	drawCircle@r,w,c
  4840  0008CA  0800               	sublw	0
  4841  0008CC  241C               	addwf	drawCircle@y0,w,c
  4842  0008CE  6E16               	movwf	drawPixel@y,c
  4843  0008D0  C020  F017         	movff	drawCircle@color,drawPixel@color
  4844  0008D4  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4845  0008D8  501A               	movf	drawCircle@x0,w,c
  4846  0008DA  ECCF  F00A         	call	_drawPixel
  4847                           
  4848                           ;ST7735_TFT.c: 567: drawPixel(x0+r, y0 , color);
  4849  0008DE  C01C  F016         	movff	drawCircle@y0,drawPixel@y
  4850  0008E2  C020  F017         	movff	drawCircle@color,drawPixel@color
  4851  0008E6  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4852  0008EA  501A               	movf	drawCircle@x0,w,c
  4853  0008EC  241E               	addwf	drawCircle@r,w,c
  4854  0008EE  ECCF  F00A         	call	_drawPixel
  4855                           
  4856                           ;ST7735_TFT.c: 568: drawPixel(x0-r, y0 , color);
  4857  0008F2  C01C  F016         	movff	drawCircle@y0,drawPixel@y
  4858  0008F6  C020  F017         	movff	drawCircle@color,drawPixel@color
  4859  0008FA  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4860  0008FE  501E               	movf	drawCircle@r,w,c
  4861  000900  0800               	sublw	0
  4862  000902  241A               	addwf	drawCircle@x0,w,c
  4863  000904  ECCF  F00A         	call	_drawPixel
  4864                           
  4865                           ;ST7735_TFT.c: 569: while (x < y) {
  4866  000908  D078               	goto	l4296
  4867  00090A                     l4268:
  4868                           
  4869                           ;ST7735_TFT.c: 570: if (f >= 0) {
  4870  00090A  BE29               	btfsc	drawCircle@f+1,7,c
  4871  00090C  D00B               	goto	l237
  4872                           
  4873                           ;ST7735_TFT.c: 571: y--;
  4874  00090E  062C               	decf	drawCircle@y,f,c
  4875  000910  A0D8               	btfss	status,0,c
  4876  000912  062D               	decf	drawCircle@y+1,f,c
  4877                           
  4878                           ;ST7735_TFT.c: 572: ddF_y += 2;
  4879  000914  0E02               	movlw	2
  4880  000916  2626               	addwf	drawCircle@ddF_y,f,c
  4881  000918  0E00               	movlw	0
  4882  00091A  2227               	addwfc	drawCircle@ddF_y+1,f,c
  4883                           
  4884                           ;ST7735_TFT.c: 573: f += ddF_y;
  4885  00091C  5026               	movf	drawCircle@ddF_y,w,c
  4886  00091E  2628               	addwf	drawCircle@f,f,c
  4887  000920  5027               	movf	drawCircle@ddF_y+1,w,c
  4888  000922  2229               	addwfc	drawCircle@f+1,f,c
  4889  000924                     l237:
  4890                           
  4891                           ;ST7735_TFT.c: 574: }
  4892                           ;ST7735_TFT.c: 575: x++;
  4893  000924  4A2A               	infsnz	drawCircle@x,f,c
  4894  000926  2A2B               	incf	drawCircle@x+1,f,c
  4895                           
  4896                           ;ST7735_TFT.c: 576: ddF_x += 2;
  4897  000928  0E02               	movlw	2
  4898  00092A  2624               	addwf	drawCircle@ddF_x,f,c
  4899  00092C  0E00               	movlw	0
  4900  00092E  2225               	addwfc	drawCircle@ddF_x+1,f,c
  4901                           
  4902                           ;ST7735_TFT.c: 577: f += ddF_x;
  4903  000930  5024               	movf	drawCircle@ddF_x,w,c
  4904  000932  2628               	addwf	drawCircle@f,f,c
  4905  000934  5025               	movf	drawCircle@ddF_x+1,w,c
  4906  000936  2229               	addwfc	drawCircle@f+1,f,c
  4907                           
  4908                           ;ST7735_TFT.c: 578: drawPixel(x0 + x, y0 + y, color);
  4909  000938  501C               	movf	drawCircle@y0,w,c
  4910  00093A  242C               	addwf	drawCircle@y,w,c
  4911  00093C  6E16               	movwf	drawPixel@y,c
  4912  00093E  C020  F017         	movff	drawCircle@color,drawPixel@color
  4913  000942  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4914  000946  501A               	movf	drawCircle@x0,w,c
  4915  000948  242A               	addwf	drawCircle@x,w,c
  4916  00094A  ECCF  F00A         	call	_drawPixel
  4917                           
  4918                           ;ST7735_TFT.c: 579: drawPixel(x0 - x, y0 + y, color);
  4919  00094E  501C               	movf	drawCircle@y0,w,c
  4920  000950  242C               	addwf	drawCircle@y,w,c
  4921  000952  6E16               	movwf	drawPixel@y,c
  4922  000954  C020  F017         	movff	drawCircle@color,drawPixel@color
  4923  000958  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4924  00095C  502A               	movf	drawCircle@x,w,c
  4925  00095E  0800               	sublw	0
  4926  000960  241A               	addwf	drawCircle@x0,w,c
  4927  000962  ECCF  F00A         	call	_drawPixel
  4928                           
  4929                           ;ST7735_TFT.c: 580: drawPixel(x0 + x, y0 - y, color);
  4930  000966  502C               	movf	drawCircle@y,w,c
  4931  000968  0800               	sublw	0
  4932  00096A  241C               	addwf	drawCircle@y0,w,c
  4933  00096C  6E16               	movwf	drawPixel@y,c
  4934  00096E  C020  F017         	movff	drawCircle@color,drawPixel@color
  4935  000972  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4936  000976  501A               	movf	drawCircle@x0,w,c
  4937  000978  242A               	addwf	drawCircle@x,w,c
  4938  00097A  ECCF  F00A         	call	_drawPixel
  4939                           
  4940                           ;ST7735_TFT.c: 581: drawPixel(x0 - x, y0 - y, color);
  4941  00097E  502C               	movf	drawCircle@y,w,c
  4942  000980  0800               	sublw	0
  4943  000982  241C               	addwf	drawCircle@y0,w,c
  4944  000984  6E16               	movwf	drawPixel@y,c
  4945  000986  C020  F017         	movff	drawCircle@color,drawPixel@color
  4946  00098A  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4947  00098E  502A               	movf	drawCircle@x,w,c
  4948  000990  0800               	sublw	0
  4949  000992  241A               	addwf	drawCircle@x0,w,c
  4950  000994  ECCF  F00A         	call	_drawPixel
  4951                           
  4952                           ;ST7735_TFT.c: 582: drawPixel(x0 + y, y0 + x, color);
  4953  000998  501C               	movf	drawCircle@y0,w,c
  4954  00099A  242A               	addwf	drawCircle@x,w,c
  4955  00099C  6E16               	movwf	drawPixel@y,c
  4956  00099E  C020  F017         	movff	drawCircle@color,drawPixel@color
  4957  0009A2  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4958  0009A6  501A               	movf	drawCircle@x0,w,c
  4959  0009A8  242C               	addwf	drawCircle@y,w,c
  4960  0009AA  ECCF  F00A         	call	_drawPixel
  4961                           
  4962                           ;ST7735_TFT.c: 583: drawPixel(x0 - y, y0 + x, color);
  4963  0009AE  501C               	movf	drawCircle@y0,w,c
  4964  0009B0  242A               	addwf	drawCircle@x,w,c
  4965  0009B2  6E16               	movwf	drawPixel@y,c
  4966  0009B4  C020  F017         	movff	drawCircle@color,drawPixel@color
  4967  0009B8  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4968  0009BC  502C               	movf	drawCircle@y,w,c
  4969  0009BE  0800               	sublw	0
  4970  0009C0  241A               	addwf	drawCircle@x0,w,c
  4971  0009C2  ECCF  F00A         	call	_drawPixel
  4972                           
  4973                           ;ST7735_TFT.c: 584: drawPixel(x0 + y, y0 - x, color);
  4974  0009C6  502A               	movf	drawCircle@x,w,c
  4975  0009C8  0800               	sublw	0
  4976  0009CA  241C               	addwf	drawCircle@y0,w,c
  4977  0009CC  6E16               	movwf	drawPixel@y,c
  4978  0009CE  C020  F017         	movff	drawCircle@color,drawPixel@color
  4979  0009D2  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4980  0009D6  501A               	movf	drawCircle@x0,w,c
  4981  0009D8  242C               	addwf	drawCircle@y,w,c
  4982  0009DA  ECCF  F00A         	call	_drawPixel
  4983                           
  4984                           ;ST7735_TFT.c: 585: drawPixel(x0 - y, y0 - x, color);
  4985  0009DE  502A               	movf	drawCircle@x,w,c
  4986  0009E0  0800               	sublw	0
  4987  0009E2  241C               	addwf	drawCircle@y0,w,c
  4988  0009E4  6E16               	movwf	drawPixel@y,c
  4989  0009E6  C020  F017         	movff	drawCircle@color,drawPixel@color
  4990  0009EA  C021  F018         	movff	drawCircle@color+1,drawPixel@color+1
  4991  0009EE  502C               	movf	drawCircle@y,w,c
  4992  0009F0  0800               	sublw	0
  4993  0009F2  241A               	addwf	drawCircle@x0,w,c
  4994  0009F4  ECCF  F00A         	call	_drawPixel
  4995  0009F8  D000               	goto	l4296
  4996  0009FA                     l4296:
  4997  0009FA  502C               	movf	drawCircle@y,w,c
  4998  0009FC  5C2A               	subwf	drawCircle@x,w,c
  4999  0009FE  502B               	movf	drawCircle@x+1,w,c
  5000  000A00  0A80               	xorlw	128
  5001  000A02  6E22               	movwf	??_drawCircle& (0+255),c
  5002  000A04  502D               	movf	drawCircle@y+1,w,c
  5003  000A06  0A80               	xorlw	128
  5004  000A08  5822               	subwfb	??_drawCircle& (0+255),w,c
  5005  000A0A  A0D8               	btfss	status,0,c
  5006  000A0C  D77E               	goto	l4268
  5007  000A0E  0012               	return		;funcret
  5008  000A10                     __end_of_drawCircle:
  5009                           	opt stack 0
  5010                           tblptru	equ	0xFF8
  5011                           tblptrh	equ	0xFF7
  5012                           tblptrl	equ	0xFF6
  5013                           tablat	equ	0xFF5
  5014                           prodh	equ	0xFF4
  5015                           prodl	equ	0xFF3
  5016                           intcon2	equ	0xFF1
  5017                           postinc0	equ	0xFEE
  5018                           wreg	equ	0xFE8
  5019                           postdec1	equ	0xFE5
  5020                           fsr1l	equ	0xFE1
  5021                           indf2	equ	0xFDF
  5022                           postinc2	equ	0xFDE
  5023                           fsr2h	equ	0xFDA
  5024                           fsr2l	equ	0xFD9
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function _drawPixel *****************
  5028 ;; Defined at:
  5029 ;;		line 440 in file "ST7735_TFT.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  x               1    wreg     unsigned char 
  5032 ;;  y               1   21[COMRAM] unsigned char 
  5033 ;;  color           2   22[COMRAM] unsigned int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  x               1   24[COMRAM] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;		None               void
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5045 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;Total ram usage:        4 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    5
  5052 ;; This function calls:
  5053 ;;		_setAddrWindow
  5054 ;;		_write_data
  5055 ;; This function is called by:
  5056 ;;		_drawChar
  5057 ;;		_drawCircle
  5058 ;;		_drawCircleHelper
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text17
  5063  00159E                     __ptext17:
  5064                           	opt stack 0
  5065  00159E                     _drawPixel:
  5066                           	opt stack 22
  5067                           
  5068                           ;incstack = 0
  5069                           ;drawPixel@x stored from wreg
  5070  00159E  6E19               	movwf	drawPixel@x,c
  5071                           
  5072                           ;ST7735_TFT.c: 442: if((x >= 128) || (y >= 160))
  5073  0015A0  0E80               	movlw	128
  5074  0015A2  6019               	cpfslt	drawPixel@x,c
  5075  0015A4  D013               	goto	l167
  5076  0015A6  0E9F               	movlw	159
  5077  0015A8  6416               	cpfsgt	drawPixel@y,c
  5078  0015AA  D001               	goto	l3944
  5079                           
  5080                           ;ST7735_TFT.c: 443: return;
  5081  0015AC  D00F               	goto	l167
  5082  0015AE                     l3944:
  5083                           
  5084                           ;ST7735_TFT.c: 444: setAddrWindow(x,y,x+1,y+1);
  5085  0015AE  C016  F012         	movff	drawPixel@y,setAddrWindow@y0
  5086  0015B2  2819               	incf	drawPixel@x,w,c
  5087  0015B4  6E13               	movwf	setAddrWindow@x1,c
  5088  0015B6  2816               	incf	drawPixel@y,w,c
  5089  0015B8  6E14               	movwf	setAddrWindow@y1,c
  5090  0015BA  5019               	movf	drawPixel@x,w,c
  5091  0015BC  EC0B  F00A         	call	_setAddrWindow
  5092                           
  5093                           ;ST7735_TFT.c: 445: write_data(color >> 8);
  5094  0015C0  5018               	movf	drawPixel@color+1,w,c
  5095  0015C2  EC83  F00B         	call	_write_data
  5096                           
  5097                           ;ST7735_TFT.c: 446: write_data(color & 0xFF);
  5098  0015C6  5017               	movf	drawPixel@color,w,c
  5099  0015C8  EC83  F00B         	call	_write_data
  5100  0015CC                     l167:
  5101  0015CC  0012               	return		;funcret
  5102  0015CE                     __end_of_drawPixel:
  5103                           	opt stack 0
  5104                           tblptru	equ	0xFF8
  5105                           tblptrh	equ	0xFF7
  5106                           tblptrl	equ	0xFF6
  5107                           tablat	equ	0xFF5
  5108                           prodh	equ	0xFF4
  5109                           prodl	equ	0xFF3
  5110                           intcon2	equ	0xFF1
  5111                           postinc0	equ	0xFEE
  5112                           wreg	equ	0xFE8
  5113                           postdec1	equ	0xFE5
  5114                           fsr1l	equ	0xFE1
  5115                           indf2	equ	0xFDF
  5116                           postinc2	equ	0xFDE
  5117                           fsr2h	equ	0xFDA
  5118                           fsr2l	equ	0xFD9
  5119                           status	equ	0xFD8
  5120                           
  5121 ;; *************** function _setAddrWindow *****************
  5122 ;; Defined at:
  5123 ;;		line 425 in file "ST7735_TFT.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  x0              1    wreg     unsigned char 
  5126 ;;  y0              1   17[COMRAM] unsigned char 
  5127 ;;  x1              1   18[COMRAM] unsigned char 
  5128 ;;  y1              1   19[COMRAM] unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  x0              1   20[COMRAM] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;		None               void
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5140 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        4 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    4
  5147 ;; This function calls:
  5148 ;;		_write_command
  5149 ;;		_write_data
  5150 ;; This function is called by:
  5151 ;;		_drawPixel
  5152 ;;		_drawFastVLine
  5153 ;;		_fillRectangle
  5154 ;;		_drawFastHLine
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text18
  5159  001416                     __ptext18:
  5160                           	opt stack 0
  5161  001416                     _setAddrWindow:
  5162                           	opt stack 23
  5163                           
  5164                           ;incstack = 0
  5165                           ;setAddrWindow@x0 stored from wreg
  5166  001416  6E15               	movwf	setAddrWindow@x0,c
  5167                           
  5168                           ;ST7735_TFT.c: 427: write_command(0x2A);
  5169  001418  0E2A               	movlw	42
  5170  00141A  EC8B  F00B         	call	_write_command
  5171                           
  5172                           ;ST7735_TFT.c: 428: write_data(0);
  5173  00141E  0E00               	movlw	0
  5174  001420  EC83  F00B         	call	_write_data
  5175                           
  5176                           ;ST7735_TFT.c: 429: write_data(x0 + colstart);
  5177  001424  5015               	movf	setAddrWindow@x0,w,c
  5178  001426  246C               	addwf	_colstart,w,c
  5179  001428  EC83  F00B         	call	_write_data
  5180                           
  5181                           ;ST7735_TFT.c: 430: write_data(0);
  5182  00142C  0E00               	movlw	0
  5183  00142E  EC83  F00B         	call	_write_data
  5184                           
  5185                           ;ST7735_TFT.c: 431: write_data(x1 + colstart);
  5186  001432  5013               	movf	setAddrWindow@x1,w,c
  5187  001434  246C               	addwf	_colstart,w,c
  5188  001436  EC83  F00B         	call	_write_data
  5189                           
  5190                           ;ST7735_TFT.c: 432: write_command(0x2B);
  5191  00143A  0E2B               	movlw	43
  5192  00143C  EC8B  F00B         	call	_write_command
  5193                           
  5194                           ;ST7735_TFT.c: 433: write_data(0);
  5195  001440  0E00               	movlw	0
  5196  001442  EC83  F00B         	call	_write_data
  5197                           
  5198                           ;ST7735_TFT.c: 434: write_data(y0 + rowstart);
  5199  001446  5012               	movf	setAddrWindow@y0,w,c
  5200  001448  246F               	addwf	_rowstart,w,c
  5201  00144A  EC83  F00B         	call	_write_data
  5202                           
  5203                           ;ST7735_TFT.c: 435: write_data(0);
  5204  00144E  0E00               	movlw	0
  5205  001450  EC83  F00B         	call	_write_data
  5206                           
  5207                           ;ST7735_TFT.c: 436: write_data(y1 + rowstart);
  5208  001454  5014               	movf	setAddrWindow@y1,w,c
  5209  001456  246F               	addwf	_rowstart,w,c
  5210  001458  EC83  F00B         	call	_write_data
  5211                           
  5212                           ;ST7735_TFT.c: 437: write_command(0x2C);
  5213  00145C  0E2C               	movlw	44
  5214  00145E  EC8B  F00B         	call	_write_command
  5215  001462  0012               	return		;funcret
  5216  001464                     __end_of_setAddrWindow:
  5217                           	opt stack 0
  5218                           tblptru	equ	0xFF8
  5219                           tblptrh	equ	0xFF7
  5220                           tblptrl	equ	0xFF6
  5221                           tablat	equ	0xFF5
  5222                           prodh	equ	0xFF4
  5223                           prodl	equ	0xFF3
  5224                           intcon2	equ	0xFF1
  5225                           postinc0	equ	0xFEE
  5226                           wreg	equ	0xFE8
  5227                           postdec1	equ	0xFE5
  5228                           fsr1l	equ	0xFE1
  5229                           indf2	equ	0xFDF
  5230                           postinc2	equ	0xFDE
  5231                           fsr2h	equ	0xFDA
  5232                           fsr2l	equ	0xFD9
  5233                           status	equ	0xFD8
  5234                           
  5235 ;; *************** function _TFT_GreenTab_Initialize *****************
  5236 ;; Defined at:
  5237 ;;		line 677 in file "ST7735_TFT.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;		None               void
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;Total ram usage:        0 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    5
  5258 ;; This function calls:
  5259 ;;		_Rcmd1
  5260 ;;		_Rcmd2red
  5261 ;;		_Rcmd3
  5262 ;;		_write_command
  5263 ;;		_write_data
  5264 ;; This function is called by:
  5265 ;;		_Initialize_Screen
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text19
  5270  0015FA                     __ptext19:
  5271                           	opt stack 0
  5272  0015FA                     _TFT_GreenTab_Initialize:
  5273                           	opt stack 24
  5274                           
  5275                           ;ST7735_TFT.c: 679: PORTDbits.RD1 = 1;
  5276                           
  5277                           ;incstack = 0
  5278  0015FA  8283               	bsf	3971,1,c	;volatile
  5279                           
  5280                           ;ST7735_TFT.c: 680: PORTDbits.RD0 = 0;
  5281  0015FC  9083               	bcf	3971,0,c	;volatile
  5282                           
  5283                           ;ST7735_TFT.c: 682: SSPSTAT=0x80;
  5284  0015FE  0E80               	movlw	128
  5285  001600  6EC7               	movwf	4039,c	;volatile
  5286                           
  5287                           ;ST7735_TFT.c: 683: SSPCON1=0x30;
  5288  001602  0E30               	movlw	48
  5289  001604  6EC6               	movwf	4038,c	;volatile
  5290                           
  5291                           ;ST7735_TFT.c: 686: Rcmd1();
  5292  001606  ECDB  F006         	call	_Rcmd1	;wreg free
  5293                           
  5294                           ;ST7735_TFT.c: 687: Rcmd2red();
  5295  00160A  EC97  F00A         	call	_Rcmd2red	;wreg free
  5296                           
  5297                           ;ST7735_TFT.c: 688: Rcmd3();
  5298  00160E  EC63  F007         	call	_Rcmd3	;wreg free
  5299                           
  5300                           ;ST7735_TFT.c: 689: write_command(0x36);
  5301  001612  0E36               	movlw	54
  5302  001614  EC8B  F00B         	call	_write_command
  5303                           
  5304                           ;ST7735_TFT.c: 690: write_data(0xC0);
  5305  001618  0EC0               	movlw	192
  5306  00161A  EC83  F00B         	call	_write_data
  5307                           
  5308                           ;ST7735_TFT.c: 691: _tft_type = 1;
  5309  00161E  0E01               	movlw	1
  5310  001620  6E6B               	movwf	__tft_type,c
  5311  001622  0012               	return		;funcret
  5312  001624                     __end_of_TFT_GreenTab_Initialize:
  5313                           	opt stack 0
  5314                           tblptru	equ	0xFF8
  5315                           tblptrh	equ	0xFF7
  5316                           tblptrl	equ	0xFF6
  5317                           tablat	equ	0xFF5
  5318                           prodh	equ	0xFF4
  5319                           prodl	equ	0xFF3
  5320                           intcon2	equ	0xFF1
  5321                           postinc0	equ	0xFEE
  5322                           wreg	equ	0xFE8
  5323                           postdec1	equ	0xFE5
  5324                           fsr1l	equ	0xFE1
  5325                           indf2	equ	0xFDF
  5326                           postinc2	equ	0xFDE
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _Rcmd3 *****************
  5332 ;; Defined at:
  5333 ;;		line 371 in file "ST7735_TFT.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;		None               void
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;Total ram usage:        0 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    4
  5354 ;; This function calls:
  5355 ;;		_delay_ms
  5356 ;;		_write_command
  5357 ;;		_write_data
  5358 ;; This function is called by:
  5359 ;;		_TFT_GreenTab_Initialize
  5360 ;;		_TFT_BlackTab_Initialize
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text20
  5365  000EC6                     __ptext20:
  5366                           	opt stack 0
  5367  000EC6                     _Rcmd3:
  5368                           	opt stack 24
  5369                           
  5370                           ;ST7735_TFT.c: 373: write_command(0xE0);
  5371                           
  5372                           ;incstack = 0
  5373  000EC6  0EE0               	movlw	224
  5374  000EC8  EC8B  F00B         	call	_write_command
  5375                           
  5376                           ;ST7735_TFT.c: 374: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
  5377  000ECC  0E02               	movlw	2
  5378  000ECE  EC83  F00B         	call	_write_data
  5379  000ED2  0E1C               	movlw	28
  5380  000ED4  EC83  F00B         	call	_write_data
  5381  000ED8  0E07               	movlw	7
  5382  000EDA  EC83  F00B         	call	_write_data
  5383  000EDE  0E12               	movlw	18
  5384  000EE0  EC83  F00B         	call	_write_data
  5385                           
  5386                           ;ST7735_TFT.c: 375: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
  5387  000EE4  0E37               	movlw	55
  5388  000EE6  EC83  F00B         	call	_write_data
  5389  000EEA  0E32               	movlw	50
  5390  000EEC  EC83  F00B         	call	_write_data
  5391  000EF0  0E29               	movlw	41
  5392  000EF2  EC83  F00B         	call	_write_data
  5393  000EF6  0E2D               	movlw	45
  5394  000EF8  EC83  F00B         	call	_write_data
  5395                           
  5396                           ;ST7735_TFT.c: 376: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
  5397  000EFC  0E29               	movlw	41
  5398  000EFE  EC83  F00B         	call	_write_data
  5399  000F02  0E25               	movlw	37
  5400  000F04  EC83  F00B         	call	_write_data
  5401  000F08  0E2B               	movlw	43
  5402  000F0A  EC83  F00B         	call	_write_data
  5403  000F0E  0E39               	movlw	57
  5404  000F10  EC83  F00B         	call	_write_data
  5405                           
  5406                           ;ST7735_TFT.c: 377: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
  5407  000F14  0E00               	movlw	0
  5408  000F16  EC83  F00B         	call	_write_data
  5409  000F1A  0E01               	movlw	1
  5410  000F1C  EC83  F00B         	call	_write_data
  5411  000F20  0E03               	movlw	3
  5412  000F22  EC83  F00B         	call	_write_data
  5413  000F26  0E10               	movlw	16
  5414  000F28  EC83  F00B         	call	_write_data
  5415                           
  5416                           ;ST7735_TFT.c: 378: write_command(0xE1);
  5417  000F2C  0EE1               	movlw	225
  5418  000F2E  EC8B  F00B         	call	_write_command
  5419                           
  5420                           ;ST7735_TFT.c: 379: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
  5421  000F32  0E03               	movlw	3
  5422  000F34  EC83  F00B         	call	_write_data
  5423  000F38  0E1D               	movlw	29
  5424  000F3A  EC83  F00B         	call	_write_data
  5425  000F3E  0E07               	movlw	7
  5426  000F40  EC83  F00B         	call	_write_data
  5427  000F44  0E06               	movlw	6
  5428  000F46  EC83  F00B         	call	_write_data
  5429                           
  5430                           ;ST7735_TFT.c: 380: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
  5431  000F4A  0E2E               	movlw	46
  5432  000F4C  EC83  F00B         	call	_write_data
  5433  000F50  0E2C               	movlw	44
  5434  000F52  EC83  F00B         	call	_write_data
  5435  000F56  0E29               	movlw	41
  5436  000F58  EC83  F00B         	call	_write_data
  5437  000F5C  0E2D               	movlw	45
  5438  000F5E  EC83  F00B         	call	_write_data
  5439                           
  5440                           ;ST7735_TFT.c: 381: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
  5441  000F62  0E2E               	movlw	46
  5442  000F64  EC83  F00B         	call	_write_data
  5443  000F68  0E2E               	movlw	46
  5444  000F6A  EC83  F00B         	call	_write_data
  5445  000F6E  0E37               	movlw	55
  5446  000F70  EC83  F00B         	call	_write_data
  5447  000F74  0E3F               	movlw	63
  5448  000F76  EC83  F00B         	call	_write_data
  5449                           
  5450                           ;ST7735_TFT.c: 382: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
  5451  000F7A  0E00               	movlw	0
  5452  000F7C  EC83  F00B         	call	_write_data
  5453  000F80  0E00               	movlw	0
  5454  000F82  EC83  F00B         	call	_write_data
  5455  000F86  0E02               	movlw	2
  5456  000F88  EC83  F00B         	call	_write_data
  5457  000F8C  0E10               	movlw	16
  5458  000F8E  EC83  F00B         	call	_write_data
  5459                           
  5460                           ;ST7735_TFT.c: 383: write_command(0x13);
  5461  000F92  0E13               	movlw	19
  5462  000F94  EC8B  F00B         	call	_write_command
  5463                           
  5464                           ;ST7735_TFT.c: 384: delay_ms(10);
  5465  000F98  0E00               	movlw	0
  5466  000F9A  6E16               	movwf	delay_ms@ms+1,c
  5467  000F9C  0E0A               	movlw	10
  5468  000F9E  6E15               	movwf	delay_ms@ms,c
  5469  000FA0  ECE2  F009         	call	_delay_ms	;wreg free
  5470                           
  5471                           ;ST7735_TFT.c: 385: write_command(0x29);
  5472  000FA4  0E29               	movlw	41
  5473  000FA6  EC8B  F00B         	call	_write_command
  5474                           
  5475                           ;ST7735_TFT.c: 386: delay_ms(100);
  5476  000FAA  0E00               	movlw	0
  5477  000FAC  6E16               	movwf	delay_ms@ms+1,c
  5478  000FAE  0E64               	movlw	100
  5479  000FB0  6E15               	movwf	delay_ms@ms,c
  5480  000FB2  ECE2  F009         	call	_delay_ms	;wreg free
  5481  000FB6  0012               	return		;funcret
  5482  000FB8                     __end_of_Rcmd3:
  5483                           	opt stack 0
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon2	equ	0xFF1
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           postdec1	equ	0xFE5
  5494                           fsr1l	equ	0xFE1
  5495                           indf2	equ	0xFDF
  5496                           postinc2	equ	0xFDE
  5497                           fsr2h	equ	0xFDA
  5498                           fsr2l	equ	0xFD9
  5499                           status	equ	0xFD8
  5500                           
  5501 ;; *************** function _Rcmd2red *****************
  5502 ;; Defined at:
  5503 ;;		line 361 in file "ST7735_TFT.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;		None               void
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;Total ram usage:        0 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    4
  5524 ;; This function calls:
  5525 ;;		_write_command
  5526 ;;		_write_data
  5527 ;; This function is called by:
  5528 ;;		_TFT_GreenTab_Initialize
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text21
  5533  00152E                     __ptext21:
  5534                           	opt stack 0
  5535  00152E                     _Rcmd2red:
  5536                           	opt stack 24
  5537                           
  5538                           ;ST7735_TFT.c: 363: write_command(0x2A);
  5539                           
  5540                           ;incstack = 0
  5541  00152E  0E2A               	movlw	42
  5542  001530  EC8B  F00B         	call	_write_command
  5543                           
  5544                           ;ST7735_TFT.c: 364: write_data(0x00); write_data(0x00);
  5545  001534  0E00               	movlw	0
  5546  001536  EC83  F00B         	call	_write_data
  5547  00153A  0E00               	movlw	0
  5548  00153C  EC83  F00B         	call	_write_data
  5549                           
  5550                           ;ST7735_TFT.c: 365: write_data(0x00); write_data(0x7F);
  5551  001540  0E00               	movlw	0
  5552  001542  EC83  F00B         	call	_write_data
  5553  001546  0E7F               	movlw	127
  5554  001548  EC83  F00B         	call	_write_data
  5555                           
  5556                           ;ST7735_TFT.c: 366: write_command(0x2B);
  5557  00154C  0E2B               	movlw	43
  5558  00154E  EC8B  F00B         	call	_write_command
  5559                           
  5560                           ;ST7735_TFT.c: 367: write_data(0x00); write_data(0x00);
  5561  001552  0E00               	movlw	0
  5562  001554  EC83  F00B         	call	_write_data
  5563  001558  0E00               	movlw	0
  5564  00155A  EC83  F00B         	call	_write_data
  5565                           
  5566                           ;ST7735_TFT.c: 368: write_data(0x00); write_data(0x9F);
  5567  00155E  0E00               	movlw	0
  5568  001560  EC83  F00B         	call	_write_data
  5569  001564  0E9F               	movlw	159
  5570  001566  EC83  F00B         	call	_write_data
  5571  00156A  0012               	return		;funcret
  5572  00156C                     __end_of_Rcmd2red:
  5573                           	opt stack 0
  5574                           tblptru	equ	0xFF8
  5575                           tblptrh	equ	0xFF7
  5576                           tblptrl	equ	0xFF6
  5577                           tablat	equ	0xFF5
  5578                           prodh	equ	0xFF4
  5579                           prodl	equ	0xFF3
  5580                           intcon2	equ	0xFF1
  5581                           postinc0	equ	0xFEE
  5582                           wreg	equ	0xFE8
  5583                           postdec1	equ	0xFE5
  5584                           fsr1l	equ	0xFE1
  5585                           indf2	equ	0xFDF
  5586                           postinc2	equ	0xFDE
  5587                           fsr2h	equ	0xFDA
  5588                           fsr2l	equ	0xFD9
  5589                           status	equ	0xFD8
  5590                           
  5591 ;; *************** function _Rcmd1 *****************
  5592 ;; Defined at:
  5593 ;;		line 314 in file "ST7735_TFT.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    4
  5614 ;; This function calls:
  5615 ;;		_delay_ms
  5616 ;;		_write_command
  5617 ;;		_write_data
  5618 ;; This function is called by:
  5619 ;;		_TFT_GreenTab_Initialize
  5620 ;;		_TFT_BlackTab_Initialize
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text22
  5625  000DB6                     __ptext22:
  5626                           	opt stack 0
  5627  000DB6                     _Rcmd1:
  5628                           	opt stack 24
  5629                           
  5630                           ;ST7735_TFT.c: 316: write_command(0x01);
  5631                           
  5632                           ;incstack = 0
  5633  000DB6  0E01               	movlw	1
  5634  000DB8  EC8B  F00B         	call	_write_command
  5635                           
  5636                           ;ST7735_TFT.c: 317: delay_ms(150);
  5637  000DBC  0E00               	movlw	0
  5638  000DBE  6E16               	movwf	delay_ms@ms+1,c
  5639  000DC0  0E96               	movlw	150
  5640  000DC2  6E15               	movwf	delay_ms@ms,c
  5641  000DC4  ECE2  F009         	call	_delay_ms	;wreg free
  5642                           
  5643                           ;ST7735_TFT.c: 318: write_command(0x11);
  5644  000DC8  0E11               	movlw	17
  5645  000DCA  EC8B  F00B         	call	_write_command
  5646                           
  5647                           ;ST7735_TFT.c: 319: delay_ms(500);
  5648  000DCE  0E01               	movlw	1
  5649  000DD0  6E16               	movwf	delay_ms@ms+1,c
  5650  000DD2  0EF4               	movlw	244
  5651  000DD4  6E15               	movwf	delay_ms@ms,c
  5652  000DD6  ECE2  F009         	call	_delay_ms	;wreg free
  5653                           
  5654                           ;ST7735_TFT.c: 320: write_command(0xB1);
  5655  000DDA  0EB1               	movlw	177
  5656  000DDC  EC8B  F00B         	call	_write_command
  5657                           
  5658                           ;ST7735_TFT.c: 321: write_data(0x01);
  5659  000DE0  0E01               	movlw	1
  5660  000DE2  EC83  F00B         	call	_write_data
  5661                           
  5662                           ;ST7735_TFT.c: 322: write_data(0x2C);
  5663  000DE6  0E2C               	movlw	44
  5664  000DE8  EC83  F00B         	call	_write_data
  5665                           
  5666                           ;ST7735_TFT.c: 323: write_data(0x2D);
  5667  000DEC  0E2D               	movlw	45
  5668  000DEE  EC83  F00B         	call	_write_data
  5669                           
  5670                           ;ST7735_TFT.c: 324: write_command(0xB2);
  5671  000DF2  0EB2               	movlw	178
  5672  000DF4  EC8B  F00B         	call	_write_command
  5673                           
  5674                           ;ST7735_TFT.c: 325: write_data(0x01);
  5675  000DF8  0E01               	movlw	1
  5676  000DFA  EC83  F00B         	call	_write_data
  5677                           
  5678                           ;ST7735_TFT.c: 326: write_data(0x2C);
  5679  000DFE  0E2C               	movlw	44
  5680  000E00  EC83  F00B         	call	_write_data
  5681                           
  5682                           ;ST7735_TFT.c: 327: write_data(0x2D);
  5683  000E04  0E2D               	movlw	45
  5684  000E06  EC83  F00B         	call	_write_data
  5685                           
  5686                           ;ST7735_TFT.c: 328: write_command(0xB3);
  5687  000E0A  0EB3               	movlw	179
  5688  000E0C  EC8B  F00B         	call	_write_command
  5689                           
  5690                           ;ST7735_TFT.c: 329: write_data(0x01);
  5691  000E10  0E01               	movlw	1
  5692  000E12  EC83  F00B         	call	_write_data
  5693                           
  5694                           ;ST7735_TFT.c: 330: write_data(0x2C);
  5695  000E16  0E2C               	movlw	44
  5696  000E18  EC83  F00B         	call	_write_data
  5697                           
  5698                           ;ST7735_TFT.c: 331: write_data(0x2D);
  5699  000E1C  0E2D               	movlw	45
  5700  000E1E  EC83  F00B         	call	_write_data
  5701                           
  5702                           ;ST7735_TFT.c: 332: write_data(0x01);
  5703  000E22  0E01               	movlw	1
  5704  000E24  EC83  F00B         	call	_write_data
  5705                           
  5706                           ;ST7735_TFT.c: 333: write_data(0x2C);
  5707  000E28  0E2C               	movlw	44
  5708  000E2A  EC83  F00B         	call	_write_data
  5709                           
  5710                           ;ST7735_TFT.c: 334: write_data(0x2D);
  5711  000E2E  0E2D               	movlw	45
  5712  000E30  EC83  F00B         	call	_write_data
  5713                           
  5714                           ;ST7735_TFT.c: 335: write_command(0xB4);
  5715  000E34  0EB4               	movlw	180
  5716  000E36  EC8B  F00B         	call	_write_command
  5717                           
  5718                           ;ST7735_TFT.c: 336: write_data(0x07);
  5719  000E3A  0E07               	movlw	7
  5720  000E3C  EC83  F00B         	call	_write_data
  5721                           
  5722                           ;ST7735_TFT.c: 337: write_command(0xC0);
  5723  000E40  0EC0               	movlw	192
  5724  000E42  EC8B  F00B         	call	_write_command
  5725                           
  5726                           ;ST7735_TFT.c: 338: write_data(0xA2);
  5727  000E46  0EA2               	movlw	162
  5728  000E48  EC83  F00B         	call	_write_data
  5729                           
  5730                           ;ST7735_TFT.c: 339: write_data(0x02);
  5731  000E4C  0E02               	movlw	2
  5732  000E4E  EC83  F00B         	call	_write_data
  5733                           
  5734                           ;ST7735_TFT.c: 340: write_data(0x84);
  5735  000E52  0E84               	movlw	132
  5736  000E54  EC83  F00B         	call	_write_data
  5737                           
  5738                           ;ST7735_TFT.c: 341: write_command(0xC1);
  5739  000E58  0EC1               	movlw	193
  5740  000E5A  EC8B  F00B         	call	_write_command
  5741                           
  5742                           ;ST7735_TFT.c: 342: write_data(0xC5);
  5743  000E5E  0EC5               	movlw	197
  5744  000E60  EC83  F00B         	call	_write_data
  5745                           
  5746                           ;ST7735_TFT.c: 343: write_command(0xC2);
  5747  000E64  0EC2               	movlw	194
  5748  000E66  EC8B  F00B         	call	_write_command
  5749                           
  5750                           ;ST7735_TFT.c: 344: write_data(0x0A);
  5751  000E6A  0E0A               	movlw	10
  5752  000E6C  EC83  F00B         	call	_write_data
  5753                           
  5754                           ;ST7735_TFT.c: 345: write_data(0x00);
  5755  000E70  0E00               	movlw	0
  5756  000E72  EC83  F00B         	call	_write_data
  5757                           
  5758                           ;ST7735_TFT.c: 346: write_command(0xC3);
  5759  000E76  0EC3               	movlw	195
  5760  000E78  EC8B  F00B         	call	_write_command
  5761                           
  5762                           ;ST7735_TFT.c: 347: write_data(0x8A);
  5763  000E7C  0E8A               	movlw	138
  5764  000E7E  EC83  F00B         	call	_write_data
  5765                           
  5766                           ;ST7735_TFT.c: 348: write_data(0x2A);
  5767  000E82  0E2A               	movlw	42
  5768  000E84  EC83  F00B         	call	_write_data
  5769                           
  5770                           ;ST7735_TFT.c: 349: write_command(0xC4);
  5771  000E88  0EC4               	movlw	196
  5772  000E8A  EC8B  F00B         	call	_write_command
  5773                           
  5774                           ;ST7735_TFT.c: 350: write_data(0x8A);
  5775  000E8E  0E8A               	movlw	138
  5776  000E90  EC83  F00B         	call	_write_data
  5777                           
  5778                           ;ST7735_TFT.c: 351: write_data(0xEE);
  5779  000E94  0EEE               	movlw	238
  5780  000E96  EC83  F00B         	call	_write_data
  5781                           
  5782                           ;ST7735_TFT.c: 352: write_command(0xC5);
  5783  000E9A  0EC5               	movlw	197
  5784  000E9C  EC8B  F00B         	call	_write_command
  5785                           
  5786                           ;ST7735_TFT.c: 353: write_data(0x0E);
  5787  000EA0  0E0E               	movlw	14
  5788  000EA2  EC83  F00B         	call	_write_data
  5789                           
  5790                           ;ST7735_TFT.c: 354: write_command(0x20);
  5791  000EA6  0E20               	movlw	32
  5792  000EA8  EC8B  F00B         	call	_write_command
  5793                           
  5794                           ;ST7735_TFT.c: 355: write_command(0x36);
  5795  000EAC  0E36               	movlw	54
  5796  000EAE  EC8B  F00B         	call	_write_command
  5797                           
  5798                           ;ST7735_TFT.c: 356: write_data(0xC8);
  5799  000EB2  0EC8               	movlw	200
  5800  000EB4  EC83  F00B         	call	_write_data
  5801                           
  5802                           ;ST7735_TFT.c: 357: write_command(0x3A);
  5803  000EB8  0E3A               	movlw	58
  5804  000EBA  EC8B  F00B         	call	_write_command
  5805                           
  5806                           ;ST7735_TFT.c: 358: write_data(0x05);
  5807  000EBE  0E05               	movlw	5
  5808  000EC0  EC83  F00B         	call	_write_data
  5809  000EC4  0012               	return		;funcret
  5810  000EC6                     __end_of_Rcmd1:
  5811                           	opt stack 0
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           prodh	equ	0xFF4
  5817                           prodl	equ	0xFF3
  5818                           intcon2	equ	0xFF1
  5819                           postinc0	equ	0xFEE
  5820                           wreg	equ	0xFE8
  5821                           postdec1	equ	0xFE5
  5822                           fsr1l	equ	0xFE1
  5823                           indf2	equ	0xFDF
  5824                           postinc2	equ	0xFDE
  5825                           fsr2h	equ	0xFDA
  5826                           fsr2l	equ	0xFD9
  5827                           status	equ	0xFD8
  5828                           
  5829 ;; *************** function _write_data *****************
  5830 ;; Defined at:
  5831 ;;		line 242 in file "ST7735_TFT.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  data_           1    wreg     unsigned char 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  data_           1   16[COMRAM] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;		None               void
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;Total ram usage:        1 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    3
  5852 ;; This function calls:
  5853 ;;		_spiwrite
  5854 ;; This function is called by:
  5855 ;;		_Rcmd1
  5856 ;;		_Rcmd2red
  5857 ;;		_Rcmd3
  5858 ;;		_setAddrWindow
  5859 ;;		_drawPixel
  5860 ;;		_TFT_GreenTab_Initialize
  5861 ;;		_Bcmd
  5862 ;;		_setScrollDefinition
  5863 ;;		_Rcmd2green
  5864 ;;		_VerticalScroll
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text23
  5869  001706                     __ptext23:
  5870                           	opt stack 0
  5871  001706                     _write_data:
  5872                           	opt stack 23
  5873                           
  5874                           ;incstack = 0
  5875                           ;write_data@data_ stored from wreg
  5876  001706  6E11               	movwf	write_data@data_,c
  5877                           
  5878                           ;ST7735_TFT.c: 244: PORTDbits.RD1 = 0;
  5879  001708  9283               	bcf	3971,1,c	;volatile
  5880                           
  5881                           ;ST7735_TFT.c: 245: PORTDbits.RD0 = 1;
  5882  00170A  8083               	bsf	3971,0,c	;volatile
  5883                           
  5884                           ;ST7735_TFT.c: 246: spiwrite(data_);
  5885  00170C  5011               	movf	write_data@data_,w,c
  5886  00170E  EC66  F00B         	call	_spiwrite
  5887                           
  5888                           ;ST7735_TFT.c: 247: PORTDbits.RD1 = 1;
  5889  001712  8283               	bsf	3971,1,c	;volatile
  5890  001714  0012               	return		;funcret
  5891  001716                     __end_of_write_data:
  5892                           	opt stack 0
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon2	equ	0xFF1
  5900                           postinc0	equ	0xFEE
  5901                           wreg	equ	0xFE8
  5902                           postdec1	equ	0xFE5
  5903                           fsr1l	equ	0xFE1
  5904                           indf2	equ	0xFDF
  5905                           postinc2	equ	0xFDE
  5906                           fsr2h	equ	0xFDA
  5907                           fsr2l	equ	0xFD9
  5908                           status	equ	0xFD8
  5909                           
  5910 ;; *************** function _write_command *****************
  5911 ;; Defined at:
  5912 ;;		line 231 in file "ST7735_TFT.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  cmd_            1    wreg     unsigned char 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  cmd_            1   16[COMRAM] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;		None               void
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;Total ram usage:        1 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    3
  5933 ;; This function calls:
  5934 ;;		_spiwrite
  5935 ;; This function is called by:
  5936 ;;		_Rcmd1
  5937 ;;		_Rcmd2red
  5938 ;;		_Rcmd3
  5939 ;;		_setAddrWindow
  5940 ;;		_TFT_GreenTab_Initialize
  5941 ;;		_Bcmd
  5942 ;;		_setScrollDefinition
  5943 ;;		_Rcmd2green
  5944 ;;		_VerticalScroll
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text24
  5949  001716                     __ptext24:
  5950                           	opt stack 0
  5951  001716                     _write_command:
  5952                           	opt stack 23
  5953                           
  5954                           ;incstack = 0
  5955                           ;write_command@cmd_ stored from wreg
  5956  001716  6E11               	movwf	write_command@cmd_,c
  5957                           
  5958                           ;ST7735_TFT.c: 233: PORTDbits.RD1 = 0;
  5959  001718  9283               	bcf	3971,1,c	;volatile
  5960                           
  5961                           ;ST7735_TFT.c: 235: PORTDbits.RD0 = 0;
  5962  00171A  9083               	bcf	3971,0,c	;volatile
  5963                           
  5964                           ;ST7735_TFT.c: 236: spiwrite(cmd_);
  5965  00171C  5011               	movf	write_command@cmd_,w,c
  5966  00171E  EC66  F00B         	call	_spiwrite
  5967                           
  5968                           ;ST7735_TFT.c: 238: PORTDbits.RD1 = 1;
  5969  001722  8283               	bsf	3971,1,c	;volatile
  5970  001724  0012               	return		;funcret
  5971  001726                     __end_of_write_command:
  5972                           	opt stack 0
  5973                           tblptru	equ	0xFF8
  5974                           tblptrh	equ	0xFF7
  5975                           tblptrl	equ	0xFF6
  5976                           tablat	equ	0xFF5
  5977                           prodh	equ	0xFF4
  5978                           prodl	equ	0xFF3
  5979                           intcon2	equ	0xFF1
  5980                           postinc0	equ	0xFEE
  5981                           wreg	equ	0xFE8
  5982                           postdec1	equ	0xFE5
  5983                           fsr1l	equ	0xFE1
  5984                           indf2	equ	0xFDF
  5985                           postinc2	equ	0xFDE
  5986                           fsr2h	equ	0xFDA
  5987                           fsr2l	equ	0xFD9
  5988                           status	equ	0xFD8
  5989                           
  5990 ;; *************** function _spiwrite *****************
  5991 ;; Defined at:
  5992 ;;		line 222 in file "ST7735_TFT.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  spidata         1    wreg     unsigned char 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  spidata         1   15[COMRAM] unsigned char 
  5997 ;;  x               1   14[COMRAM] unsigned char 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;		None               void
  6000 ;; Registers used:
  6001 ;;		wreg
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;Total ram usage:        2 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    2
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_write_command
  6018 ;;		_write_data
  6019 ;;		_drawFastVLine
  6020 ;;		_fillRectangle
  6021 ;;		_drawFastHLine
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text25
  6026  0016CC                     __ptext25:
  6027                           	opt stack 0
  6028  0016CC                     _spiwrite:
  6029                           	opt stack 25
  6030                           
  6031                           ;incstack = 0
  6032                           ;spiwrite@spidata stored from wreg
  6033  0016CC  6E10               	movwf	spiwrite@spidata,c
  6034                           
  6035                           ;ST7735_TFT.c: 224: char x;
  6036                           ;ST7735_TFT.c: 225: PIR1bits.SSPIF = 0;
  6037  0016CE  969E               	bcf	3998,3,c	;volatile
  6038                           
  6039                           ;ST7735_TFT.c: 226: x = SSPBUF;
  6040  0016D0  CFC9 F00F          	movff	4041,spiwrite@x	;volatile
  6041                           
  6042                           ;ST7735_TFT.c: 227: SSPBUF = spidata;
  6043  0016D4  C010  FFC9         	movff	spiwrite@spidata,4041	;volatile
  6044                           
  6045                           ;ST7735_TFT.c: 228: while (!SSPSTATbits.BF);
  6046  0016D8  D000               	goto	l123
  6047  0016DA                     l123:
  6048  0016DA  A0C7               	btfss	4039,0,c	;volatile
  6049  0016DC  D7FE               	goto	l123
  6050  0016DE  0012               	return		;funcret
  6051  0016E0                     __end_of_spiwrite:
  6052                           	opt stack 0
  6053                           tblptru	equ	0xFF8
  6054                           tblptrh	equ	0xFF7
  6055                           tblptrl	equ	0xFF6
  6056                           tablat	equ	0xFF5
  6057                           prodh	equ	0xFF4
  6058                           prodl	equ	0xFF3
  6059                           intcon2	equ	0xFF1
  6060                           postinc0	equ	0xFEE
  6061                           wreg	equ	0xFE8
  6062                           postdec1	equ	0xFE5
  6063                           fsr1l	equ	0xFE1
  6064                           indf2	equ	0xFDF
  6065                           postinc2	equ	0xFDE
  6066                           fsr2h	equ	0xFDA
  6067                           fsr2l	equ	0xFD9
  6068                           status	equ	0xFD8
  6069                           
  6070 ;; *************** function _LCD_Reset *****************
  6071 ;; Defined at:
  6072 ;;		line 250 in file "ST7735_TFT.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;		None
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;		None               void
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;Total ram usage:        0 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    4
  6093 ;; This function calls:
  6094 ;;		_delay_ms
  6095 ;; This function is called by:
  6096 ;;		_Initialize_Screen
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text26
  6101  0016F4                     __ptext26:
  6102                           	opt stack 0
  6103  0016F4                     _LCD_Reset:
  6104                           	opt stack 25
  6105                           
  6106                           ;ST7735_TFT.c: 252: PORTDbits.RD2 = 0;
  6107                           
  6108                           ;incstack = 0
  6109  0016F4  9483               	bcf	3971,2,c	;volatile
  6110                           
  6111                           ;ST7735_TFT.c: 253: delay_ms(100);
  6112  0016F6  0E00               	movlw	0
  6113  0016F8  6E16               	movwf	delay_ms@ms+1,c
  6114  0016FA  0E64               	movlw	100
  6115  0016FC  6E15               	movwf	delay_ms@ms,c
  6116  0016FE  ECE2  F009         	call	_delay_ms	;wreg free
  6117                           
  6118                           ;ST7735_TFT.c: 254: PORTDbits.RD2 = 1;
  6119  001702  8483               	bsf	3971,2,c	;volatile
  6120  001704  0012               	return		;funcret
  6121  001706                     __end_of_LCD_Reset:
  6122                           	opt stack 0
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           intcon2	equ	0xFF1
  6130                           postinc0	equ	0xFEE
  6131                           wreg	equ	0xFE8
  6132                           postdec1	equ	0xFE5
  6133                           fsr1l	equ	0xFE1
  6134                           indf2	equ	0xFDF
  6135                           postinc2	equ	0xFDE
  6136                           fsr2h	equ	0xFDA
  6137                           fsr2l	equ	0xFD9
  6138                           status	equ	0xFD8
  6139                           
  6140 ;; *************** function _delay_ms *****************
  6141 ;; Defined at:
  6142 ;;		line 97 in file "ST7735_TFT.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  ms              2   20[COMRAM] int 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  count           2   24[COMRAM] int 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;		None               void
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;Total ram usage:        6 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    3
  6163 ;; This function calls:
  6164 ;;		___wmul
  6165 ;; This function is called by:
  6166 ;;		_LCD_Reset
  6167 ;;		_Rcmd1
  6168 ;;		_Rcmd3
  6169 ;;		_Bcmd
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text27
  6174  0013C4                     __ptext27:
  6175                           	opt stack 0
  6176  0013C4                     _delay_ms:
  6177                           	opt stack 24
  6178                           
  6179                           ;ST7735_TFT.c: 103: int count;
  6180                           ;ST7735_TFT.c: 104: count = 8000000/4000/8 * ms;
  6181                           
  6182                           ;incstack = 0
  6183  0013C4  C015  F00F         	movff	delay_ms@ms,___wmul@multiplier
  6184  0013C8  C016  F010         	movff	delay_ms@ms+1,___wmul@multiplier+1
  6185  0013CC  0E00               	movlw	0
  6186  0013CE  6E12               	movwf	___wmul@multiplicand+1,c
  6187  0013D0  0EFA               	movlw	250
  6188  0013D2  6E11               	movwf	___wmul@multiplicand,c
  6189  0013D4  EC27  F00B         	call	___wmul	;wreg free
  6190  0013D8  C00F  F019         	movff	?___wmul,delay_ms@count
  6191  0013DC  C010  F01A         	movff	?___wmul+1,delay_ms@count+1
  6192                           
  6193                           ;ST7735_TFT.c: 105: count = (0xffff - count);
  6194  0013E0  C019  F017         	movff	delay_ms@count,??_delay_ms
  6195  0013E4  C01A  F018         	movff	delay_ms@count+1,??_delay_ms+1
  6196  0013E8  1E17               	comf	??_delay_ms,f,c
  6197  0013EA  1E18               	comf	??_delay_ms+1,f,c
  6198  0013EC  4A17               	infsnz	??_delay_ms,f,c
  6199  0013EE  2A18               	incf	??_delay_ms+1,f,c
  6200  0013F0  0EFF               	movlw	255
  6201  0013F2  2417               	addwf	??_delay_ms,w,c
  6202  0013F4  6E19               	movwf	delay_ms@count,c
  6203  0013F6  0EFF               	movlw	255
  6204  0013F8  2018               	addwfc	??_delay_ms+1,w,c
  6205  0013FA  6E1A               	movwf	delay_ms@count+1,c
  6206                           
  6207                           ;ST7735_TFT.c: 107: T3CON = 0xb8;
  6208  0013FC  0EB8               	movlw	184
  6209  0013FE  6EB1               	movwf	4017,c	;volatile
  6210                           
  6211                           ;ST7735_TFT.c: 109: TMR0L = count & 0x00ff;
  6212  001400  C019  FFD6         	movff	delay_ms@count,4054	;volatile
  6213                           
  6214                           ;ST7735_TFT.c: 110: TMR0H = count >> 8;
  6215  001404  501A               	movf	delay_ms@count+1,w,c
  6216  001406  6ED7               	movwf	4055,c	;volatile
  6217                           
  6218                           ;ST7735_TFT.c: 112: PIR2bits.TMR3IF = 0;
  6219  001408  92A1               	bcf	4001,1,c	;volatile
  6220                           
  6221                           ;ST7735_TFT.c: 113: T3CONbits.TMR3ON = 1;
  6222  00140A  80B1               	bsf	4017,0,c	;volatile
  6223                           
  6224                           ;ST7735_TFT.c: 115: while (PIR2bits.TMR3IF == 0);
  6225  00140C  D000               	goto	l113
  6226  00140E                     l113:
  6227  00140E  A2A1               	btfss	4001,1,c	;volatile
  6228  001410  D7FE               	goto	l113
  6229                           
  6230                           ;ST7735_TFT.c: 116: T3CONbits.TMR3ON = 0;
  6231  001412  90B1               	bcf	4017,0,c	;volatile
  6232  001414  0012               	return		;funcret
  6233  001416                     __end_of_delay_ms:
  6234                           	opt stack 0
  6235                           tblptru	equ	0xFF8
  6236                           tblptrh	equ	0xFF7
  6237                           tblptrl	equ	0xFF6
  6238                           tablat	equ	0xFF5
  6239                           prodh	equ	0xFF4
  6240                           prodl	equ	0xFF3
  6241                           intcon2	equ	0xFF1
  6242                           postinc0	equ	0xFEE
  6243                           wreg	equ	0xFE8
  6244                           postdec1	equ	0xFE5
  6245                           fsr1l	equ	0xFE1
  6246                           indf2	equ	0xFDF
  6247                           postinc2	equ	0xFDE
  6248                           fsr2h	equ	0xFDA
  6249                           fsr2l	equ	0xFD9
  6250                           status	equ	0xFD8
  6251                           
  6252 ;; *************** function ___wmul *****************
  6253 ;; Defined at:
  6254 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  multiplier      2   14[COMRAM] unsigned int 
  6257 ;;  multiplicand    2   16[COMRAM] unsigned int 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  product         2   18[COMRAM] unsigned int 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  2   14[COMRAM] unsigned int 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0, prodl, prodh
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;Total ram usage:        6 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    2
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_delay_ms
  6280 ;;		_drawChar
  6281 ;;		_update_LCD_misc
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text28
  6286  00164E                     __ptext28:
  6287                           	opt stack 0
  6288  00164E                     ___wmul:
  6289                           	opt stack 25
  6290                           
  6291                           ;incstack = 0
  6292  00164E  500F               	movf	___wmul@multiplier,w,c
  6293  001650  0211               	mulwf	___wmul@multiplicand,c
  6294  001652  CFF3 F013          	movff	prodl,___wmul@product
  6295  001656  CFF4 F014          	movff	prodh,___wmul@product+1
  6296  00165A  500F               	movf	___wmul@multiplier,w,c
  6297  00165C  0212               	mulwf	___wmul@multiplicand+1,c
  6298  00165E  50F3               	movf	prodl,w,c
  6299  001660  2614               	addwf	___wmul@product+1,f,c
  6300  001662  5010               	movf	___wmul@multiplier+1,w,c
  6301  001664  0211               	mulwf	___wmul@multiplicand,c
  6302  001666  50F3               	movf	prodl,w,c
  6303  001668  2614               	addwf	___wmul@product+1,f,c
  6304  00166A  C013  F00F         	movff	___wmul@product,?___wmul
  6305  00166E  C014  F010         	movff	___wmul@product+1,?___wmul+1
  6306  001672  D000               	goto	l567
  6307  001674                     l567:
  6308  001674  0012               	return		;funcret
  6309  001676                     __end_of___wmul:
  6310                           	opt stack 0
  6311                           tblptru	equ	0xFF8
  6312                           tblptrh	equ	0xFF7
  6313                           tblptrl	equ	0xFF6
  6314                           tablat	equ	0xFF5
  6315                           prodh	equ	0xFF4
  6316                           prodl	equ	0xFF3
  6317                           intcon2	equ	0xFF1
  6318                           postinc0	equ	0xFEE
  6319                           wreg	equ	0xFE8
  6320                           postdec1	equ	0xFE5
  6321                           fsr1l	equ	0xFE1
  6322                           indf2	equ	0xFDF
  6323                           postinc2	equ	0xFDE
  6324                           fsr2h	equ	0xFDA
  6325                           fsr2l	equ	0xFD9
  6326                           status	equ	0xFD8
  6327                           
  6328 ;; *************** function _Do_Init *****************
  6329 ;; Defined at:
  6330 ;;		line 334 in file "Lab9test.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;		None
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;		None
  6335 ;; Return value:  Size  Location     Type
  6336 ;;		None               void
  6337 ;; Registers used:
  6338 ;;		wreg, status,2, cstack
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;Total ram usage:        0 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:    4
  6351 ;; This function calls:
  6352 ;;		_Init_ADC
  6353 ;;		_init_IO
  6354 ;;		_init_UART
  6355 ;; This function is called by:
  6356 ;;		_main
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text29
  6361  001624                     __ptext29:
  6362                           	opt stack 0
  6363  001624                     _Do_Init:
  6364                           	opt stack 26
  6365                           
  6366                           ;Lab9test.c: 336: init_UART();
  6367                           
  6368                           ;incstack = 0
  6369  001624  EC70  F00B         	call	_init_UART	;wreg free
  6370                           
  6371                           ;Lab9test.c: 337: Init_ADC();
  6372  001628  ECAC  F00B         	call	_Init_ADC	;wreg free
  6373                           
  6374                           ;Lab9test.c: 339: init_IO();
  6375  00162C  EC5B  F00B         	call	_init_IO	;wreg free
  6376                           
  6377                           ;Lab9test.c: 340: OSCCON=0x70;
  6378  001630  0E70               	movlw	112
  6379  001632  6ED3               	movwf	4051,c	;volatile
  6380                           
  6381                           ;Lab9test.c: 342: TRISB = 0x07;
  6382  001634  0E07               	movlw	7
  6383  001636  6E93               	movwf	3987,c	;volatile
  6384                           
  6385                           ;Lab9test.c: 343: INTCONbits.INT0IF = 0;
  6386  001638  92F2               	bcf	intcon,1,c	;volatile
  6387                           
  6388                           ;Lab9test.c: 344: INTCON3bits.INT1IF = 0;
  6389  00163A  90F0               	bcf	intcon3,0,c	;volatile
  6390                           
  6391                           ;Lab9test.c: 345: INTCON3bits.INT2IF = 0;
  6392  00163C  92F0               	bcf	intcon3,1,c	;volatile
  6393                           
  6394                           ;Lab9test.c: 347: INTCON2bits.INTEDG0 = 0;
  6395  00163E  9CF1               	bcf	intcon2,6,c	;volatile
  6396                           
  6397                           ;Lab9test.c: 348: INTCON2bits.INTEDG1 = 0;
  6398  001640  9AF1               	bcf	intcon2,5,c	;volatile
  6399                           
  6400                           ;Lab9test.c: 349: INTCON2bits.INTEDG2 = 0;
  6401  001642  98F1               	bcf	intcon2,4,c	;volatile
  6402                           
  6403                           ;Lab9test.c: 351: INTCONbits.INT0IE = 1;
  6404  001644  88F2               	bsf	intcon,4,c	;volatile
  6405                           
  6406                           ;Lab9test.c: 352: INTCON3bits.INT1IE = 1;
  6407  001646  86F0               	bsf	intcon3,3,c	;volatile
  6408                           
  6409                           ;Lab9test.c: 353: INTCON3bits.INT2IE = 1;
  6410  001648  88F0               	bsf	intcon3,4,c	;volatile
  6411                           
  6412                           ;Lab9test.c: 355: INTCONbits.GIE = 1;
  6413  00164A  8EF2               	bsf	intcon,7,c	;volatile
  6414  00164C  0012               	return		;funcret
  6415  00164E                     __end_of_Do_Init:
  6416                           	opt stack 0
  6417                           tblptru	equ	0xFF8
  6418                           tblptrh	equ	0xFF7
  6419                           tblptrl	equ	0xFF6
  6420                           tablat	equ	0xFF5
  6421                           prodh	equ	0xFF4
  6422                           prodl	equ	0xFF3
  6423                           intcon	equ	0xFF2
  6424                           intcon2	equ	0xFF1
  6425                           intcon3	equ	0xFF0
  6426                           postinc0	equ	0xFEE
  6427                           wreg	equ	0xFE8
  6428                           postdec1	equ	0xFE5
  6429                           fsr1l	equ	0xFE1
  6430                           indf2	equ	0xFDF
  6431                           postinc2	equ	0xFDE
  6432                           fsr2h	equ	0xFDA
  6433                           fsr2l	equ	0xFD9
  6434                           status	equ	0xFD8
  6435                           
  6436 ;; *************** function _init_UART *****************
  6437 ;; Defined at:
  6438 ;;		line 251 in file "Lab9test.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;		None               void
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    3
  6459 ;; This function calls:
  6460 ;;		_OpenUSART
  6461 ;; This function is called by:
  6462 ;;		_Do_Init
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text30
  6467  0016E0                     __ptext30:
  6468                           	opt stack 0
  6469  0016E0                     _init_UART:
  6470                           	opt stack 26
  6471                           
  6472                           ;Lab9test.c: 253: OpenUSART (0b01111111 & 0b10111111 &
  6473                           ;Lab9test.c: 254: 0b11111110 & 0b11111101 & 0b11111111 &
  6474                           ;Lab9test.c: 255: 0b11111111, 25);
  6475                           
  6476                           ;incstack = 0
  6477  0016E0  0E00               	movlw	0
  6478  0016E2  6E10               	movwf	OpenUSART@spbrg+1,c
  6479  0016E4  0E19               	movlw	25
  6480  0016E6  6E0F               	movwf	OpenUSART@spbrg,c
  6481  0016E8  0E3C               	movlw	60
  6482  0016EA  EC15  F009         	call	_OpenUSART
  6483                           
  6484                           ;Lab9test.c: 256: OSCCON = 0x60;
  6485  0016EE  0E60               	movlw	96
  6486  0016F0  6ED3               	movwf	4051,c	;volatile
  6487  0016F2  0012               	return		;funcret
  6488  0016F4                     __end_of_init_UART:
  6489                           	opt stack 0
  6490                           tblptru	equ	0xFF8
  6491                           tblptrh	equ	0xFF7
  6492                           tblptrl	equ	0xFF6
  6493                           tablat	equ	0xFF5
  6494                           prodh	equ	0xFF4
  6495                           prodl	equ	0xFF3
  6496                           intcon	equ	0xFF2
  6497                           intcon2	equ	0xFF1
  6498                           intcon3	equ	0xFF0
  6499                           postinc0	equ	0xFEE
  6500                           wreg	equ	0xFE8
  6501                           postdec1	equ	0xFE5
  6502                           fsr1l	equ	0xFE1
  6503                           indf2	equ	0xFDF
  6504                           postinc2	equ	0xFDE
  6505                           fsr2h	equ	0xFDA
  6506                           fsr2l	equ	0xFD9
  6507                           status	equ	0xFD8
  6508                           
  6509 ;; *************** function _OpenUSART *****************
  6510 ;; Defined at:
  6511 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  config          1    wreg     unsigned char 
  6514 ;;  spbrg           2   14[COMRAM] unsigned int 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  config          1   16[COMRAM] unsigned char 
  6517 ;; Return value:  Size  Location     Type
  6518 ;;		None               void
  6519 ;; Registers used:
  6520 ;;		wreg, status,2
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;Total ram usage:        3 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; Hardware stack levels required when called:    2
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_init_UART
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text31
  6541  00122A                     __ptext31:
  6542                           	opt stack 0
  6543  00122A                     _OpenUSART:
  6544                           	opt stack 26
  6545                           
  6546                           ;incstack = 0
  6547                           ;OpenUSART@config stored from wreg
  6548  00122A  6E11               	movwf	OpenUSART@config,c
  6549  00122C  0E00               	movlw	0
  6550  00122E  6EAC               	movwf	4012,c	;volatile
  6551  001230  0E00               	movlw	0
  6552  001232  6EAB               	movwf	4011,c	;volatile
  6553  001234  A011               	btfss	OpenUSART@config,0,c
  6554  001236  D002               	goto	l2752
  6555  001238  88AC               	bsf	4012,4,c	;volatile
  6556  00123A  D000               	goto	l2752
  6557  00123C                     l2752:
  6558  00123C  A211               	btfss	OpenUSART@config,1,c
  6559  00123E  D003               	goto	l2756
  6560  001240  8CAC               	bsf	4012,6,c	;volatile
  6561  001242  8CAB               	bsf	4011,6,c	;volatile
  6562  001244  D000               	goto	l2756
  6563  001246                     l2756:
  6564  001246  A411               	btfss	OpenUSART@config,2,c
  6565  001248  D002               	goto	l2760
  6566  00124A  8EAC               	bsf	4012,7,c	;volatile
  6567  00124C  D000               	goto	l2760
  6568  00124E                     l2760:
  6569  00124E  A611               	btfss	OpenUSART@config,3,c
  6570  001250  D002               	goto	l555
  6571  001252  88AB               	bsf	4011,4,c	;volatile
  6572  001254  D002               	goto	l2764
  6573  001256                     l555:
  6574  001256  8AAB               	bsf	4011,5,c	;volatile
  6575  001258  D000               	goto	l2764
  6576  00125A                     l2764:
  6577  00125A  B811               	btfsc	OpenUSART@config,4,c
  6578  00125C  84AC               	bsf	4012,2,c	;volatile
  6579  00125E  989E               	bcf	3998,4,c	;volatile
  6580  001260  AA11               	btfss	OpenUSART@config,5,c
  6581  001262  D002               	goto	l2772
  6582  001264  86AB               	bsf	4011,3,c	;volatile
  6583  001266  D000               	goto	l2772
  6584  001268                     l2772:
  6585  001268  AC11               	btfss	OpenUSART@config,6,c
  6586  00126A  D002               	goto	l559
  6587  00126C  8A9D               	bsf	3997,5,c	;volatile
  6588  00126E  D001               	goto	l560
  6589  001270                     l559:
  6590  001270  9A9D               	bcf	3997,5,c	;volatile
  6591  001272                     l560:
  6592  001272  9A9E               	bcf	3998,5,c	;volatile
  6593  001274  AE11               	btfss	OpenUSART@config,7,c
  6594  001276  D002               	goto	l561
  6595  001278  889D               	bsf	3997,4,c	;volatile
  6596  00127A  D001               	goto	l562
  6597  00127C                     l561:
  6598  00127C  989D               	bcf	3997,4,c	;volatile
  6599  00127E                     l562:
  6600  00127E  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  6601  001282  5010               	movf	OpenUSART@spbrg+1,w,c
  6602  001284  6EB0               	movwf	4016,c	;volatile
  6603  001286  8AAC               	bsf	4012,5,c	;volatile
  6604  001288  8EAB               	bsf	4011,7,c	;volatile
  6605  00128A  9C94               	bcf	3988,6,c	;volatile
  6606  00128C  8E94               	bsf	3988,7,c	;volatile
  6607  00128E  B8AC               	btfsc	4012,4,c	;volatile
  6608  001290  BEAC               	btfsc	4012,7,c	;volatile
  6609  001292  D002               	goto	l564
  6610  001294  8C94               	bsf	3988,6,c	;volatile
  6611  001296  D000               	goto	l564
  6612  001298                     l564:
  6613  001298  0012               	return		;funcret
  6614  00129A                     __end_of_OpenUSART:
  6615                           	opt stack 0
  6616                           tblptru	equ	0xFF8
  6617                           tblptrh	equ	0xFF7
  6618                           tblptrl	equ	0xFF6
  6619                           tablat	equ	0xFF5
  6620                           prodh	equ	0xFF4
  6621                           prodl	equ	0xFF3
  6622                           intcon	equ	0xFF2
  6623                           intcon2	equ	0xFF1
  6624                           intcon3	equ	0xFF0
  6625                           postinc0	equ	0xFEE
  6626                           wreg	equ	0xFE8
  6627                           postdec1	equ	0xFE5
  6628                           fsr1l	equ	0xFE1
  6629                           indf2	equ	0xFDF
  6630                           postinc2	equ	0xFDE
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function _init_IO *****************
  6636 ;; Defined at:
  6637 ;;		line 320 in file "Lab9test.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;		None               void
  6644 ;; Registers used:
  6645 ;;		wreg, status,2
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;Total ram usage:        0 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    2
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		_Do_Init
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text32
  6666  0016B6                     __ptext32:
  6667                           	opt stack 0
  6668  0016B6                     _init_IO:
  6669                           	opt stack 27
  6670                           
  6671                           ;Lab9test.c: 321: TRISA = 0x21;
  6672                           
  6673                           ;incstack = 0
  6674  0016B6  0E21               	movlw	33
  6675  0016B8  6E92               	movwf	3986,c	;volatile
  6676                           
  6677                           ;Lab9test.c: 322: TRISB = 0x07;
  6678  0016BA  0E07               	movlw	7
  6679  0016BC  6E93               	movwf	3987,c	;volatile
  6680                           
  6681                           ;Lab9test.c: 323: TRISC = 0x07;
  6682  0016BE  0E07               	movlw	7
  6683  0016C0  6E94               	movwf	3988,c	;volatile
  6684                           
  6685                           ;Lab9test.c: 324: TRISD = 0x00;
  6686  0016C2  0E00               	movlw	0
  6687  0016C4  6E95               	movwf	3989,c	;volatile
  6688                           
  6689                           ;Lab9test.c: 325: TRISE = 0x00;
  6690  0016C6  0E00               	movlw	0
  6691  0016C8  6E96               	movwf	3990,c	;volatile
  6692  0016CA  0012               	return		;funcret
  6693  0016CC                     __end_of_init_IO:
  6694                           	opt stack 0
  6695                           tblptru	equ	0xFF8
  6696                           tblptrh	equ	0xFF7
  6697                           tblptrl	equ	0xFF6
  6698                           tablat	equ	0xFF5
  6699                           prodh	equ	0xFF4
  6700                           prodl	equ	0xFF3
  6701                           intcon	equ	0xFF2
  6702                           intcon2	equ	0xFF1
  6703                           intcon3	equ	0xFF0
  6704                           postinc0	equ	0xFEE
  6705                           wreg	equ	0xFE8
  6706                           postdec1	equ	0xFE5
  6707                           fsr1l	equ	0xFE1
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           fsr2h	equ	0xFDA
  6711                           fsr2l	equ	0xFD9
  6712                           status	equ	0xFD8
  6713                           
  6714 ;; *************** function _Init_ADC *****************
  6715 ;; Defined at:
  6716 ;;		line 328 in file "Lab9test.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;		None
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;		None
  6721 ;; Return value:  Size  Location     Type
  6722 ;;		None               void
  6723 ;; Registers used:
  6724 ;;		wreg, status,2
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;Total ram usage:        0 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    2
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_Do_Init
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text33
  6745  001758                     __ptext33:
  6746                           	opt stack 0
  6747  001758                     _Init_ADC:
  6748                           	opt stack 27
  6749                           
  6750                           ;Lab9test.c: 330: ADCON1=0x0E ;
  6751                           
  6752                           ;incstack = 0
  6753  001758  0E0E               	movlw	14
  6754  00175A  6EC1               	movwf	4033,c	;volatile
  6755                           
  6756                           ;Lab9test.c: 331: ADCON2=0xA9;
  6757  00175C  0EA9               	movlw	169
  6758  00175E  6EC0               	movwf	4032,c	;volatile
  6759  001760  0012               	return		;funcret
  6760  001762                     __end_of_Init_ADC:
  6761                           	opt stack 0
  6762                           tblptru	equ	0xFF8
  6763                           tblptrh	equ	0xFF7
  6764                           tblptrl	equ	0xFF6
  6765                           tablat	equ	0xFF5
  6766                           prodh	equ	0xFF4
  6767                           prodl	equ	0xFF3
  6768                           intcon	equ	0xFF2
  6769                           intcon2	equ	0xFF1
  6770                           intcon3	equ	0xFF0
  6771                           postinc0	equ	0xFEE
  6772                           wreg	equ	0xFE8
  6773                           postdec1	equ	0xFE5
  6774                           fsr1l	equ	0xFE1
  6775                           indf2	equ	0xFDF
  6776                           postinc2	equ	0xFDE
  6777                           fsr2h	equ	0xFDA
  6778                           fsr2l	equ	0xFD9
  6779                           status	equ	0xFD8
  6780                           
  6781 ;; *************** function _chkisr *****************
  6782 ;; Defined at:
  6783 ;;		line 279 in file "Lab9test.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;		None               void
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;Total ram usage:       14 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    1
  6804 ;; This function calls:
  6805 ;;		_INT0_ISR
  6806 ;;		_INT1_ISR
  6807 ;;		_INT2_ISR
  6808 ;; This function is called by:
  6809 ;;		Interrupt level 2
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	intcode
  6814  000008                     __pintcode:
  6815                           	opt stack 0
  6816  000008                     _chkisr:
  6817                           	opt stack 21
  6818                           
  6819                           ;incstack = 0
  6820  000008  CFFA F001          	movff	pclath,??_chkisr
  6821  00000C  CFFB F002          	movff	pclatu,??_chkisr+1
  6822  000010  CFE9 F003          	movff	fsr0l,??_chkisr+2
  6823  000014  EDD2  F008         	call	int_func,f	;refresh shadow registers
  6824                           pclatu	equ	0xFFB
  6825                           pclath	equ	0xFFA
  6826                           tblptru	equ	0xFF8
  6827                           tblptrh	equ	0xFF7
  6828                           tblptrl	equ	0xFF6
  6829                           tablat	equ	0xFF5
  6830                           prodh	equ	0xFF4
  6831                           prodl	equ	0xFF3
  6832                           intcon	equ	0xFF2
  6833                           intcon2	equ	0xFF1
  6834                           intcon3	equ	0xFF0
  6835                           postinc0	equ	0xFEE
  6836                           fsr0l	equ	0xFE9
  6837                           wreg	equ	0xFE8
  6838                           postdec1	equ	0xFE5
  6839                           fsr1l	equ	0xFE1
  6840                           indf2	equ	0xFDF
  6841                           postinc2	equ	0xFDE
  6842                           fsr2h	equ	0xFDA
  6843                           fsr2l	equ	0xFD9
  6844                           status	equ	0xFD8
  6845                           
  6846                           	psect	intcode_body
  6847  0011A4                     __pintcode_body:
  6848                           	opt stack 21
  6849  0011A4                     int_func:
  6850                           	opt stack 21
  6851  0011A4  0006               	pop		; remove dummy address from shadow register refresh
  6852  0011A6  CFEA F004          	movff	fsr0h,??_chkisr+3
  6853  0011AA  CFE1 F005          	movff	fsr1l,??_chkisr+4
  6854  0011AE  CFE2 F006          	movff	fsr1h,??_chkisr+5
  6855  0011B2  CFD9 F007          	movff	fsr2l,??_chkisr+6
  6856  0011B6  CFDA F008          	movff	fsr2h,??_chkisr+7
  6857  0011BA  CFF3 F009          	movff	prodl,??_chkisr+8
  6858  0011BE  CFF4 F00A          	movff	prodh,??_chkisr+9
  6859  0011C2  CFF6 F00B          	movff	tblptrl,??_chkisr+10
  6860  0011C6  CFF7 F00C          	movff	tblptrh,??_chkisr+11
  6861  0011CA  CFF8 F00D          	movff	tblptru,??_chkisr+12
  6862  0011CE  CFF5 F00E          	movff	tablat,??_chkisr+13
  6863                           
  6864                           ;Lab9test.c: 281: if (INTCONbits.INT0IF == 1) INT0_ISR();
  6865  0011D2  A2F2               	btfss	intcon,1,c	;volatile
  6866  0011D4  D003               	goto	i2l2168
  6867  0011D6  ECA6  F00B         	call	_INT0_ISR	;wreg free
  6868  0011DA  D000               	goto	i2l2168
  6869  0011DC                     i2l2168:
  6870                           
  6871                           ;Lab9test.c: 283: if (INTCON3bits.INT1IF == 1) INT1_ISR();
  6872  0011DC  A0F0               	btfss	intcon3,0,c	;volatile
  6873  0011DE  D003               	goto	i2l2172
  6874  0011E0  ECA0  F00B         	call	_INT1_ISR	;wreg free
  6875  0011E4  D000               	goto	i2l2172
  6876  0011E6                     i2l2172:
  6877                           
  6878                           ;Lab9test.c: 284: if (INTCON3bits.INT2IF == 1) INT2_ISR();
  6879  0011E6  A2F0               	btfss	intcon3,1,c	;volatile
  6880  0011E8  D003               	goto	i2l376
  6881  0011EA  EC9A  F00B         	call	_INT2_ISR	;wreg free
  6882  0011EE  D000               	goto	i2l376
  6883  0011F0                     i2l376:
  6884  0011F0  C00E  FFF5         	movff	??_chkisr+13,tablat
  6885  0011F4  C00D  FFF8         	movff	??_chkisr+12,tblptru
  6886  0011F8  C00C  FFF7         	movff	??_chkisr+11,tblptrh
  6887  0011FC  C00B  FFF6         	movff	??_chkisr+10,tblptrl
  6888  001200  C00A  FFF4         	movff	??_chkisr+9,prodh
  6889  001204  C009  FFF3         	movff	??_chkisr+8,prodl
  6890  001208  C008  FFDA         	movff	??_chkisr+7,fsr2h
  6891  00120C  C007  FFD9         	movff	??_chkisr+6,fsr2l
  6892  001210  C006  FFE2         	movff	??_chkisr+5,fsr1h
  6893  001214  C005  FFE1         	movff	??_chkisr+4,fsr1l
  6894  001218  C004  FFEA         	movff	??_chkisr+3,fsr0h
  6895  00121C  C003  FFE9         	movff	??_chkisr+2,fsr0l
  6896  001220  C002  FFFB         	movff	??_chkisr+1,pclatu
  6897  001224  C001  FFFA         	movff	??_chkisr,pclath
  6898  001228  0011               	retfie		f
  6899  00122A                     __end_of_chkisr:
  6900                           	opt stack 0
  6901                           pclatu	equ	0xFFB
  6902                           pclath	equ	0xFFA
  6903                           tblptru	equ	0xFF8
  6904                           tblptrh	equ	0xFF7
  6905                           tblptrl	equ	0xFF6
  6906                           tablat	equ	0xFF5
  6907                           prodh	equ	0xFF4
  6908                           prodl	equ	0xFF3
  6909                           intcon	equ	0xFF2
  6910                           intcon2	equ	0xFF1
  6911                           intcon3	equ	0xFF0
  6912                           postinc0	equ	0xFEE
  6913                           fsr0h	equ	0xFEA
  6914                           fsr0l	equ	0xFE9
  6915                           wreg	equ	0xFE8
  6916                           postdec1	equ	0xFE5
  6917                           fsr1h	equ	0xFE2
  6918                           fsr1l	equ	0xFE1
  6919                           indf2	equ	0xFDF
  6920                           postinc2	equ	0xFDE
  6921                           fsr2h	equ	0xFDA
  6922                           fsr2l	equ	0xFD9
  6923                           status	equ	0xFD8
  6924                           
  6925 ;; *************** function _INT2_ISR *****************
  6926 ;; Defined at:
  6927 ;;		line 274 in file "Lab9test.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;		None               void
  6934 ;; Registers used:
  6935 ;;		wreg, status,2
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;Total ram usage:        0 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_chkisr
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text35
  6955  001734                     __ptext35:
  6956                           	opt stack 0
  6957  001734                     _INT2_ISR:
  6958                           	opt stack 21
  6959                           
  6960                           ;Lab9test.c: 276: INTCON3bits.INT2IF=0;
  6961                           
  6962                           ;incstack = 0
  6963  001734  92F0               	bcf	intcon3,1,c	;volatile
  6964                           
  6965                           ;Lab9test.c: 277: INT2_flag = 1;
  6966  001736  0E00               	movlw	0
  6967  001738  6E61               	movwf	_INT2_flag+1,c
  6968  00173A  0E01               	movlw	1
  6969  00173C  6E60               	movwf	_INT2_flag,c
  6970  00173E  0012               	return		;funcret
  6971  001740                     __end_of_INT2_ISR:
  6972                           	opt stack 0
  6973                           pclatu	equ	0xFFB
  6974                           pclath	equ	0xFFA
  6975                           tblptru	equ	0xFF8
  6976                           tblptrh	equ	0xFF7
  6977                           tblptrl	equ	0xFF6
  6978                           tablat	equ	0xFF5
  6979                           prodh	equ	0xFF4
  6980                           prodl	equ	0xFF3
  6981                           intcon	equ	0xFF2
  6982                           intcon2	equ	0xFF1
  6983                           intcon3	equ	0xFF0
  6984                           postinc0	equ	0xFEE
  6985                           fsr0h	equ	0xFEA
  6986                           fsr0l	equ	0xFE9
  6987                           wreg	equ	0xFE8
  6988                           postdec1	equ	0xFE5
  6989                           fsr1h	equ	0xFE2
  6990                           fsr1l	equ	0xFE1
  6991                           indf2	equ	0xFDF
  6992                           postinc2	equ	0xFDE
  6993                           fsr2h	equ	0xFDA
  6994                           fsr2l	equ	0xFD9
  6995                           status	equ	0xFD8
  6996                           
  6997 ;; *************** function _INT1_ISR *****************
  6998 ;; Defined at:
  6999 ;;		line 269 in file "Lab9test.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;		None               void
  7006 ;; Registers used:
  7007 ;;		wreg, status,2
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;Total ram usage:        0 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; This function calls:
  7020 ;;		Nothing
  7021 ;; This function is called by:
  7022 ;;		_chkisr
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           	psect	text36
  7027  001740                     __ptext36:
  7028                           	opt stack 0
  7029  001740                     _INT1_ISR:
  7030                           	opt stack 21
  7031                           
  7032                           ;Lab9test.c: 271: INTCON3bits.INT1IF=0;
  7033                           
  7034                           ;incstack = 0
  7035  001740  90F0               	bcf	intcon3,0,c	;volatile
  7036                           
  7037                           ;Lab9test.c: 272: INT1_flag = 1;
  7038  001742  0E00               	movlw	0
  7039  001744  6E5F               	movwf	_INT1_flag+1,c
  7040  001746  0E01               	movlw	1
  7041  001748  6E5E               	movwf	_INT1_flag,c
  7042  00174A  0012               	return		;funcret
  7043  00174C                     __end_of_INT1_ISR:
  7044                           	opt stack 0
  7045                           pclatu	equ	0xFFB
  7046                           pclath	equ	0xFFA
  7047                           tblptru	equ	0xFF8
  7048                           tblptrh	equ	0xFF7
  7049                           tblptrl	equ	0xFF6
  7050                           tablat	equ	0xFF5
  7051                           prodh	equ	0xFF4
  7052                           prodl	equ	0xFF3
  7053                           intcon	equ	0xFF2
  7054                           intcon2	equ	0xFF1
  7055                           intcon3	equ	0xFF0
  7056                           postinc0	equ	0xFEE
  7057                           fsr0h	equ	0xFEA
  7058                           fsr0l	equ	0xFE9
  7059                           wreg	equ	0xFE8
  7060                           postdec1	equ	0xFE5
  7061                           fsr1h	equ	0xFE2
  7062                           fsr1l	equ	0xFE1
  7063                           indf2	equ	0xFDF
  7064                           postinc2	equ	0xFDE
  7065                           fsr2h	equ	0xFDA
  7066                           fsr2l	equ	0xFD9
  7067                           status	equ	0xFD8
  7068                           
  7069 ;; *************** function _INT0_ISR *****************
  7070 ;; Defined at:
  7071 ;;		line 264 in file "Lab9test.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;		None               void
  7078 ;; Registers used:
  7079 ;;		wreg, status,2
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_chkisr
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text37
  7099  00174C                     __ptext37:
  7100                           	opt stack 0
  7101  00174C                     _INT0_ISR:
  7102                           	opt stack 21
  7103                           
  7104                           ;Lab9test.c: 266: INTCONbits.INT0IF=0;
  7105                           
  7106                           ;incstack = 0
  7107  00174C  92F2               	bcf	intcon,1,c	;volatile
  7108                           
  7109                           ;Lab9test.c: 267: INT0_flag = 1;
  7110  00174E  0E00               	movlw	0
  7111  001750  6E5D               	movwf	_INT0_flag+1,c
  7112  001752  0E01               	movlw	1
  7113  001754  6E5C               	movwf	_INT0_flag,c
  7114  001756  0012               	return		;funcret
  7115  001758                     __end_of_INT0_ISR:
  7116                           	opt stack 0
  7117                           pclatu	equ	0xFFB
  7118                           pclath	equ	0xFFA
  7119                           tblptru	equ	0xFF8
  7120                           tblptrh	equ	0xFF7
  7121                           tblptrl	equ	0xFF6
  7122                           tablat	equ	0xFF5
  7123                           prodh	equ	0xFF4
  7124                           prodl	equ	0xFF3
  7125                           intcon	equ	0xFF2
  7126                           intcon2	equ	0xFF1
  7127                           intcon3	equ	0xFF0
  7128                           postinc0	equ	0xFEE
  7129                           fsr0h	equ	0xFEA
  7130                           fsr0l	equ	0xFE9
  7131                           wreg	equ	0xFE8
  7132                           postdec1	equ	0xFE5
  7133                           fsr1h	equ	0xFE2
  7134                           fsr1l	equ	0xFE1
  7135                           indf2	equ	0xFDF
  7136                           postinc2	equ	0xFDE
  7137                           fsr2h	equ	0xFDA
  7138                           fsr2l	equ	0xFD9
  7139                           status	equ	0xFD8
  7140                           pclatu	equ	0xFFB
  7141                           pclath	equ	0xFFA
  7142                           tblptru	equ	0xFF8
  7143                           tblptrh	equ	0xFF7
  7144                           tblptrl	equ	0xFF6
  7145                           tablat	equ	0xFF5
  7146                           prodh	equ	0xFF4
  7147                           prodl	equ	0xFF3
  7148                           intcon	equ	0xFF2
  7149                           intcon2	equ	0xFF1
  7150                           intcon3	equ	0xFF0
  7151                           postinc0	equ	0xFEE
  7152                           fsr0h	equ	0xFEA
  7153                           fsr0l	equ	0xFE9
  7154                           wreg	equ	0xFE8
  7155                           postdec1	equ	0xFE5
  7156                           fsr1h	equ	0xFE2
  7157                           fsr1l	equ	0xFE1
  7158                           indf2	equ	0xFDF
  7159                           postinc2	equ	0xFDE
  7160                           fsr2h	equ	0xFDA
  7161                           fsr2l	equ	0xFD9
  7162                           status	equ	0xFD8
  7163                           
  7164                           	psect	rparam
  7165  0000                     pclatu	equ	0xFFB
  7166                           pclath	equ	0xFFA
  7167                           tblptru	equ	0xFF8
  7168                           tblptrh	equ	0xFF7
  7169                           tblptrl	equ	0xFF6
  7170                           tablat	equ	0xFF5
  7171                           prodh	equ	0xFF4
  7172                           prodl	equ	0xFF3
  7173                           intcon	equ	0xFF2
  7174                           intcon2	equ	0xFF1
  7175                           intcon3	equ	0xFF0
  7176                           postinc0	equ	0xFEE
  7177                           fsr0h	equ	0xFEA
  7178                           fsr0l	equ	0xFE9
  7179                           wreg	equ	0xFE8
  7180                           postdec1	equ	0xFE5
  7181                           fsr1h	equ	0xFE2
  7182                           fsr1l	equ	0xFE1
  7183                           indf2	equ	0xFDF
  7184                           postinc2	equ	0xFDE
  7185                           fsr2h	equ	0xFDA
  7186                           fsr2l	equ	0xFD9
  7187                           status	equ	0xFD8


Data Sizes:
    Strings     198
    Constant    475
    Data        35
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     56     111
    BANK0           128     15      53
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), SW_MODE_Txt(COMRAM[2]), SW_NSLT_Txt(COMRAM[2]), SW_NSPED_Txt(COMRAM[2]), 
		 -> SW_EWLT_Txt(COMRAM[2]), SW_EWPED_Txt(COMRAM[2]), PED_NS_Count(COMRAM[3]), PED_EW_Count(COMRAM[3]), 
		 -> NSLT_Count(COMRAM[3]), NS_Count(COMRAM[3]), EWLT_Count(COMRAM[3]), EW_Count(COMRAM[3]), 
		 -> FlashingS_Txt(COMRAM[2]), FlashingR_Txt(COMRAM[2]), Act_Mode_Txt(COMRAM[2]), buffer(BANK0[31]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), SW_MODE_Txt(COMRAM[2]), SW_NSLT_Txt(COMRAM[2]), SW_NSPED_Txt(COMRAM[2]), 
		 -> SW_EWLT_Txt(COMRAM[2]), SW_EWPED_Txt(COMRAM[2]), PED_NS_Count(COMRAM[3]), PED_EW_Count(COMRAM[3]), 
		 -> NSLT_Count(COMRAM[3]), NS_Count(COMRAM[3]), EWLT_Count(COMRAM[3]), EW_Count(COMRAM[3]), 
		 -> FlashingS_Txt(COMRAM[2]), FlashingR_Txt(COMRAM[2]), Act_Mode_Txt(COMRAM[2]), buffer(BANK0[31]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_12(CODE[21]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[7]), STR_8(CODE[12]), STR_7(CODE[7]), 
		 -> STR_6(CODE[10]), STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[6]), STR_1(CODE[22]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_15(CODE[31]), STR_14(CODE[31]), STR_13(CODE[31]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    txt	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), SW_MODE_Txt(COMRAM[2]), SW_NSLT_Txt(COMRAM[2]), SW_NSPED_Txt(COMRAM[2]), 
		 -> SW_EWLT_Txt(COMRAM[2]), SW_EWPED_Txt(COMRAM[2]), PED_NS_Count(COMRAM[3]), PED_EW_Count(COMRAM[3]), 
		 -> NSLT_Count(COMRAM[3]), NS_Count(COMRAM[3]), EWLT_Count(COMRAM[3]), EW_Count(COMRAM[3]), 
		 -> FlashingS_Txt(COMRAM[2]), FlashingR_Txt(COMRAM[2]), Act_Mode_Txt(COMRAM[2]), buffer(BANK0[31]), 


Critical Paths under _main in COMRAM

    _printf->_putch
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _fillCircle->_fillCircleHelper
    _fillCircleHelper->_drawFastVLine
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawRect->_drawFastHLine
    _drawRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawFastHLine->_setAddrWindow
    _drawCircle->_drawPixel
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _write_data->_spiwrite
    _write_command->_spiwrite
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul
    _init_UART->_OpenUSART

Critical Paths under _chkisr in COMRAM

    None.

Critical Paths under _main in BANK0

    _Initialize_Screen->_drawtext

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   65251
                            _Do_Init
                  _Initialize_Screen
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     220
                                             15 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Screen                                    0     0      0   64758
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                         _drawCircle
                           _drawRect
                           _drawtext
                         _fillCircle
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1559
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           2     0      2    2192
                                             33 COMRAM     2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (3) _fillRectangle                                       12     7      5    2096
                                             21 COMRAM    12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _fillCircle                                           8     0      8   12244
                                              0 BANK0      8     0      8
                      _drawFastVLine
                   _fillCircleHelper
 ---------------------------------------------------------------------------------
 (3) _fillCircleHelper                                    24    12     12    4703
                                             32 COMRAM    24    12     12
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (2) _drawtext                                            17     9      8   24551
                                             54 COMRAM     2     2      0
                                              0 BANK0     15     7      8
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     195
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _drawChar                                            11     4      7   10644
                                             43 COMRAM    11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (4) _fillRect                                            11     6      5    3876
                                             32 COMRAM    11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (2) _drawRect                                            11     1     10    6892
                                             32 COMRAM    11     1     10
                      _drawFastHLine
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (4) _drawFastVLine                                       11     7      4    3102
                                             21 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (3) _drawFastHLine                                       11     7      4    1932
                                             21 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _drawCircle                                          20    12      8   11424
                                             25 COMRAM    20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            4     1      3    4207
                                             21 COMRAM     4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (4) _setAddrWindow                                        4     1      3    1034
                                             17 COMRAM     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _TFT_GreenTab_Initialize                              0     0      0    4104
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                0     0      0    1922
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     130
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                0     0      0    1922
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _write_data                                           1     1      0      65
                                             16 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (5) _write_command                                        1     1      0      65
                                             16 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _spiwrite                                             2     2      0      34
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            0     0      0    1792
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2    1792
                                             20 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     752
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0     273
                           _Init_ADC
                            _init_IO
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _init_IO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _chkisr                                              14    14      0       0
                                              0 COMRAM    14    14      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (10) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Do_Init
     _Init_ADC
     _init_IO
     _init_UART
       _OpenUSART
   _Initialize_Screen
     _LCD_Reset
       _delay_ms
         ___wmul
     _TFT_GreenTab_Initialize
       _Rcmd1
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawCircle
       _drawPixel
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _write_data
           _spiwrite
     _drawRect
       _drawFastHLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
       _drawFastVLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _fillCircle
       _drawFastVLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
       _fillCircleHelper
         _drawFastVLine
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
     _fillScreen
       _fillRectangle
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _strcpy
   _printf
     _putch

 _chkisr (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      F      35       5       41.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     38      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      34        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Apr 05 19:38:44 2021

                     drawCircle@f 0028                       drawCircle@r 001E  
                     drawCircle@x 002A                       drawCircle@y 002C  
                     _SSPSTATbits 000FC7                      drawCircle@x0 001A  
                    drawCircle@y0 001C               ___wmul@multiplicand 0011  
                             l113 140E                               l123 16DA  
                             l230 1090                               l226 1092  
                             l227 0FFE                               l237 0924  
                             l173 111A                               l229 106E  
                             l167 15CC                               l271 11A2  
                             l191 0A3E                               l255 0BD4  
                             l189 0B64                               l198 0ABA  
                             l358 172A                               l560 1272  
                             l561 127C                               l562 127E  
                             l555 1256                               l564 1298  
                             l559 1270                               l567 1674  
                             _PR2 000FCB                               _dir 006D  
                             _nbr 0085                               _txt 0062  
                  drawFastHLine@w 0017                    drawFastHLine@x 0020  
                  drawFastHLine@y 0016                               wreg 000FE8  
                 ??_fillRectangle 001B                      __CFG_LVP$OFF 000000  
         _TFT_GreenTab_Initialize 15FA                      __CFG_WDT$OFF 000000  
                            l1124 152C                    drawFastVLine@h 0017  
                            l4100 0B60                    drawFastVLine@x 0020  
                  drawFastVLine@y 0016                              l3070 15E0  
                            l4106 14FA                              l4204 118A  
                            l4108 1500                              l4140 1072  
                            l4124 1036                              l3068 15D8  
                            l4206 1198                              l4062 0A3A  
                            l4054 0A20                              l4222 0CCA  
                            l4150 108C                              l4118 0FC8  
                            l4072 0A7A                              l4064 0A42  
                            l4144 107C                              l4136 1064  
                            l4074 0AAE                              l4058 0A2C  
                            l4234 0D1E                              l4092 0B30  
                            l4084 0ADC                              l4076 0AB2  
                            l4068 0A4A                              l4180 0C36  
                            l4164 0BBA                              l4190 112C  
                            l4094 0B58                              l4086 0B04  
                            l4246 0D98                              l4238 0D40  
                            l2910 1576                              l2760 124E  
                            l2752 123C                              l4248 0DA0  
                            l4184 0C88                              l2912 1580  
                            l4194 1164                              l2772 1268  
                            l2764 125A                              l2756 1246  
                            l4268 090A                              l3902 10A4  
                            l4296 09FA                              l3906 10DC  
                            l3916 1102                              l3918 1110  
                            l4750 12C4                              l3944 15AE  
                            l3952 146E                              l4744 12A6  
                            l3956 148A                              l4756 12E2  
                            STR_1 FF95                              STR_2 FFE4  
                            STR_3 FFEA                              STR_4 FFEE  
                            STR_5 FFFC                              STR_6 FFCC  
                            STR_7 FFDD                              STR_8 FFC0  
                            STR_9 FFD6                              u2600 0FF6  
                            u2370 10D2                              u2530 0B12  
                            u2610 102C                              u2720 115A  
                            u2750 0CF6                              _MODE 0083  
                            _RBPU 007F8F                              _TRMT 007D61  
                            _main 129A                              _font FD5D  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              _wrap 0039  
                            _volt 0080                   drawFastHLine@hi 001E  
                 drawFastHLine@lo 001F                              pclat 000FFA  
              __size_of_LCD_Reset 0012                              prodh 000FF4  
                            prodl 000FF3                              start 0018  
                 __end_of_Do_Init 164E                   ??_drawFastHLine 001A  
                 ??_drawFastVLine 001A                      ___param_bank 000010  
                    _Act_Mode_Txt 004C                  __end_of_INT0_ISR 1758  
                __end_of_INT1_ISR 174C                  __end_of_INT2_ISR 1740  
                 drawFastVLine@hi 001E                   drawFastVLine@lo 001F  
                     _SW_EWLT_Txt 0052                       _SW_MODE_Txt 0056  
                           ?_main 0001                   drawCircle@ddF_x 0024  
                           STR_10 FFF6                   drawCircle@ddF_y 0026  
                           STR_11 FFF2                             STR_12 FFAB  
                           STR_13 FF38                             STR_14 FF57  
                           STR_15 FF76                             STR_17 FFFA  
                           _T0CON 000FD5                             _T2CON 000FCA  
                           _T3CON 000FB1                             i2l376 11F0  
                 drawCircle@color 0020                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _Count 0064                             _Rcmd1 0DB6  
                           _Rcmd3 0EC6                       _SW_NSLT_Txt 0058  
                   drawRect@color 0029                   __end_of_init_IO 16CC  
                           _font2 FE5C             fillCircleHelper@ddF_x 002F  
           fillCircleHelper@ddF_y 0031             fillCircleHelper@delta 0029  
                           _putch 1726             fillCircleHelper@color 002B  
                  __CFG_BOREN$OFF 000000                             tablat 000FF5  
                           status 000FD8                   write_data@data_ 0011  
                 __initialization 14AE                      __end_of_main 1304  
                    __end_of_font FE5C                  __end_of_Init_ADC 1762  
                __end_of_Rcmd2red 156C                            ??_main 0039  
                   __activetblptr 000002                 __end_of_LCD_Reset 1706  
                    _SW_EWPED_Txt 0054         ??_TFT_GreenTab_Initialize 001B  
                          ?_Rcmd1 0001                            ?_Rcmd3 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _CCPR2L 000FBB  
                          ?_putch 0001                            i2l2172 11E6  
                          i2l2168 11DC                         ??_Do_Init 0012  
                          _OSCCON 000FD3                            _SPBRGH 000FB0  
                          _SSPBUF 000FC9                      _SW_NSPED_Txt 005A  
                __end_of_delay_ms 1416                  __end_of_fillRect 14AE  
                __end_of_drawChar 0B66                  __end_of_drawRect 136A  
              __size_of_OpenUSART 0070                            ___wmul 164E  
       __size_of_fillCircleHelper 0138                  __end_of_drawtext 0DB6  
                          _chkisr 0008                            _buffer 0087  
                          clear_0 14B4                            clear_1 14C0  
                          _printf 15CE                      drawtext@size 00AD  
                          _strcpy 156C                            _strlen 14F0  
                       ??_init_IO 000F                      __pdataCOMRAM 0039  
                    __mediumconst FD5C                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 000F                  __end_of_spiwrite 16E0  
                      __accesstop 0080           __end_of__initialization 14E6  
                       ?_INT0_ISR 0001                         ?_INT1_ISR 0001  
                       ?_INT2_ISR 0001                     ___rparam_used 000001  
                   __end_of_Rcmd1 0EC6                     __end_of_Rcmd3 0FB8  
                  __pcstackCOMRAM 0001                     __end_of_font2 FF38  
                   __end_of_putch 1734                    drawPixel@color 0017  
          __size_of_write_command 0010        fillCircleHelper@cornername 0027  
                         ??_Rcmd1 001B                           ??_Rcmd3 001B  
              __size_of_drawPixel 0030                 __end_of_OpenUSART 129A  
                         ??_putch 000F                        __pbssBANK0 0080  
                       ?_Init_ADC 0001                         ?_Rcmd2red 0001  
              __size_of_init_UART 0014                        ??_INT0_ISR 0001  
                      ??_INT1_ISR 0001                        ??_INT2_ISR 0001  
                 spiwrite@spidata 0010                __CFG_CCP2MX$PORTBE 000000  
                         ?___wmul 000F                           ?_chkisr 0001  
          __size_of_setAddrWindow 004E                           _CCP2CON 000FBA  
                      _fillCircle 136A                           ?_printf 0010  
                         ?_strcpy 000F                           ?_strlen 000F  
                      _fillScreen 169A                        _drawCircle 0862  
                       ?_delay_ms 0015                         ?_fillRect 0021  
                       ?_drawChar 002C                           _SSPCON1 000FC6  
                       ?_drawRect 0021                           _SSPSTAT 000FC7  
           __end_of_fillRectangle 1094                         ?_drawtext 00A6  
                         _SW_EWLT 0066                           _SW_MODE 0068  
                      ??_Init_ADC 000F                           _Do_Init 1624  
                         _SW_NSLT 0069                        ??_Rcmd2red 0012  
                   _write_command 1716                           __Hparam 0000  
                         __Lparam 0000             __end_of_drawFastHLine 11A4  
               __end_of_drawPixel 15CE             __end_of_drawFastVLine 111C  
                _fillCircleHelper 0B66                   __size_of___wmul 0028  
                 __size_of_chkisr 1222                         ?_spiwrite 0001  
                         __pcinit 14AE                           __ramtop 1000  
                         __ptext0 129A                           __ptext1 15CE  
                         __ptext2 1726                           __ptext3 001C  
                         __ptext4 156C                           __ptext5 169A  
                         __ptext6 0FB8                           __ptext7 136A  
                         __ptext8 0B66                           __ptext9 0C9E  
                 __size_of_printf 002C                 __end_of_init_UART 16F4  
                       _T0CONbits 000FD5                   __size_of_strcpy 0032  
                 __size_of_strlen 003E                           _init_IO 16B6  
                       _T3CONbits 000FB1                        ??_delay_ms 0017  
                   drawtext@_text 00A7                     drawtext@color 00A9  
                      ??_fillRect 0026                        ??_drawChar 0033  
                       _LCD_Reset 16F4                        ??_drawRect 002B  
                   _setAddrWindow 1416                    __pintcode_body 11A4  
              drawFastHLine@color 0018                        delay_ms@ms 0015  
            end_of_initialization 14E6                         _INT0_flag 005C  
                       _INT1_flag 005E                         _INT2_flag 0060  
                      ??_drawtext 0037                    ?_write_command 0001  
                   __Lmediumconst FD5C                           int_func 11A4  
                       _PED_Count 0065                         _RCSTAbits 000FAB  
                         printf@c 0014                           printf@f 0010  
                         postdec1 000FE5                           postinc0 000FEE  
                         postinc2 000FDE                        ??_spiwrite 000F  
                         strlen@s 000F                   fillCircle@color 00AC  
                     ?_fillCircle 00A6                         _PORTAbits 000F80  
                drawtext@cursor_x 00B4                  drawtext@cursor_y 00B3  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
                       _PORTDbits 000F83                         _PORTEbits 000F84  
                     ?_fillScreen 0022                       ?_drawCircle 001A  
                      drawChar@bg 0030                         _TRISCbits 000F94  
                  ?_setAddrWindow 0012                        ?_LCD_Reset 0001  
                drawtext@textsize 00AF                        drawPixel@x 0019  
                      drawPixel@y 0016                         _TXSTAbits 000FAC  
               __size_of_INT0_ISR 000C                 __size_of_INT1_ISR 000C  
               __size_of_INT2_ISR 000C                    __end_of___wmul 1676  
                   delay_ms@count 0019                        _write_data 1706  
                   __pidataCOMRAM 1676                    __end_of_chkisr 122A  
        ?_TFT_GreenTab_Initialize 0001                        drawtext@bg 00AB  
                  __end_of_printf 15FA                    __end_of_strcpy 159E  
                  __end_of_strlen 152E               start_initialization 14AE  
                 ??_write_command 0011                         _OpenUSART 122A  
             __size_of_fillCircle 005A                  __CFG_OSC$INTIO67 000000  
               __size_of_Init_ADC 000A                 __size_of_Rcmd2red 003E  
             __size_of_fillScreen 001C               __size_of_drawCircle 01AE  
                        ??___wmul 0013                          ??_chkisr 0001  
                 setAddrWindow@x0 0015                   setAddrWindow@x1 0013  
                 setAddrWindow@y0 0012                   setAddrWindow@y1 0014  
                        ??_printf 0012                          ??_strcpy 0013  
                        ??_strlen 0011                      _PED_EW_Count 0046  
                     __pbssCOMRAM 005C                   ??_setAddrWindow 0015  
                   __pcstackBANK0 00A6                      _PED_NS_Count 0049  
                     ??_LCD_Reset 001B          __end_of_fillCircleHelper 0C9E  
               __size_of_delay_ms 0052                          ?_Do_Init 0001  
               __size_of_fillRect 004A                 __size_of_drawChar 0156  
                      ?_OpenUSART 000F                 __size_of_drawRect 0066  
               __size_of_drawtext 0118                         __pintcode 0008  
 __end_of_TFT_GreenTab_Initialize 1624                     __pmediumconst FD5C  
                       __tft_type 006B                         _direction 006E  
              drawFastVLine@color 0018                       ?_write_data 0001  
                       _drawPixel 159E                 __size_of_spiwrite 0014  
                        ?_init_IO 0001                 _Initialize_Screen 001C  
                  __size_of_Rcmd1 0110                    __size_of_Rcmd3 00F2  
                       _init_UART 16E0                ?_Initialize_Screen 0001  
                  __size_of_putch 000E                          _INT0_ISR 174C  
                        _INT1_ISR 1740                          _INT2_ISR 1734  
                  ___wmul@product 0013               ??_Initialize_Screen 0039  
                        _PIE1bits 000F9D                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _EW_Count 003D  
                       fillRect@h 0023                         fillRect@i 002A  
                       fillRect@w 0022                         fillRect@x 0029  
                       fillRect@y 0021                         drawChar@c 002D  
                       drawChar@i 0036                         drawChar@j 0035  
                    ??_fillCircle 0039                         drawChar@x 0034  
                       drawChar@y 002C                        ?_drawPixel 0016  
          __size_of_fillRectangle 00DC                          _NS_Count 0043  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 000F  
       __end_of_Initialize_Screen 0862                      ??_fillScreen 0024  
                       drawRect@h 0027                         drawRect@w 0025  
                       drawRect@x 0021                         drawRect@y 0023  
                   _FlashingR_Txt 004E                     _FlashingS_Txt 0050  
                    ??_drawCircle 0022                          _SW_EWPED 0067  
                        _SW_NSPED 006A                        ?_init_UART 0001  
          __size_of_drawFastHLine 0088                       _INTCON2bits 000FF1  
                     _INTCON3bits 000FF0                         copy_data0 14DA  
                       drawtext@i 00B1            __size_of_drawFastVLine 0088  
                       drawtext@x 00AE                         drawtext@y 00A6  
                        _Init_ADC 1758                 write_command@cmd_ 0011  
                     ??_OpenUSART 0011                          _Rcmd2red 152E  
                __size_of_Do_Init 002A               __size_of_write_data 0010  
                 OpenUSART@config 0011                __end_of_fillCircle 13C4  
                        __Hrparam 0000                __end_of_fillScreen 16B6  
                        __Lrparam 0000                __end_of_drawCircle 0A10  
                __size_of_init_IO 0016                          _delay_ms 13C4  
                        __ptext10 14F0                          __ptext11 0A10  
                        __ptext20 0EC6                          __ptext12 1464  
                        __ptext21 152E                          __ptext13 1304  
                        __ptext30 16E0                          __ptext22 0DB6  
                        __ptext14 1094                          __ptext31 122A  
                        __ptext23 1706                          __ptext15 111C  
                        __ptext32 16B6                          __ptext24 1716  
                        __ptext16 0862                          __ptext33 1758  
                        __ptext25 16CC                          __ptext17 159E  
                        __ptext26 16F4                          __ptext18 1416  
                        __ptext35 1734                          __ptext27 13C4  
                        __ptext19 15FA                          __ptext36 1740  
                        __ptext28 164E                          __ptext37 174C  
                        __ptext29 1624                          _fillRect 1464  
                        _drawChar 0A10                          _drawRect 1304  
__size_of_TFT_GreenTab_Initialize 002A                          _colstart 006C  
                        _drawtext 0C9E                        strcpy@from 0011  
                   _fillRectangle 0FB8                     __size_of_main 006A  
                 fillRectangle@hi 001F                   fillRectangle@lo 0020  
                   _drawFastHLine 111C                     _drawFastVLine 1094  
                        _spiwrite 16CC                       ??_drawPixel 0019  
                        _rowstart 006F                fillCircleHelper@x0 0021  
              fillCircleHelper@y0 0023        __size_of_Initialize_Screen 0846  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 000F  
                     ??_init_UART 0012                        _EWLT_Count 003A  
               ?_fillCircleHelper 0021                         spiwrite@x 000F  
                        intlevel2 0000                    ?_fillRectangle 0016  
              ??_fillCircleHelper 002D             __end_of_write_command 1726  
                 fillScreen@color 0022                      fillCircle@x0 00A6  
                    fillCircle@y0 00A8                    ?_drawFastHLine 0016  
                  fillRectangle@h 0018                    fillRectangle@w 0017  
                  fillRectangle@x 0021                    fillRectangle@y 0016  
                  ?_drawFastVLine 0016                          printf@ap 0012  
               fillCircleHelper@f 0033                 fillCircleHelper@r 0025  
               fillCircleHelper@x 0035                 fillCircleHelper@y 0037  
                    ??_write_data 0011                     fillRect@color 0024  
                        strcpy@cp 0013                          strlen@cp 0013  
                        strcpy@to 000F                        _NSLT_Count 0040  
                     fillCircle@r 00AA             __end_of_setAddrWindow 1464  
              fillRectangle@color 0019                     drawChar@color 002E  
              __end_of_write_data 1716                      drawChar@line 0033  
                    drawChar@size 0032  
